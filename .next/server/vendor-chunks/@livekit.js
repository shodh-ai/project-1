"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@livekit";
exports.ids = ["vendor-chunks/@livekit"];
exports.modules = {

/***/ "(ssr)/./node_modules/@livekit/components-styles/dist/general/index.css":
/*!************************************************************************!*\
  !*** ./node_modules/@livekit/components-styles/dist/general/index.css ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"9edaa8369896\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGxpdmVraXQvY29tcG9uZW50cy1zdHlsZXMvZGlzdC9nZW5lcmFsL2luZGV4LmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2FuaW1hLXByb2plY3QvLi9ub2RlX21vZHVsZXMvQGxpdmVraXQvY29tcG9uZW50cy1zdHlsZXMvZGlzdC9nZW5lcmFsL2luZGV4LmNzcz9hNTc4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiOWVkYWE4MzY5ODk2XCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-styles/dist/general/index.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/@livekit/components-react/dist/components-3NBkfi42.mjs":
/*!*****************************************************************************!*\
  !*** ./node_modules/@livekit/components-react/dist/components-3NBkfi42.mjs ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ wa),\n/* harmony export */   B: () => (/* binding */ Xt),\n/* harmony export */   C: () => (/* binding */ ra),\n/* harmony export */   D: () => (/* binding */ ca),\n/* harmony export */   E: () => (/* binding */ vt),\n/* harmony export */   F: () => (/* binding */ ha),\n/* harmony export */   G: () => (/* binding */ va),\n/* harmony export */   H: () => (/* binding */ ie),\n/* harmony export */   I: () => (/* binding */ Et),\n/* harmony export */   J: () => (/* binding */ pt),\n/* harmony export */   K: () => (/* binding */ wt),\n/* harmony export */   L: () => (/* binding */ pa),\n/* harmony export */   M: () => (/* binding */ ua),\n/* harmony export */   N: () => (/* binding */ kt),\n/* harmony export */   O: () => (/* binding */ Rt),\n/* harmony export */   P: () => (/* binding */ Bt),\n/* harmony export */   Q: () => (/* binding */ Mt),\n/* harmony export */   R: () => (/* binding */ Ra),\n/* harmony export */   S: () => (/* binding */ la),\n/* harmony export */   T: () => (/* binding */ fa),\n/* harmony export */   U: () => (/* binding */ yt),\n/* harmony export */   V: () => (/* binding */ Ft),\n/* harmony export */   W: () => (/* binding */ bt),\n/* harmony export */   X: () => (/* binding */ Me),\n/* harmony export */   Y: () => (/* binding */ St),\n/* harmony export */   Z: () => (/* binding */ oe),\n/* harmony export */   _: () => (/* binding */ Ct),\n/* harmony export */   a: () => (/* binding */ Sa),\n/* harmony export */   b: () => (/* binding */ Pt),\n/* harmony export */   c: () => (/* binding */ sa),\n/* harmony export */   d: () => (/* binding */ ia),\n/* harmony export */   e: () => (/* binding */ oa),\n/* harmony export */   f: () => (/* binding */ ma),\n/* harmony export */   g: () => (/* binding */ Ea),\n/* harmony export */   h: () => (/* binding */ ga),\n/* harmony export */   i: () => (/* binding */ ba),\n/* harmony export */   j: () => (/* binding */ Ie),\n/* harmony export */   k: () => (/* binding */ ya),\n/* harmony export */   l: () => (/* binding */ $t),\n/* harmony export */   m: () => (/* binding */ Ca),\n/* harmony export */   n: () => (/* binding */ aa),\n/* harmony export */   o: () => (/* binding */ na),\n/* harmony export */   p: () => (/* binding */ It),\n/* harmony export */   q: () => (/* binding */ da),\n/* harmony export */   r: () => (/* binding */ be),\n/* harmony export */   s: () => (/* binding */ ne),\n/* harmony export */   t: () => (/* binding */ K),\n/* harmony export */   u: () => (/* binding */ Se),\n/* harmony export */   v: () => (/* binding */ ka),\n/* harmony export */   w: () => (/* binding */ Ma),\n/* harmony export */   x: () => (/* binding */ Zt),\n/* harmony export */   y: () => (/* binding */ Ht),\n/* harmony export */   z: () => (/* binding */ gt)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./hooks-CWooKGw2.mjs */ \"(ssr)/./node_modules/@livekit/components-react/dist/hooks-CWooKGw2.mjs\");\n/* harmony import */ var _room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./room-BgiuQa2X.mjs */ \"(ssr)/./node_modules/@livekit/components-react/dist/room-BgiuQa2X.mjs\");\n/* harmony import */ var livekit_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! livekit-client */ \"(ssr)/./node_modules/livekit-client/dist/livekit-client.esm.mjs\");\n/* harmony import */ var _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contexts-CPsnPrz2.mjs */ \"(ssr)/./node_modules/@livekit/components-react/dist/contexts-CPsnPrz2.mjs\");\n\n\n\n\n\n\nconst aa = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(n, a) {\n    const { buttonProps: r } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(n);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: a,\n        ...r\n    }, n.children);\n}), na = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ room: n, ...a }, r) {\n    const c = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.a)(n);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: r,\n        ...a\n    }, c);\n}), ra = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(n, a) {\n    const { mergedProps: r } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.b)({\n        props: n\n    });\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: a,\n        ...r\n    }, n.children);\n}), ca = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(n, a) {\n    const { buttonProps: r } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(n);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: a,\n        ...r\n    }, n.children);\n}), gt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentColor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708L11 10.293V4.5A1.5 1.5 0 0 0 9.5 3H3.707zM0 4.5a1.5 1.5 0 0 1 .943-1.393l9.532 9.533c-.262.224-.603.36-.975.36h-8A1.5 1.5 0 0 1 0 11.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"m15.2 3.6-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\"\n    })), vt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentColor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 4.5A1.5 1.5 0 0 1 1.5 3h8A1.5 1.5 0 0 1 11 4.5v7A1.5 1.5 0 0 1 9.5 13h-8A1.5 1.5 0 0 1 0 11.5zM15.2 3.6l-2.8 2.1a1 1 0 0 0-.4.8v3a1 1 0 0 0 .4.8l2.8 2.1a.5.5 0 0 0 .8-.4V4a.5.5 0 0 0-.8-.4z\"\n    })), la = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        viewBox: \"0 0 24 24\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"#FFF\",\n        d: \"M4.99 3.99a1 1 0 0 0-.697 1.717L10.586 12l-6.293 6.293a1 1 0 1 0 1.414 1.414L12 13.414l6.293 6.293a1 1 0 1 0 1.414-1.414L13.414 12l6.293-6.293a1 1 0 0 0-.727-1.717 1 1 0 0 0-.687.303L12 10.586 5.707 4.293a1 1 0 0 0-.717-.303z\"\n    })), sa = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 18,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h10.5A2.75 2.75 0 0 1 16 2.75v13.594a.75.75 0 0 1-1.234.572l-3.691-3.12a1.25 1.25 0 0 0-.807-.296H2.75A2.75 2.75 0 0 1 0 10.75v-8ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v8c0 .69.56 1.25 1.25 1.25h7.518c.65 0 1.279.23 1.775.65l2.457 2.077V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M3 4.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5Zm0 2a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5Z\",\n        clipRule: \"evenodd\"\n    })), ie = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentcolor\",\n        fillRule: \"evenodd\",\n        d: \"M5.293 2.293a1 1 0 0 1 1.414 0l4.823 4.823a1.25 1.25 0 0 1 0 1.768l-4.823 4.823a1 1 0 0 1-1.414-1.414L9.586 8 5.293 3.707a1 1 0 0 1 0-1.414z\",\n        clipRule: \"evenodd\"\n    })), Et = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: 1.5\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M10 1.75h4.25m0 0V6m0-4.25L9 7M6 14.25H1.75m0 0V10m0 4.25L7 9\"\n    }))), ia = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentcolor\",\n        fillRule: \"evenodd\",\n        d: \"M8.961.894C8.875-.298 7.125-.298 7.04.894c-.066.912-1.246 1.228-1.76.472-.67-.99-2.186-.115-1.664.96.399.824-.465 1.688-1.288 1.289-1.076-.522-1.95.994-.961 1.665.756.513.44 1.693-.472 1.759-1.192.086-1.192 1.836 0 1.922.912.066 1.228 1.246.472 1.76-.99.67-.115 2.186.96 1.664.824-.399 1.688.465 1.289 1.288-.522 1.076.994 1.95 1.665.961.513-.756 1.693-.44 1.759.472.086 1.192 1.836 1.192 1.922 0 .066-.912 1.246-1.228 1.76-.472.67.99 2.186.115 1.664-.96-.399-.824.465-1.688 1.288-1.289 1.076.522 1.95-.994.961-1.665-.756-.513-.44-1.693.472-1.759 1.192-.086 1.192-1.836 0-1.922-.912-.066-1.228-1.246-.472-1.76.99-.67.115-2.186-.96-1.664-.824.399-1.688-.465-1.289-1.288.522-1.076-.994-1.95-1.665-.961-.513.756-1.693.44-1.759-.472ZM8 13A5 5 0 1 0 8 3a5 5 0 0 0 0 10Z\",\n        clipRule: \"evenodd\"\n    })), oa = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M2 2.75A2.75 2.75 0 0 1 4.75 0h6.5A2.75 2.75 0 0 1 14 2.75v10.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-.5a.75.75 0 0 1 1.5 0v.5c0 .69.56 1.25 1.25 1.25h6.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25h-6.5c-.69 0-1.25.56-1.25 1.25v.5a.75.75 0 0 1-1.5 0v-.5Z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M8.78 7.47a.75.75 0 0 1 0 1.06l-2.25 2.25a.75.75 0 1 1-1.06-1.06l.97-.97H1.75a.75.75 0 0 1 0-1.5h4.69l-.97-.97a.75.75 0 0 1 1.06-1.06l2.25 2.25Z\",\n        clipRule: \"evenodd\"\n    })), pt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentcolor\",\n        fillRule: \"evenodd\",\n        d: \"M4 6.104V4a4 4 0 1 1 8 0v2.104c1.154.326 2 1.387 2 2.646v4.5A2.75 2.75 0 0 1 11.25 16h-6.5A2.75 2.75 0 0 1 2 13.25v-4.5c0-1.259.846-2.32 2-2.646ZM5.5 4a2.5 2.5 0 0 1 5 0v2h-5V4Z\",\n        clipRule: \"evenodd\"\n    })), wt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentColor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M12.227 11.52a5.477 5.477 0 0 0 1.246-2.97.5.5 0 0 0-.995-.1 4.478 4.478 0 0 1-.962 2.359l-1.07-1.07C10.794 9.247 11 8.647 11 8V3a3 3 0 0 0-6 0v1.293L1.354.646a.5.5 0 1 0-.708.708l14 14a.5.5 0 0 0 .708-.708zM8 12.5c.683 0 1.33-.152 1.911-.425l.743.743c-.649.359-1.378.59-2.154.66V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .995-.098A4.5 4.5 0 0 0 8 12.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M8.743 10.907 5 7.164V8a3 3 0 0 0 3.743 2.907z\"\n    })), kt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentColor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M2.975 8.002a.5.5 0 0 1 .547.449 4.5 4.5 0 0 0 8.956 0 .5.5 0 1 1 .995.098A5.502 5.502 0 0 1 8.5 13.478V15h2a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1h2v-1.522a5.502 5.502 0 0 1-4.973-4.929.5.5 0 0 1 .448-.547z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M5 3a3 3 0 1 1 6 0v5a3 3 0 0 1-6 0z\"\n    })), Rt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentcolor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    })), Mt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentcolor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        opacity: 0.25\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }))), yt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentcolor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        opacity: 0.25\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M6 6.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M12 .5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5z\"\n    }))), bt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"currentColor\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        opacity: 0.25\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M0 11.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-4Zm6-5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5v-9Zm6-6a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 .5.5v15a.5.5 0 0 1-.5.5h-3a.5.5 0 0 1-.5-.5V.5Z\"\n    }))), Me = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 20,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M0 2.75A2.75 2.75 0 0 1 2.75 0h14.5A2.75 2.75 0 0 1 20 2.75v10.5A2.75 2.75 0 0 1 17.25 16H2.75A2.75 2.75 0 0 1 0 13.25V2.75ZM2.75 1.5c-.69 0-1.25.56-1.25 1.25v10.5c0 .69.56 1.25 1.25 1.25h14.5c.69 0 1.25-.56 1.25-1.25V2.75c0-.69-.56-1.25-1.25-1.25H2.75Z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M9.47 4.22a.75.75 0 0 1 1.06 0l2.25 2.25a.75.75 0 0 1-1.06 1.06l-.97-.97v4.69a.75.75 0 0 1-1.5 0V6.56l-.97.97a.75.75 0 0 1-1.06-1.06l2.25-2.25Z\",\n        clipRule: \"evenodd\"\n    })), St = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 20,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        fill: \"currentColor\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M7.28 4.22a.75.75 0 0 0-1.06 1.06L8.94 8l-2.72 2.72a.75.75 0 1 0 1.06 1.06L10 9.06l2.72 2.72a.75.75 0 1 0 1.06-1.06L11.06 8l2.72-2.72a.75.75 0 0 0-1.06-1.06L10 6.94z\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        d: \"M2.75 0A2.75 2.75 0 0 0 0 2.75v10.5A2.75 2.75 0 0 0 2.75 16h14.5A2.75 2.75 0 0 0 20 13.25V2.75A2.75 2.75 0 0 0 17.25 0zM1.5 2.75c0-.69.56-1.25 1.25-1.25h14.5c.69 0 1.25.56 1.25 1.25v10.5c0 .69-.56 1.25-1.25 1.25H2.75c-.69 0-1.25-.56-1.25-1.25z\",\n        clipRule: \"evenodd\"\n    }))), oe = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M8 0a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0V.75A.75.75 0 0 1 8 0Z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M8 12a.75.75 0 0 1 .75.75v2.5a.75.75 0 0 1-1.5 0v-2.5A.75.75 0 0 1 8 12Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.7\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M12 1.072a.75.75 0 0 1 .274 1.024l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 12 1.072Z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M6 11.464a.75.75 0 0 1 .274 1.025l-1.25 2.165a.75.75 0 0 1-1.299-.75l1.25-2.165A.75.75 0 0 1 6 11.464Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.6\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M14.928 4a.75.75 0 0 1-.274 1.025l-2.165 1.25a.75.75 0 1 1-.75-1.3l2.165-1.25A.75.75 0 0 1 14.928 4Z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M4.536 10a.75.75 0 0 1-.275 1.024l-2.165 1.25a.75.75 0 0 1-.75-1.298l2.165-1.25A.75.75 0 0 1 4.536 10Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.5\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M16 8a.75.75 0 0 1-.75.75h-2.5a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 16 8Z\",\n        clipRule: \"evenodd\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M4 8a.75.75 0 0 1-.75.75H.75a.75.75 0 0 1 0-1.5h2.5A.75.75 0 0 1 4 8Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.4\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M14.928 12a.75.75 0 0 1-1.024.274l-2.165-1.25a.75.75 0 0 1 .75-1.299l2.165 1.25A.75.75 0 0 1 14.928 12Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.9\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M4.536 6a.75.75 0 0 1-1.025.275l-2.165-1.25a.75.75 0 1 1 .75-1.3l2.165 1.25A.75.75 0 0 1 4.536 6Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.3\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M12 14.928a.75.75 0 0 1-1.024-.274l-1.25-2.165a.75.75 0 0 1 1.298-.75l1.25 2.165A.75.75 0 0 1 12 14.928Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.8\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        fill: \"currentColor\",\n        fillRule: \"evenodd\",\n        d: \"M6 4.536a.75.75 0 0 1-1.024-.275l-1.25-2.165a.75.75 0 1 1 1.299-.75l1.25 2.165A.75.75 0 0 1 6 4.536Z\",\n        clipRule: \"evenodd\",\n        opacity: 0.2\n    })), Ct = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: 16,\n        height: 16,\n        fill: \"none\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: 1.5\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M13.25 7H9m0 0V2.75M9 7l5.25-5.25M2.75 9H7m0 0v4.25M7 9l-5.25 5.25\"\n    }))), It = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ trackRef: n, ...a }, r) {\n    const c = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.aa)(), { mergedProps: s, inFocus: o } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.d)({\n        trackRef: n ?? c,\n        props: a\n    });\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ab.Consumer, null, (l)=>l !== void 0 && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n            ref: r,\n            ...s\n        }, a.children ? a.children : o ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Ct, null) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Et, null)));\n}), ua = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ kind: n, initialSelection: a, onActiveDeviceChange: r, onDeviceListChange: c, onDeviceSelectError: s, exactMatch: o, track: l, requestPermissions: i, onError: u, ...d }, g) {\n    const f = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.w)(), w = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((E)=>{\n        f && f.emit(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.MediaDevicesError, E), u == null || u(E);\n    }, [\n        f,\n        u\n    ]), { devices: p, activeDeviceId: m, setActiveMediaDevice: v, className: b } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.e)({\n        kind: n,\n        room: f,\n        track: l,\n        requestPermissions: i,\n        onError: w\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        a !== void 0 && v(a);\n    }, [\n        v\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        typeof c == \"function\" && c(p);\n    }, [\n        c,\n        p\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        m && m !== \"\" && (r == null || r(m));\n    }, [\n        m\n    ]);\n    const C = async (E)=>{\n        try {\n            await v(E, {\n                exact: o ?? !0\n            });\n        } catch (k) {\n            if (k instanceof Error) s == null || s(k);\n            else throw k;\n        }\n    }, T = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(d, {\n            className: b\n        }, {\n            className: \"lk-list\"\n        }), [\n        b,\n        d\n    ]), A = !!p.find((E)=>E.label.toLowerCase().startsWith(\"default\"));\n    function h(E, k, I) {\n        return E === k || !A && I === 0 && k === \"default\";\n    }\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ul\", {\n        ref: g,\n        ...T\n    }, p.map((E, k)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", {\n            key: E.deviceId,\n            id: E.deviceId,\n            \"data-lk-active\": h(E.deviceId, m, k),\n            \"aria-selected\": h(E.deviceId, m, k),\n            role: \"option\"\n        }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n            className: \"lk-button\",\n            onClick: ()=>C(E.deviceId)\n        }, E.label))));\n}), da = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ label: n = \"Allow Audio\", ...a }, r) {\n    const c = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.f)(), { mergedProps: s } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)({\n        room: c,\n        props: a\n    });\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: r,\n        ...s\n    }, n);\n}), ma = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ label: n, ...a }, r) {\n    const c = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.f)(), { mergedProps: s, canPlayAudio: o } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)({\n        room: c,\n        props: a\n    }), { mergedProps: l, canPlayVideo: i } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.g)({\n        room: c,\n        props: s\n    }), { style: u, ...d } = l;\n    return u.display = o && i ? \"none\" : \"block\", /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: r,\n        style: u,\n        ...d\n    }, n ?? `Start ${o ? \"Video\" : \"Audio\"}`);\n});\nfunction ye(t, n) {\n    switch(t){\n        case livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone:\n            return n ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(kt, null) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(wt, null);\n        case livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera:\n            return n ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(vt, null) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(gt, null);\n        case livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.ScreenShare:\n            return n ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(St, null) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Me, null);\n        default:\n            return;\n    }\n}\nfunction xt(t) {\n    switch(t){\n        case livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionQuality.Excellent:\n            return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Rt, null);\n        case livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionQuality.Good:\n            return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Mt, null);\n        case livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionQuality.Poor:\n            return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(yt, null);\n        default:\n            return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(bt, null);\n    }\n}\nconst fa = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ showIcon: n, ...a }, r) {\n    const { buttonProps: c, enabled: s } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.h)(a), [o, l] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        l(!0);\n    }, []), o && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        ref: r,\n        ...c\n    }, (n ?? !0) && ye(a.source, s), a.children);\n}), be = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(n, a) {\n    const { className: r, quality: c } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.i)(n), s = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            ...(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(n, {\n                className: r\n            }),\n            \"data-lk-quality\": c\n        }), [\n        c,\n        n,\n        r\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: a,\n        ...s\n    }, n.children ?? xt(c));\n}), K = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ participant: n, ...a }, r) {\n    const c = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.c)(n), { className: s, infoObserver: o } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ac)(c), [\n        c\n    ]), { identity: l, name: i } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.j)(o, {\n        name: c.name,\n        identity: c.identity,\n        metadata: c.metadata\n    }), u = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(a, {\n            className: s,\n            \"data-lk-participant-name\": i\n        }), [\n        a,\n        s,\n        i\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        ref: r,\n        ...u\n    }, i !== \"\" ? i : l, a.children);\n}), Se = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ trackRef: n, show: a = \"always\", ...r }, c) {\n    const { className: s, isMuted: o } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.k)(n), l = a === \"always\" || a === \"muted\" && o || a === \"unmuted\" && !o, i = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(r, {\n            className: s\n        }), [\n        s,\n        r\n    ]);\n    return l ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: c,\n        ...i,\n        \"data-lk-muted\": o\n    }, r.children ?? ye(n.source, !o)) : null;\n}), Pt = (t)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        width: 320,\n        height: 320,\n        viewBox: \"0 0 320 320\",\n        preserveAspectRatio: \"xMidYMid meet\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        ...t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M160 180C204.182 180 240 144.183 240 100C240 55.8172 204.182 20 160 20C115.817 20 79.9997 55.8172 79.9997 100C79.9997 144.183 115.817 180 160 180Z\",\n        fill: \"white\",\n        fillOpacity: 0.25\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n        d: \"M97.6542 194.614C103.267 191.818 109.841 192.481 115.519 195.141C129.025 201.466 144.1 205 159.999 205C175.899 205 190.973 201.466 204.48 195.141C210.158 192.481 216.732 191.818 222.345 194.614C262.703 214.719 291.985 253.736 298.591 300.062C300.15 310.997 291.045 320 280 320H39.9997C28.954 320 19.8495 310.997 21.4087 300.062C28.014 253.736 57.2966 214.72 97.6542 194.614Z\",\n        fill: \"white\",\n        fillOpacity: 0.25\n    }));\nfunction Ce(t, n = {}) {\n    const [a, r] = react__WEBPACK_IMPORTED_MODULE_0__.useState((0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.X)(t)), [c, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState(a == null ? void 0 : a.isMuted), [o, l] = react__WEBPACK_IMPORTED_MODULE_0__.useState(a == null ? void 0 : a.isSubscribed), [i, u] = react__WEBPACK_IMPORTED_MODULE_0__.useState(a == null ? void 0 : a.track), [d, g] = react__WEBPACK_IMPORTED_MODULE_0__.useState(\"landscape\"), f = react__WEBPACK_IMPORTED_MODULE_0__.useRef(), { className: w, trackObserver: p } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.Y)(t), [\n        t.participant.sid ?? t.participant.identity,\n        t.source,\n        (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.a1)(t) && t.publication.trackSid\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const m = p.subscribe((v)=>{\n            _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug(\"update track\", v), r(v), s(v == null ? void 0 : v.isMuted), l(v == null ? void 0 : v.isSubscribed), u(v == null ? void 0 : v.track);\n        });\n        return ()=>m == null ? void 0 : m.unsubscribe();\n    }, [\n        p\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var m, v;\n        return i && (f.current && i.detach(f.current), (m = n.element) != null && m.current && !(t.participant.isLocal && (i == null ? void 0 : i.kind) === \"audio\") && i.attach(n.element.current)), f.current = (v = n.element) == null ? void 0 : v.current, ()=>{\n            f.current && (i == null || i.detach(f.current));\n        };\n    }, [\n        i,\n        n.element\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var m, v;\n        if (typeof ((m = a == null ? void 0 : a.dimensions) == null ? void 0 : m.width) == \"number\" && typeof ((v = a == null ? void 0 : a.dimensions) == null ? void 0 : v.height) == \"number\") {\n            const b = a.dimensions.width > a.dimensions.height ? \"landscape\" : \"portrait\";\n            g(b);\n        }\n    }, [\n        a\n    ]), {\n        publication: a,\n        isMuted: c,\n        isSubscribed: o,\n        track: i,\n        elementProps: (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(n.props, {\n            className: w,\n            \"data-lk-local-participant\": t.participant.isLocal,\n            \"data-lk-source\": a == null ? void 0 : a.source,\n            ...(a == null ? void 0 : a.kind) === \"video\" && {\n                \"data-lk-orientation\": d\n            }\n        })\n    };\n}\nvar Y, ue;\nfunction Tt() {\n    if (ue) return Y;\n    ue = 1;\n    var t = \"Expected a function\", n = NaN, a = \"[object Symbol]\", r = /^\\s+|\\s+$/g, c = /^[-+]0x[0-9a-f]+$/i, s = /^0b[01]+$/i, o = /^0o[0-7]+$/i, l = parseInt, i = typeof _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ad == \"object\" && _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ad && _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ad.Object === Object && _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ad, u = typeof self == \"object\" && self && self.Object === Object && self, d = i || u || Function(\"return this\")(), g = Object.prototype, f = g.toString, w = Math.max, p = Math.min, m = function() {\n        return d.Date.now();\n    };\n    function v(h, E, k) {\n        var I, V, O, N, M, P, F = 0, re = !1, Z = !1, D = !0;\n        if (typeof h != \"function\") throw new TypeError(t);\n        E = A(E) || 0, b(k) && (re = !!k.leading, Z = \"maxWait\" in k, O = Z ? w(A(k.maxWait) || 0, E) : O, D = \"trailing\" in k ? !!k.trailing : D);\n        function U(R) {\n            var x = I, H = V;\n            return I = V = void 0, F = R, N = h.apply(H, x), N;\n        }\n        function Pe(R) {\n            return F = R, M = setTimeout(W, E), re ? U(R) : N;\n        }\n        function Te(R) {\n            var x = R - P, H = R - F, se = E - x;\n            return Z ? p(se, O - H) : se;\n        }\n        function ce(R) {\n            var x = R - P, H = R - F;\n            return P === void 0 || x >= E || x < 0 || Z && H >= O;\n        }\n        function W() {\n            var R = m();\n            if (ce(R)) return le(R);\n            M = setTimeout(W, Te(R));\n        }\n        function le(R) {\n            return M = void 0, D && I ? U(R) : (I = V = void 0, N);\n        }\n        function Ae() {\n            M !== void 0 && clearTimeout(M), F = 0, I = P = V = M = void 0;\n        }\n        function Ne() {\n            return M === void 0 ? N : le(m());\n        }\n        function G() {\n            var R = m(), x = ce(R);\n            if (I = arguments, V = this, P = R, x) {\n                if (M === void 0) return Pe(P);\n                if (Z) return M = setTimeout(W, E), U(P);\n            }\n            return M === void 0 && (M = setTimeout(W, E)), N;\n        }\n        return G.cancel = Ae, G.flush = Ne, G;\n    }\n    function b(h) {\n        var E = typeof h;\n        return !!h && (E == \"object\" || E == \"function\");\n    }\n    function C(h) {\n        return !!h && typeof h == \"object\";\n    }\n    function T(h) {\n        return typeof h == \"symbol\" || C(h) && f.call(h) == a;\n    }\n    function A(h) {\n        if (typeof h == \"number\") return h;\n        if (T(h)) return n;\n        if (b(h)) {\n            var E = typeof h.valueOf == \"function\" ? h.valueOf() : h;\n            h = b(E) ? E + \"\" : E;\n        }\n        if (typeof h != \"string\") return h === 0 ? h : +h;\n        h = h.replace(r, \"\");\n        var k = s.test(h);\n        return k || o.test(h) ? l(h.slice(2), k ? 2 : 8) : c.test(h) ? n : +h;\n    }\n    return Y = v, Y;\n}\nvar At = Tt();\nconst de = /* @__PURE__ */ (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ae)(At);\nfunction Nt(t) {\n    const n = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(t);\n    n.current = t, (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>()=>{\n            n.current();\n        }, []);\n}\nfunction Lt(t, n = 500, a) {\n    const r = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    Nt(()=>{\n        r.current && r.current.cancel();\n    });\n    const c = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const s = de(t, n, a), o = (...l)=>s(...l);\n        return o.cancel = ()=>{\n            s.cancel();\n        }, o.isPending = ()=>!!r.current, o.flush = ()=>s.flush(), o;\n    }, [\n        t,\n        n,\n        a\n    ]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        r.current = de(t, n, a);\n    }, [\n        t,\n        n,\n        a\n    ]), c;\n}\nfunction zt(t, n, a) {\n    const r = (u, d)=>u === d, c = t instanceof Function ? t() : t, [s, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(c), l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(c), i = Lt(o, n, a);\n    return r(l.current, c) || (i(c), l.current = c), [\n        s,\n        i\n    ];\n}\nfunction Vt({ threshold: t = 0, root: n = null, rootMargin: a = \"0%\", freezeOnceVisible: r = !1, initialIsIntersecting: c = !1, onChange: s } = {}) {\n    var o;\n    const [l, i] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), [u, d] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>({\n            isIntersecting: c,\n            entry: void 0\n        })), g = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    g.current = s;\n    const f = ((o = u.entry) == null ? void 0 : o.isIntersecting) && r;\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!l || !(\"IntersectionObserver\" in window) || f) return;\n        const m = new IntersectionObserver((v)=>{\n            const b = Array.isArray(m.thresholds) ? m.thresholds : [\n                m.thresholds\n            ];\n            v.forEach((C)=>{\n                const T = C.isIntersecting && b.some((A)=>C.intersectionRatio >= A);\n                d({\n                    isIntersecting: T,\n                    entry: C\n                }), g.current && g.current(T, C);\n            });\n        }, {\n            threshold: t,\n            root: n,\n            rootMargin: a\n        });\n        return m.observe(l), ()=>{\n            m.disconnect();\n        };\n    }, [\n        l,\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        JSON.stringify(t),\n        n,\n        a,\n        f,\n        r\n    ]);\n    const w = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        var m;\n        !l && (m = u.entry) != null && m.target && !r && !f && w.current !== u.entry.target && (w.current = u.entry.target, d({\n            isIntersecting: c,\n            entry: void 0\n        }));\n    }, [\n        l,\n        u.entry,\n        r,\n        f,\n        c\n    ]);\n    const p = [\n        i,\n        !!u.isIntersecting,\n        u.entry\n    ];\n    return p.ref = p[0], p.isIntersecting = p[1], p.entry = p[2], p;\n}\nconst Ft = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ onTrackClick: n, onClick: a, onSubscriptionStatusChanged: r, trackRef: c, manageSubscription: s, ...o }, l) {\n    const i = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(c), u = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(l, ()=>u.current);\n    const d = Vt({\n        root: u.current\n    }), [g] = zt(d, 3e3);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        s && i.publication instanceof livekit_client__WEBPACK_IMPORTED_MODULE_1__.RemoteTrackPublication && (g == null ? void 0 : g.isIntersecting) === !1 && (d == null ? void 0 : d.isIntersecting) === !1 && i.publication.setSubscribed(!1);\n    }, [\n        g,\n        i,\n        s\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        s && i.publication instanceof livekit_client__WEBPACK_IMPORTED_MODULE_1__.RemoteTrackPublication && (d == null ? void 0 : d.isIntersecting) === !0 && i.publication.setSubscribed(!0);\n    }, [\n        d,\n        i,\n        s\n    ]);\n    const { elementProps: f, publication: w, isSubscribed: p } = Ce(i, {\n        element: u,\n        props: o\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        r == null || r(!!p);\n    }, [\n        p,\n        r\n    ]);\n    const m = (v)=>{\n        a == null || a(v), n == null || n({\n            participant: i == null ? void 0 : i.participant,\n            track: w\n        });\n    };\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"video\", {\n        ref: u,\n        ...f,\n        muted: !0,\n        onClick: m\n    });\n}), ne = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ trackRef: n, onSubscriptionStatusChanged: a, volume: r, ...c }, s) {\n    const o = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(n), l = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n    react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(s, ()=>l.current);\n    const { elementProps: i, isSubscribed: u, track: d, publication: g } = Ce(o, {\n        element: l,\n        props: c\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        a == null || a(!!u);\n    }, [\n        u,\n        a\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        d === void 0 || r === void 0 || (d instanceof livekit_client__WEBPACK_IMPORTED_MODULE_1__.RemoteAudioTrack ? d.setVolume(r) : _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.l.warn(\"Volume can only be set on remote audio tracks.\"));\n    }, [\n        r,\n        d\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        g === void 0 || c.muted === void 0 || (g instanceof livekit_client__WEBPACK_IMPORTED_MODULE_1__.RemoteTrackPublication ? g.setEnabled(!c.muted) : _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.l.warn(\"Can only call setEnabled on remote track publications.\"));\n    }, [\n        c.muted,\n        g,\n        d\n    ]), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"audio\", {\n        ref: l,\n        ...i\n    });\n});\nfunction Zt(t) {\n    const n = !!(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.B)();\n    return t.participant && !n ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.af.Provider, {\n        value: t.participant\n    }, t.children) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, t.children);\n}\nfunction Ht(t) {\n    const n = !!(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.aa)();\n    return t.trackRef && !n ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ag.Provider, {\n        value: t.trackRef\n    }, t.children) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, t.children);\n}\nconst Bt = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ trackRef: n, children: a, onParticipantClick: r, disableSpeakingIndicator: c, ...s }, o) {\n    var w, p;\n    const l = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(n), { elementProps: i } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.l)({\n        htmlProps: s,\n        disableSpeakingIndicator: c,\n        onParticipantClick: r,\n        trackRef: l\n    }), u = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.m)(l.participant), d = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.j)(), g = (w = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ah)()) == null ? void 0 : w.autoSubscription, f = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((m)=>{\n        l.source && !m && d && d.pin.dispatch && (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(l, d.pin.state) && d.pin.dispatch({\n            msg: \"clear_pin\"\n        });\n    }, [\n        l,\n        d\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: o,\n        style: {\n            position: \"relative\"\n        },\n        ...i\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Ht, {\n        trackRef: l\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Zt, {\n        participant: l.participant\n    }, a ?? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.a1)(l) && (((p = l.publication) == null ? void 0 : p.kind) === \"video\" || l.source === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera || l.source === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.ScreenShare) ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Ft, {\n        trackRef: l,\n        onSubscriptionStatusChanged: f,\n        manageSubscription: g\n    }) : (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.a1)(l) && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ne, {\n        trackRef: l,\n        onSubscriptionStatusChanged: f\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lk-participant-placeholder\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Pt, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lk-participant-metadata\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lk-participant-metadata-item\"\n    }, l.source === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, u && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(pt, {\n        style: {\n            marginRight: \"0.25rem\"\n        }\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Se, {\n        trackRef: {\n            participant: l.participant,\n            source: livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone\n        },\n        show: \"muted\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(K, null)) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Me, {\n        style: {\n            marginRight: \"0.25rem\"\n        }\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(K, null, \"'s screen\"))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(be, {\n        className: \"lk-participant-metadata-item\"\n    }))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(It, {\n        trackRef: l\n    }))));\n});\nfunction ha(t) {\n    const n = (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(t, {\n        className: \"lk-focus-layout\"\n    });\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ...n\n    }, t.children);\n}\nfunction ga({ trackRef: t, ...n }) {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Bt, {\n        trackRef: t,\n        ...n\n    });\n}\nfunction Ie({ tracks: t, ...n }) {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, t.map((a)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ag.Provider, {\n            value: a,\n            key: (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.p)(a)\n        }, (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.c)(n.children))));\n}\nfunction jt({ totalPageCount: t, nextPage: n, prevPage: a, currentPage: r, pagesContainer: c }) {\n    const [s, o] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!1);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        let l;\n        return c && (l = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ai)(c.current, 2e3).subscribe(o)), ()=>{\n            l && l.unsubscribe();\n        };\n    }, [\n        c\n    ]), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lk-pagination-control\",\n        \"data-lk-user-interaction\": s\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        className: \"lk-button\",\n        onClick: a\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ie, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"lk-pagination-count\"\n    }, `${r} of ${t}`), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", {\n        className: \"lk-button\",\n        onClick: n\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ie, null)));\n}\nconst _t = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ totalPageCount: n, currentPage: a }, r) {\n    const c = new Array(n).fill(\"\").map((s, o)=>o + 1 === a ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            \"data-lk-active\": !0,\n            key: o\n        }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            key: o\n        }));\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: r,\n        className: \"lk-pagination-indicator\"\n    }, c);\n});\nfunction va({ tracks: t, ...n }) {\n    const a = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createRef(), r = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(n, {\n            className: \"lk-grid-layout\"\n        }), [\n        n\n    ]), { layout: c } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.n)(a, t.length), s = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.o)(c.maxTiles, t);\n    return (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.p)(a, {\n        onLeftSwipe: s.nextPage,\n        onRightSwipe: s.prevPage\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: a,\n        \"data-lk-pagination\": s.totalPageCount > 1,\n        ...r\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Ie, {\n        tracks: s.tracks\n    }, n.children), t.length > c.maxTiles && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_t, {\n        totalPageCount: s.totalPageCount,\n        currentPage: s.currentPage\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(jt, {\n        pagesContainer: a,\n        ...s\n    })));\n}\nconst Ot = 130, Wt = 140, me = 1, xe = 16 / 10, qt = (1 - xe) * -1;\nfunction Ea({ tracks: t, orientation: n, ...a }) {\n    const r = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), [c, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0), { width: o, height: l } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.q)(r), i = n || (l >= o ? \"vertical\" : \"horizontal\"), u = i === \"vertical\" ? Math.max(o * qt, Ot) : Math.max(l * xe, Wt), d = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.aj)(), g = Math.max(i === \"vertical\" ? (l - d) / u : (o - d) / u, me);\n    let f = Math.round(g);\n    Math.abs(g - c) < 0.5 ? f = Math.round(c) : c !== g && s(g);\n    const w = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.r)(t, f);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        r.current && (r.current.dataset.lkOrientation = i, r.current.style.setProperty(\"--lk-max-visible-tiles\", f.toString()));\n    }, [\n        f,\n        i\n    ]), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"aside\", {\n        key: i,\n        className: \"lk-carousel\",\n        ref: r,\n        ...a\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Ie, {\n        tracks: w\n    }, a.children));\n}\nfunction pa({ value: t, onPinChange: n, onWidgetChange: a, children: r }) {\n    const c = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ak)(t);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug(\"PinState Updated\", {\n            state: c.pin.state\n        }), n && c.pin.state && n(c.pin.state);\n    }, [\n        c.pin.state,\n        n\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.l.debug(\"Widget Updated\", {\n            widgetState: c.widget.state\n        }), a && c.widget.state && a(c.widget.state);\n    }, [\n        a,\n        c.widget.state\n    ]), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ab.Provider, {\n        value: c\n    }, r);\n}\nconst wa = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ trackRef: n, ...a }, r) {\n    const d = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(n), g = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.s)(d, {\n        bands: 7,\n        loPass: 300\n    });\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n        ref: r,\n        width: \"100%\",\n        height: \"100%\",\n        viewBox: \"0 0 200 90\",\n        ...a,\n        className: \"lk-audio-visualizer\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n        x: \"0\",\n        y: \"0\",\n        width: \"100%\",\n        height: \"100%\"\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n        style: {\n            transform: `translate(${(200 - 7 * 10) / 2}px, 0)`\n        }\n    }, g.map((f, w)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"rect\", {\n            key: w,\n            x: w * 10,\n            y: 90 / 2 - f * 50 / 2,\n            width: 6,\n            height: f * 50\n        }))));\n});\nfunction ka({ participants: t, ...n }) {\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, t.map((a)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.af.Provider, {\n            value: a,\n            key: a.identity\n        }, (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.c)(n.children))));\n}\nfunction Ra({ volume: t, muted: n }) {\n    const a = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.t)([\n        livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone,\n        livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.ScreenShareAudio,\n        livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Unknown\n    ], {\n        updateOnlyOn: [],\n        onlySubscribed: !0\n    }).filter((r)=>!r.participant.isLocal && r.publication.kind === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Kind.Audio);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        style: {\n            display: \"none\"\n        }\n    }, a.map((r)=>/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ne, {\n            key: (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.p)(r),\n            trackRef: r,\n            volume: t,\n            muted: n\n        })));\n}\nconst Ma = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ childrenPosition: n = \"before\", children: a, ...r }, c) {\n    const { name: s } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.v)();\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        ref: c,\n        ...r\n    }, n === \"before\" && a, s, n === \"after\" && a);\n});\nfunction $t(t) {\n    const n = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(t, {\n            className: \"lk-toast\"\n        }), [\n        t\n    ]);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ...n\n    }, t.children);\n}\nconst Dt = (t)=>{\n    const n = [];\n    for(let a = 0; a < t; a++)n.push([\n        a,\n        t - 1 - a\n    ]);\n    return n;\n}, fe = (t)=>[\n        [\n            Math.floor(t / 2)\n        ],\n        [\n            -1\n        ]\n    ], Ut = (t, n, a)=>{\n    const [r, c] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), [s, o] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([\n        []\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (t === \"thinking\") o(fe(n));\n        else if (t === \"connecting\" || t === \"initializing\") {\n            const i = [\n                ...Dt(n)\n            ];\n            o(i);\n        } else o(t === \"listening\" ? fe(n) : t === void 0 ? [\n            new Array(n).fill(0).map((i, u)=>u)\n        ] : [\n            []\n        ]);\n        c(0);\n    }, [\n        t,\n        n\n    ]);\n    const l = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let i = performance.now();\n        const u = (d)=>{\n            d - i >= a && (c((f)=>f + 1), i = d), l.current = requestAnimationFrame(u);\n        };\n        return l.current = requestAnimationFrame(u), ()=>{\n            l.current !== null && cancelAnimationFrame(l.current);\n        };\n    }, [\n        a,\n        n,\n        t,\n        s.length\n    ]), s[r % s.length];\n}, Gt = /* @__PURE__ */ new Map([\n    [\n        \"connecting\",\n        2e3\n    ],\n    [\n        \"initializing\",\n        2e3\n    ],\n    [\n        \"listening\",\n        500\n    ],\n    [\n        \"thinking\",\n        150\n    ]\n]), Qt = (t, n)=>{\n    if (t === void 0) return 1e3;\n    let a = Gt.get(t);\n    if (a) switch(t){\n        case \"connecting\":\n            a /= n;\n            break;\n    }\n    return a;\n}, Xt = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ state: n, options: a, barCount: r = 15, trackRef: c, children: s, ...o }, l) {\n    const i = (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.a)(o, {\n        className: \"lk-audio-bar-visualizer\"\n    });\n    let u = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.aa)();\n    c && (u = c);\n    const d = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.s)(u, {\n        bands: r,\n        loPass: 100,\n        hiPass: 200\n    }), g = (a == null ? void 0 : a.minHeight) ?? 20, f = (a == null ? void 0 : a.maxHeight) ?? 100, w = Ut(n, r, Qt(n, r) ?? 100);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: l,\n        ...i,\n        \"data-lk-va-state\": n\n    }, d.map((p, m)=>s ? (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_4__.c)(s, {\n            \"data-lk-highlighted\": w.includes(m),\n            \"data-lk-bar-index\": m,\n            className: \"lk-audio-bar\",\n            style: {\n                height: `${Math.min(f, Math.max(g, p * 100 + 5))}%`\n            }\n        }) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n            key: m,\n            \"data-lk-highlighted\": w.includes(m),\n            \"data-lk-bar-index\": m,\n            className: `lk-audio-bar ${w.includes(m) && \"lk-highlighted\"}`,\n            style: {\n                // TODO transform animations would be more performant, however the border-radius gets distorted when using scale transforms. a 9-slice approach (or 3 in this case) could work\n                // transform: `scale(1, ${Math.min(maxHeight, Math.max(minHeight, volume))}`,\n                height: `${Math.min(f, Math.max(g, p * 100 + 5))}%`\n            }\n        })));\n}), ya = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ children: n, disableSpeakingIndicator: a, onParticipantClick: r, trackRef: c, ...s }, o) {\n    const l = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.i)(c), { elementProps: i } = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.l)({\n        trackRef: l,\n        htmlProps: s,\n        disableSpeakingIndicator: a,\n        onParticipantClick: r\n    });\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: o,\n        style: {\n            position: \"relative\",\n            minHeight: \"160px\"\n        },\n        ...i\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.ag.Provider, {\n        value: l\n    }, n ?? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.a1)(l) && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ne, {\n        trackRef: l\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Xt, {\n        barCount: 7,\n        options: {\n            minHeight: 8\n        }\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lk-participant-metadata\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"lk-participant-metadata-item\"\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Se, {\n        trackRef: l\n    }), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(K, null)), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(be, {\n        className: \"lk-participant-metadata-item\"\n    })))));\n});\nfunction ba(t) {\n    const [n, a] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0), r = (0,_hooks_CWooKGw2_mjs__WEBPACK_IMPORTED_MODULE_2__.a)(t.room);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        switch(r){\n            case livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Reconnecting:\n                a(/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(oe, {\n                    className: \"lk-spinner\"\n                }), \" Reconnecting\"));\n                break;\n            case livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Connecting:\n                a(/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(oe, {\n                    className: \"lk-spinner\"\n                }), \" Connecting\"));\n                break;\n            case livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Disconnected:\n                a(/* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, \"Disconnected\"));\n                break;\n            default:\n                a(void 0);\n                break;\n        }\n    }, [\n        r\n    ]), n ? /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement($t, {\n        className: \"lk-toast-connection-state\"\n    }, n) : /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null);\n}\nconst Sa = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function({ entry: n, hideName: a = !1, hideTimestamp: r = !1, messageFormatter: c, ...s }, o) {\n    var f, w, p, m;\n    const l = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>c ? c(n.message) : n.message, [\n        n.message,\n        c\n    ]), i = !!n.editTimestamp, u = new Date(n.timestamp), d = typeof navigator < \"u\" ? navigator.language : \"en-US\", g = ((f = n.from) == null ? void 0 : f.name) ?? ((w = n.from) == null ? void 0 : w.identity);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"li\", {\n        ref: o,\n        className: \"lk-chat-entry\",\n        title: u.toLocaleTimeString(d, {\n            timeStyle: \"full\"\n        }),\n        \"data-lk-message-origin\": (p = n.from) != null && p.isLocal ? \"local\" : \"remote\",\n        ...s\n    }, (!r || !a || i) && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"lk-meta-data\"\n    }, !a && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"strong\", {\n        className: \"lk-participant-name\"\n    }, g), (!r || i) && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"lk-timestamp\"\n    }, i && \"edited \", u.toLocaleTimeString(d, {\n        timeStyle: \"short\"\n    }))), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"lk-message-body\"\n    }, l), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"lk-message-attachements\"\n    }, (m = n.attachedFiles) == null ? void 0 : m.map((v)=>v.type.startsWith(\"image/\") && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n            style: {\n                maxWidth: \"300px\",\n                maxHeight: \"300px\"\n            },\n            key: v.name,\n            src: URL.createObjectURL(v),\n            alt: v.name\n        }))));\n});\nfunction Ca(t) {\n    return (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.al)(t, (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_3__.am)()).map((n, a)=>{\n        if (typeof n == \"string\") return n;\n        {\n            const r = n.content.toString(), c = n.type === \"url\" ? /^http(s?):\\/\\//.test(r) ? r : `https://${r}` : `mailto:${r}`;\n            return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", {\n                className: \"lk-chat-link\",\n                key: a,\n                href: c,\n                target: \"_blank\",\n                rel: \"noreferrer\"\n            }, r);\n        }\n    });\n}\n //# sourceMappingURL=components-3NBkfi42.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-react/dist/components-3NBkfi42.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@livekit/components-react/dist/contexts-CPsnPrz2.mjs":
/*!***************************************************************************!*\
  !*** ./node_modules/@livekit/components-react/dist/contexts-CPsnPrz2.mjs ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ Ms),\n/* harmony export */   A: () => (/* binding */ Zo),\n/* harmony export */   B: () => (/* binding */ _o),\n/* harmony export */   C: () => (/* binding */ fo),\n/* harmony export */   D: () => (/* binding */ ws),\n/* harmony export */   E: () => (/* binding */ cs),\n/* harmony export */   F: () => (/* binding */ Ns),\n/* harmony export */   G: () => (/* binding */ Yo),\n/* harmony export */   H: () => (/* binding */ us),\n/* harmony export */   I: () => (/* binding */ fs),\n/* harmony export */   J: () => (/* binding */ ns),\n/* harmony export */   K: () => (/* binding */ rs),\n/* harmony export */   L: () => (/* binding */ Mo),\n/* harmony export */   M: () => (/* binding */ Xo),\n/* harmony export */   N: () => (/* binding */ Ss),\n/* harmony export */   O: () => (/* binding */ Es),\n/* harmony export */   P: () => (/* binding */ Ts),\n/* harmony export */   Q: () => (/* binding */ gs),\n/* harmony export */   R: () => (/* binding */ Wn),\n/* harmony export */   S: () => (/* binding */ ps),\n/* harmony export */   T: () => (/* binding */ hs),\n/* harmony export */   U: () => (/* binding */ Gi),\n/* harmony export */   V: () => (/* binding */ As),\n/* harmony export */   W: () => (/* binding */ Qo),\n/* harmony export */   X: () => (/* binding */ Bt),\n/* harmony export */   Y: () => (/* binding */ es),\n/* harmony export */   Z: () => (/* binding */ xs),\n/* harmony export */   _: () => (/* binding */ Rs),\n/* harmony export */   a: () => (/* binding */ $s),\n/* harmony export */   a0: () => (/* binding */ os),\n/* harmony export */   a1: () => (/* binding */ W),\n/* harmony export */   a2: () => (/* binding */ ks),\n/* harmony export */   a3: () => (/* binding */ _s),\n/* harmony export */   a4: () => (/* binding */ Ls),\n/* harmony export */   a5: () => (/* binding */ Go),\n/* harmony export */   a6: () => (/* binding */ Ko),\n/* harmony export */   a7: () => (/* binding */ ds),\n/* harmony export */   a8: () => (/* binding */ ss),\n/* harmony export */   a9: () => (/* binding */ Ds),\n/* harmony export */   aa: () => (/* binding */ Un),\n/* harmony export */   ab: () => (/* binding */ Nn),\n/* harmony export */   ac: () => (/* binding */ ys),\n/* harmony export */   ad: () => (/* binding */ Do),\n/* harmony export */   ae: () => (/* binding */ Or),\n/* harmony export */   af: () => (/* binding */ jn),\n/* harmony export */   ag: () => (/* binding */ Fn),\n/* harmony export */   ah: () => (/* binding */ Ys),\n/* harmony export */   ai: () => (/* binding */ Is),\n/* harmony export */   aj: () => (/* binding */ Fo),\n/* harmony export */   ak: () => (/* binding */ Us),\n/* harmony export */   al: () => (/* binding */ Vo),\n/* harmony export */   am: () => (/* binding */ Bo),\n/* harmony export */   an: () => (/* binding */ jo),\n/* harmony export */   ao: () => (/* binding */ Wo),\n/* harmony export */   ap: () => (/* binding */ qo),\n/* harmony export */   aq: () => (/* binding */ Fs),\n/* harmony export */   ar: () => (/* binding */ $o),\n/* harmony export */   as: () => (/* binding */ Uo),\n/* harmony export */   at: () => (/* binding */ Ho),\n/* harmony export */   au: () => (/* binding */ zo),\n/* harmony export */   av: () => (/* binding */ Bs),\n/* harmony export */   aw: () => (/* binding */ js),\n/* harmony export */   b: () => (/* binding */ Ps),\n/* harmony export */   c: () => (/* binding */ Vs),\n/* harmony export */   d: () => (/* binding */ bs),\n/* harmony export */   e: () => (/* binding */ ts),\n/* harmony export */   f: () => (/* binding */ Hs),\n/* harmony export */   g: () => (/* binding */ bo),\n/* harmony export */   h: () => (/* binding */ ms),\n/* harmony export */   i: () => (/* binding */ Ws),\n/* harmony export */   j: () => (/* binding */ Lo),\n/* harmony export */   k: () => (/* binding */ Cs),\n/* harmony export */   l: () => (/* binding */ _),\n/* harmony export */   m: () => (/* binding */ No),\n/* harmony export */   n: () => (/* binding */ qi),\n/* harmony export */   o: () => (/* binding */ ho),\n/* harmony export */   p: () => (/* binding */ N),\n/* harmony export */   q: () => (/* binding */ as),\n/* harmony export */   r: () => (/* binding */ co),\n/* harmony export */   s: () => (/* binding */ Os),\n/* harmony export */   t: () => (/* binding */ In),\n/* harmony export */   u: () => (/* binding */ zs),\n/* harmony export */   v: () => (/* binding */ ls),\n/* harmony export */   w: () => (/* binding */ Io),\n/* harmony export */   x: () => (/* binding */ is),\n/* harmony export */   y: () => (/* binding */ vs),\n/* harmony export */   z: () => (/* binding */ Jo)\n/* harmony export */ });\n/* harmony import */ var livekit_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! livekit-client */ \"(ssr)/./node_modules/livekit-client/dist/livekit-client.esm.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\nconst De = Math.min, se = Math.max, $e = Math.round, Le = Math.floor, G = (e)=>({\n        x: e,\n        y: e\n    }), Yn = {\n    left: \"right\",\n    right: \"left\",\n    bottom: \"top\",\n    top: \"bottom\"\n}, qn = {\n    start: \"end\",\n    end: \"start\"\n};\nfunction Tt(e, t, n) {\n    return se(e, De(t, n));\n}\nfunction He(e, t) {\n    return typeof e == \"function\" ? e(t) : e;\n}\nfunction ae(e) {\n    return e.split(\"-\")[0];\n}\nfunction ze(e) {\n    return e.split(\"-\")[1];\n}\nfunction qt(e) {\n    return e === \"x\" ? \"y\" : \"x\";\n}\nfunction Kt(e) {\n    return e === \"y\" ? \"height\" : \"width\";\n}\nfunction he(e) {\n    return [\n        \"top\",\n        \"bottom\"\n    ].includes(ae(e)) ? \"y\" : \"x\";\n}\nfunction Gt(e) {\n    return qt(he(e));\n}\nfunction Kn(e, t, n) {\n    n === void 0 && (n = !1);\n    const r = ze(e), i = Gt(e), o = Kt(i);\n    let s = i === \"x\" ? r === (n ? \"end\" : \"start\") ? \"right\" : \"left\" : r === \"start\" ? \"bottom\" : \"top\";\n    return t.reference[o] > t.floating[o] && (s = Ne(s)), [\n        s,\n        Ne(s)\n    ];\n}\nfunction Gn(e) {\n    const t = Ne(e);\n    return [\n        it(e),\n        t,\n        it(t)\n    ];\n}\nfunction it(e) {\n    return e.replace(/start|end/g, (t)=>qn[t]);\n}\nfunction Qn(e, t, n) {\n    const r = [\n        \"left\",\n        \"right\"\n    ], i = [\n        \"right\",\n        \"left\"\n    ], o = [\n        \"top\",\n        \"bottom\"\n    ], s = [\n        \"bottom\",\n        \"top\"\n    ];\n    switch(e){\n        case \"top\":\n        case \"bottom\":\n            return n ? t ? i : r : t ? r : i;\n        case \"left\":\n        case \"right\":\n            return t ? o : s;\n        default:\n            return [];\n    }\n}\nfunction Jn(e, t, n, r) {\n    const i = ze(e);\n    let o = Qn(ae(e), n === \"start\", r);\n    return i && (o = o.map((s)=>s + \"-\" + i), t && (o = o.concat(o.map(it)))), o;\n}\nfunction Ne(e) {\n    return e.replace(/left|right|bottom|top/g, (t)=>Yn[t]);\n}\nfunction Xn(e) {\n    return {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0,\n        ...e\n    };\n}\nfunction Zn(e) {\n    return typeof e != \"number\" ? Xn(e) : {\n        top: e,\n        right: e,\n        bottom: e,\n        left: e\n    };\n}\nfunction Fe(e) {\n    const { x: t, y: n, width: r, height: i } = e;\n    return {\n        width: r,\n        height: i,\n        top: n,\n        left: t,\n        right: t + r,\n        bottom: n + i,\n        x: t,\n        y: n\n    };\n}\nfunction Ct(e, t, n) {\n    let { reference: r, floating: i } = e;\n    const o = he(t), s = Gt(t), a = Kt(s), c = ae(t), u = o === \"y\", l = r.x + r.width / 2 - i.width / 2, f = r.y + r.height / 2 - i.height / 2, h = r[a] / 2 - i[a] / 2;\n    let d;\n    switch(c){\n        case \"top\":\n            d = {\n                x: l,\n                y: r.y - i.height\n            };\n            break;\n        case \"bottom\":\n            d = {\n                x: l,\n                y: r.y + r.height\n            };\n            break;\n        case \"right\":\n            d = {\n                x: r.x + r.width,\n                y: f\n            };\n            break;\n        case \"left\":\n            d = {\n                x: r.x - i.width,\n                y: f\n            };\n            break;\n        default:\n            d = {\n                x: r.x,\n                y: r.y\n            };\n    }\n    switch(ze(t)){\n        case \"start\":\n            d[s] -= h * (n && u ? -1 : 1);\n            break;\n        case \"end\":\n            d[s] += h * (n && u ? -1 : 1);\n            break;\n    }\n    return d;\n}\nconst er = async (e, t, n)=>{\n    const { placement: r = \"bottom\", strategy: i = \"absolute\", middleware: o = [], platform: s } = n, a = o.filter(Boolean), c = await (s.isRTL == null ? void 0 : s.isRTL(t));\n    let u = await s.getElementRects({\n        reference: e,\n        floating: t,\n        strategy: i\n    }), { x: l, y: f } = Ct(u, r, c), h = r, d = {}, m = 0;\n    for(let p = 0; p < a.length; p++){\n        const { name: b, fn: v } = a[p], { x, y: E, data: P, reset: g } = await v({\n            x: l,\n            y: f,\n            initialPlacement: r,\n            placement: h,\n            strategy: i,\n            middlewareData: d,\n            rects: u,\n            platform: s,\n            elements: {\n                reference: e,\n                floating: t\n            }\n        });\n        l = x ?? l, f = E ?? f, d = {\n            ...d,\n            [b]: {\n                ...d[b],\n                ...P\n            }\n        }, g && m <= 50 && (m++, typeof g == \"object\" && (g.placement && (h = g.placement), g.rects && (u = g.rects === !0 ? await s.getElementRects({\n            reference: e,\n            floating: t,\n            strategy: i\n        }) : g.rects), { x: l, y: f } = Ct(u, h, c)), p = -1);\n    }\n    return {\n        x: l,\n        y: f,\n        placement: h,\n        strategy: i,\n        middlewareData: d\n    };\n};\nasync function Qt(e, t) {\n    var n;\n    t === void 0 && (t = {});\n    const { x: r, y: i, platform: o, rects: s, elements: a, strategy: c } = e, { boundary: u = \"clippingAncestors\", rootBoundary: l = \"viewport\", elementContext: f = \"floating\", altBoundary: h = !1, padding: d = 0 } = He(t, e), m = Zn(d), b = a[h ? f === \"floating\" ? \"reference\" : \"floating\" : f], v = Fe(await o.getClippingRect({\n        element: (n = await (o.isElement == null ? void 0 : o.isElement(b))) == null || n ? b : b.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(a.floating)),\n        boundary: u,\n        rootBoundary: l,\n        strategy: c\n    })), x = f === \"floating\" ? {\n        x: r,\n        y: i,\n        width: s.floating.width,\n        height: s.floating.height\n    } : s.reference, E = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(a.floating)), P = await (o.isElement == null ? void 0 : o.isElement(E)) ? await (o.getScale == null ? void 0 : o.getScale(E)) || {\n        x: 1,\n        y: 1\n    } : {\n        x: 1,\n        y: 1\n    }, g = Fe(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({\n        elements: a,\n        rect: x,\n        offsetParent: E,\n        strategy: c\n    }) : x);\n    return {\n        top: (v.top - g.top + m.top) / P.y,\n        bottom: (g.bottom - v.bottom + m.bottom) / P.y,\n        left: (v.left - g.left + m.left) / P.x,\n        right: (g.right - v.right + m.right) / P.x\n    };\n}\nconst tr = function(e) {\n    return e === void 0 && (e = {}), {\n        name: \"flip\",\n        options: e,\n        async fn (t) {\n            var n, r;\n            const { placement: i, middlewareData: o, rects: s, initialPlacement: a, platform: c, elements: u } = t, { mainAxis: l = !0, crossAxis: f = !0, fallbackPlacements: h, fallbackStrategy: d = \"bestFit\", fallbackAxisSideDirection: m = \"none\", flipAlignment: p = !0, ...b } = He(e, t);\n            if ((n = o.arrow) != null && n.alignmentOffset) return {};\n            const v = ae(i), x = he(a), E = ae(a) === a, P = await (c.isRTL == null ? void 0 : c.isRTL(u.floating)), g = h || (E || !p ? [\n                Ne(a)\n            ] : Gn(a)), S = m !== \"none\";\n            !h && S && g.push(...Jn(a, p, m, P));\n            const C = [\n                a,\n                ...g\n            ], $ = await Qt(t, b), I = [];\n            let z = ((r = o.flip) == null ? void 0 : r.overflows) || [];\n            if (l && I.push($[v]), f) {\n                const K = Kn(i, s, P);\n                I.push($[K[0]], $[K[1]]);\n            }\n            if (z = [\n                ...z,\n                {\n                    placement: i,\n                    overflows: I\n                }\n            ], !I.every((K)=>K <= 0)) {\n                var T, L;\n                const K = (((T = o.flip) == null ? void 0 : T.index) || 0) + 1, ke = C[K];\n                if (ke) return {\n                    data: {\n                        index: K,\n                        overflows: z\n                    },\n                    reset: {\n                        placement: ke\n                    }\n                };\n                let xe = (L = z.filter((fe)=>fe.overflows[0] <= 0).sort((fe, te)=>fe.overflows[1] - te.overflows[1])[0]) == null ? void 0 : L.placement;\n                if (!xe) switch(d){\n                    case \"bestFit\":\n                        {\n                            var oe;\n                            const fe = (oe = z.filter((te)=>{\n                                if (S) {\n                                    const ne = he(te.placement);\n                                    return ne === x || // Create a bias to the `y` side axis due to horizontal\n                                    // reading directions favoring greater width.\n                                    ne === \"y\";\n                                }\n                                return !0;\n                            }).map((te)=>[\n                                    te.placement,\n                                    te.overflows.filter((ne)=>ne > 0).reduce((ne, Bn)=>ne + Bn, 0)\n                                ]).sort((te, ne)=>te[1] - ne[1])[0]) == null ? void 0 : oe[0];\n                            fe && (xe = fe);\n                            break;\n                        }\n                    case \"initialPlacement\":\n                        xe = a;\n                        break;\n                }\n                if (i !== xe) return {\n                    reset: {\n                        placement: xe\n                    }\n                };\n            }\n            return {};\n        }\n    };\n};\nasync function nr(e, t) {\n    const { placement: n, platform: r, elements: i } = e, o = await (r.isRTL == null ? void 0 : r.isRTL(i.floating)), s = ae(n), a = ze(n), c = he(n) === \"y\", u = [\n        \"left\",\n        \"top\"\n    ].includes(s) ? -1 : 1, l = o && c ? -1 : 1, f = He(t, e);\n    let { mainAxis: h, crossAxis: d, alignmentAxis: m } = typeof f == \"number\" ? {\n        mainAxis: f,\n        crossAxis: 0,\n        alignmentAxis: null\n    } : {\n        mainAxis: f.mainAxis || 0,\n        crossAxis: f.crossAxis || 0,\n        alignmentAxis: f.alignmentAxis\n    };\n    return a && typeof m == \"number\" && (d = a === \"end\" ? m * -1 : m), c ? {\n        x: d * l,\n        y: h * u\n    } : {\n        x: h * u,\n        y: d * l\n    };\n}\nconst rr = function(e) {\n    return e === void 0 && (e = 0), {\n        name: \"offset\",\n        options: e,\n        async fn (t) {\n            var n, r;\n            const { x: i, y: o, placement: s, middlewareData: a } = t, c = await nr(t, e);\n            return s === ((n = a.offset) == null ? void 0 : n.placement) && (r = a.arrow) != null && r.alignmentOffset ? {} : {\n                x: i + c.x,\n                y: o + c.y,\n                data: {\n                    ...c,\n                    placement: s\n                }\n            };\n        }\n    };\n}, ir = function(e) {\n    return e === void 0 && (e = {}), {\n        name: \"shift\",\n        options: e,\n        async fn (t) {\n            const { x: n, y: r, placement: i } = t, { mainAxis: o = !0, crossAxis: s = !1, limiter: a = {\n                fn: (b)=>{\n                    let { x: v, y: x } = b;\n                    return {\n                        x: v,\n                        y: x\n                    };\n                }\n            }, ...c } = He(e, t), u = {\n                x: n,\n                y: r\n            }, l = await Qt(t, c), f = he(ae(i)), h = qt(f);\n            let d = u[h], m = u[f];\n            if (o) {\n                const b = h === \"y\" ? \"top\" : \"left\", v = h === \"y\" ? \"bottom\" : \"right\", x = d + l[b], E = d - l[v];\n                d = Tt(x, d, E);\n            }\n            if (s) {\n                const b = f === \"y\" ? \"top\" : \"left\", v = f === \"y\" ? \"bottom\" : \"right\", x = m + l[b], E = m - l[v];\n                m = Tt(x, m, E);\n            }\n            const p = a.fn({\n                ...t,\n                [h]: d,\n                [f]: m\n            });\n            return {\n                ...p,\n                data: {\n                    x: p.x - n,\n                    y: p.y - r,\n                    enabled: {\n                        [h]: o,\n                        [f]: s\n                    }\n                }\n            };\n        }\n    };\n};\nfunction Ye() {\n    return \"undefined\" < \"u\";\n}\nfunction ge(e) {\n    return Jt(e) ? (e.nodeName || \"\").toLowerCase() : \"#document\";\n}\nfunction j(e) {\n    var t;\n    return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;\n}\nfunction X(e) {\n    var t;\n    return (t = (Jt(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;\n}\nfunction Jt(e) {\n    return Ye() ? e instanceof Node || e instanceof j(e).Node : !1;\n}\nfunction Y(e) {\n    return Ye() ? e instanceof Element || e instanceof j(e).Element : !1;\n}\nfunction Q(e) {\n    return Ye() ? e instanceof HTMLElement || e instanceof j(e).HTMLElement : !1;\n}\nfunction Pt(e) {\n    return !Ye() || typeof ShadowRoot > \"u\" ? !1 : e instanceof ShadowRoot || e instanceof j(e).ShadowRoot;\n}\nfunction Oe(e) {\n    const { overflow: t, overflowX: n, overflowY: r, display: i } = q(e);\n    return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && ![\n        \"inline\",\n        \"contents\"\n    ].includes(i);\n}\nfunction or(e) {\n    return [\n        \"table\",\n        \"td\",\n        \"th\"\n    ].includes(ge(e));\n}\nfunction qe(e) {\n    return [\n        \":popover-open\",\n        \":modal\"\n    ].some((t)=>{\n        try {\n            return e.matches(t);\n        } catch  {\n            return !1;\n        }\n    });\n}\nfunction ft(e) {\n    const t = dt(), n = Y(e) ? q(e) : e;\n    return [\n        \"transform\",\n        \"translate\",\n        \"scale\",\n        \"rotate\",\n        \"perspective\"\n    ].some((r)=>n[r] ? n[r] !== \"none\" : !1) || (n.containerType ? n.containerType !== \"normal\" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== \"none\" : !1) || !t && (n.filter ? n.filter !== \"none\" : !1) || [\n        \"transform\",\n        \"translate\",\n        \"scale\",\n        \"rotate\",\n        \"perspective\",\n        \"filter\"\n    ].some((r)=>(n.willChange || \"\").includes(r)) || [\n        \"paint\",\n        \"layout\",\n        \"strict\",\n        \"content\"\n    ].some((r)=>(n.contain || \"\").includes(r));\n}\nfunction sr(e) {\n    let t = ie(e);\n    for(; Q(t) && !ve(t);){\n        if (ft(t)) return t;\n        if (qe(t)) return null;\n        t = ie(t);\n    }\n    return null;\n}\nfunction dt() {\n    return typeof CSS > \"u\" || !CSS.supports ? !1 : CSS.supports(\"-webkit-backdrop-filter\", \"none\");\n}\nfunction ve(e) {\n    return [\n        \"html\",\n        \"body\",\n        \"#document\"\n    ].includes(ge(e));\n}\nfunction q(e) {\n    return j(e).getComputedStyle(e);\n}\nfunction Ke(e) {\n    return Y(e) ? {\n        scrollLeft: e.scrollLeft,\n        scrollTop: e.scrollTop\n    } : {\n        scrollLeft: e.scrollX,\n        scrollTop: e.scrollY\n    };\n}\nfunction ie(e) {\n    if (ge(e) === \"html\") return e;\n    const t = // Step into the shadow DOM of the parent of a slotted node.\n    e.assignedSlot || // DOM Element detected.\n    e.parentNode || // ShadowRoot detected.\n    Pt(e) && e.host || // Fallback.\n    X(e);\n    return Pt(t) ? t.host : t;\n}\nfunction Xt(e) {\n    const t = ie(e);\n    return ve(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Q(t) && Oe(t) ? t : Xt(t);\n}\nfunction Te(e, t, n) {\n    var r;\n    t === void 0 && (t = []), n === void 0 && (n = !0);\n    const i = Xt(e), o = i === ((r = e.ownerDocument) == null ? void 0 : r.body), s = j(i);\n    if (o) {\n        const a = ot(s);\n        return t.concat(s, s.visualViewport || [], Oe(i) ? i : [], a && n ? Te(a) : []);\n    }\n    return t.concat(i, Te(i, [], n));\n}\nfunction ot(e) {\n    return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null;\n}\nfunction Zt(e) {\n    const t = q(e);\n    let n = parseFloat(t.width) || 0, r = parseFloat(t.height) || 0;\n    const i = Q(e), o = i ? e.offsetWidth : n, s = i ? e.offsetHeight : r, a = $e(n) !== o || $e(r) !== s;\n    return a && (n = o, r = s), {\n        width: n,\n        height: r,\n        $: a\n    };\n}\nfunction pt(e) {\n    return Y(e) ? e : e.contextElement;\n}\nfunction de(e) {\n    const t = pt(e);\n    if (!Q(t)) return G(1);\n    const n = t.getBoundingClientRect(), { width: r, height: i, $: o } = Zt(t);\n    let s = (o ? $e(n.width) : n.width) / r, a = (o ? $e(n.height) : n.height) / i;\n    return (!s || !Number.isFinite(s)) && (s = 1), (!a || !Number.isFinite(a)) && (a = 1), {\n        x: s,\n        y: a\n    };\n}\nconst ar = /* @__PURE__ */ G(0);\nfunction en(e) {\n    const t = j(e);\n    return !dt() || !t.visualViewport ? ar : {\n        x: t.visualViewport.offsetLeft,\n        y: t.visualViewport.offsetTop\n    };\n}\nfunction cr(e, t, n) {\n    return t === void 0 && (t = !1), !n || t && n !== j(e) ? !1 : t;\n}\nfunction ce(e, t, n, r) {\n    t === void 0 && (t = !1), n === void 0 && (n = !1);\n    const i = e.getBoundingClientRect(), o = pt(e);\n    let s = G(1);\n    t && (r ? Y(r) && (s = de(r)) : s = de(e));\n    const a = cr(o, n, r) ? en(o) : G(0);\n    let c = (i.left + a.x) / s.x, u = (i.top + a.y) / s.y, l = i.width / s.x, f = i.height / s.y;\n    if (o) {\n        const h = j(o), d = r && Y(r) ? j(r) : r;\n        let m = h, p = ot(m);\n        for(; p && r && d !== m;){\n            const b = de(p), v = p.getBoundingClientRect(), x = q(p), E = v.left + (p.clientLeft + parseFloat(x.paddingLeft)) * b.x, P = v.top + (p.clientTop + parseFloat(x.paddingTop)) * b.y;\n            c *= b.x, u *= b.y, l *= b.x, f *= b.y, c += E, u += P, m = j(p), p = ot(m);\n        }\n    }\n    return Fe({\n        width: l,\n        height: f,\n        x: c,\n        y: u\n    });\n}\nfunction ht(e, t) {\n    const n = Ke(e).scrollLeft;\n    return t ? t.left + n : ce(X(e)).left + n;\n}\nfunction tn(e, t, n) {\n    n === void 0 && (n = !1);\n    const r = e.getBoundingClientRect(), i = r.left + t.scrollLeft - (n ? 0 : // RTL <body> scrollbar.\n    ht(e, r)), o = r.top + t.scrollTop;\n    return {\n        x: i,\n        y: o\n    };\n}\nfunction ur(e) {\n    let { elements: t, rect: n, offsetParent: r, strategy: i } = e;\n    const o = i === \"fixed\", s = X(r), a = t ? qe(t.floating) : !1;\n    if (r === s || a && o) return n;\n    let c = {\n        scrollLeft: 0,\n        scrollTop: 0\n    }, u = G(1);\n    const l = G(0), f = Q(r);\n    if ((f || !f && !o) && ((ge(r) !== \"body\" || Oe(s)) && (c = Ke(r)), Q(r))) {\n        const d = ce(r);\n        u = de(r), l.x = d.x + r.clientLeft, l.y = d.y + r.clientTop;\n    }\n    const h = s && !f && !o ? tn(s, c, !0) : G(0);\n    return {\n        width: n.width * u.x,\n        height: n.height * u.y,\n        x: n.x * u.x - c.scrollLeft * u.x + l.x + h.x,\n        y: n.y * u.y - c.scrollTop * u.y + l.y + h.y\n    };\n}\nfunction lr(e) {\n    return Array.from(e.getClientRects());\n}\nfunction fr(e) {\n    const t = X(e), n = Ke(e), r = e.ownerDocument.body, i = se(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth), o = se(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);\n    let s = -n.scrollLeft + ht(e);\n    const a = -n.scrollTop;\n    return q(r).direction === \"rtl\" && (s += se(t.clientWidth, r.clientWidth) - i), {\n        width: i,\n        height: o,\n        x: s,\n        y: a\n    };\n}\nfunction dr(e, t) {\n    const n = j(e), r = X(e), i = n.visualViewport;\n    let o = r.clientWidth, s = r.clientHeight, a = 0, c = 0;\n    if (i) {\n        o = i.width, s = i.height;\n        const u = dt();\n        (!u || u && t === \"fixed\") && (a = i.offsetLeft, c = i.offsetTop);\n    }\n    return {\n        width: o,\n        height: s,\n        x: a,\n        y: c\n    };\n}\nfunction pr(e, t) {\n    const n = ce(e, !0, t === \"fixed\"), r = n.top + e.clientTop, i = n.left + e.clientLeft, o = Q(e) ? de(e) : G(1), s = e.clientWidth * o.x, a = e.clientHeight * o.y, c = i * o.x, u = r * o.y;\n    return {\n        width: s,\n        height: a,\n        x: c,\n        y: u\n    };\n}\nfunction Ot(e, t, n) {\n    let r;\n    if (t === \"viewport\") r = dr(e, n);\n    else if (t === \"document\") r = fr(X(e));\n    else if (Y(t)) r = pr(t, n);\n    else {\n        const i = en(e);\n        r = {\n            x: t.x - i.x,\n            y: t.y - i.y,\n            width: t.width,\n            height: t.height\n        };\n    }\n    return Fe(r);\n}\nfunction nn(e, t) {\n    const n = ie(e);\n    return n === t || !Y(n) || ve(n) ? !1 : q(n).position === \"fixed\" || nn(n, t);\n}\nfunction hr(e, t) {\n    const n = t.get(e);\n    if (n) return n;\n    let r = Te(e, [], !1).filter((a)=>Y(a) && ge(a) !== \"body\"), i = null;\n    const o = q(e).position === \"fixed\";\n    let s = o ? ie(e) : e;\n    for(; Y(s) && !ve(s);){\n        const a = q(s), c = ft(s);\n        !c && a.position === \"fixed\" && (i = null), (o ? !c && !i : !c && a.position === \"static\" && !!i && [\n            \"absolute\",\n            \"fixed\"\n        ].includes(i.position) || Oe(s) && !c && nn(e, s)) ? r = r.filter((l)=>l !== s) : i = a, s = ie(s);\n    }\n    return t.set(e, r), r;\n}\nfunction vr(e) {\n    let { element: t, boundary: n, rootBoundary: r, strategy: i } = e;\n    const s = [\n        ...n === \"clippingAncestors\" ? qe(t) ? [] : hr(t, this._c) : [].concat(n),\n        r\n    ], a = s[0], c = s.reduce((u, l)=>{\n        const f = Ot(t, l, i);\n        return u.top = se(f.top, u.top), u.right = De(f.right, u.right), u.bottom = De(f.bottom, u.bottom), u.left = se(f.left, u.left), u;\n    }, Ot(t, a, i));\n    return {\n        width: c.right - c.left,\n        height: c.bottom - c.top,\n        x: c.left,\n        y: c.top\n    };\n}\nfunction mr(e) {\n    const { width: t, height: n } = Zt(e);\n    return {\n        width: t,\n        height: n\n    };\n}\nfunction br(e, t, n) {\n    const r = Q(t), i = X(t), o = n === \"fixed\", s = ce(e, !0, o, t);\n    let a = {\n        scrollLeft: 0,\n        scrollTop: 0\n    };\n    const c = G(0);\n    if (r || !r && !o) if ((ge(t) !== \"body\" || Oe(i)) && (a = Ke(t)), r) {\n        const h = ce(t, !0, o, t);\n        c.x = h.x + t.clientLeft, c.y = h.y + t.clientTop;\n    } else i && (c.x = ht(i));\n    const u = i && !r && !o ? tn(i, a) : G(0), l = s.left + a.scrollLeft - c.x - u.x, f = s.top + a.scrollTop - c.y - u.y;\n    return {\n        x: l,\n        y: f,\n        width: s.width,\n        height: s.height\n    };\n}\nfunction Xe(e) {\n    return q(e).position === \"static\";\n}\nfunction At(e, t) {\n    if (!Q(e) || q(e).position === \"fixed\") return null;\n    if (t) return t(e);\n    let n = e.offsetParent;\n    return X(e) === n && (n = n.ownerDocument.body), n;\n}\nfunction rn(e, t) {\n    const n = j(e);\n    if (qe(e)) return n;\n    if (!Q(e)) {\n        let i = ie(e);\n        for(; i && !ve(i);){\n            if (Y(i) && !Xe(i)) return i;\n            i = ie(i);\n        }\n        return n;\n    }\n    let r = At(e, t);\n    for(; r && or(r) && Xe(r);)r = At(r, t);\n    return r && ve(r) && Xe(r) && !ft(r) ? n : r || sr(e) || n;\n}\nconst gr = async function(e) {\n    const t = this.getOffsetParent || rn, n = this.getDimensions, r = await n(e.floating);\n    return {\n        reference: br(e.reference, await t(e.floating), e.strategy),\n        floating: {\n            x: 0,\n            y: 0,\n            width: r.width,\n            height: r.height\n        }\n    };\n};\nfunction yr(e) {\n    return q(e).direction === \"rtl\";\n}\nconst wr = {\n    convertOffsetParentRelativeRectToViewportRelativeRect: ur,\n    getDocumentElement: X,\n    getClippingRect: vr,\n    getOffsetParent: rn,\n    getElementRects: gr,\n    getClientRects: lr,\n    getDimensions: mr,\n    getScale: de,\n    isElement: Y,\n    isRTL: yr\n};\nfunction on(e, t) {\n    return e.x === t.x && e.y === t.y && e.width === t.width && e.height === t.height;\n}\nfunction xr(e, t) {\n    let n = null, r;\n    const i = X(e);\n    function o() {\n        var a;\n        clearTimeout(r), (a = n) == null || a.disconnect(), n = null;\n    }\n    function s(a, c) {\n        a === void 0 && (a = !1), c === void 0 && (c = 1), o();\n        const u = e.getBoundingClientRect(), { left: l, top: f, width: h, height: d } = u;\n        if (a || t(), !h || !d) return;\n        const m = Le(f), p = Le(i.clientWidth - (l + h)), b = Le(i.clientHeight - (f + d)), v = Le(l), E = {\n            rootMargin: -m + \"px \" + -p + \"px \" + -b + \"px \" + -v + \"px\",\n            threshold: se(0, De(1, c)) || 1\n        };\n        let P = !0;\n        function g(S) {\n            const C = S[0].intersectionRatio;\n            if (C !== c) {\n                if (!P) return s();\n                C ? s(!1, C) : r = setTimeout(()=>{\n                    s(!1, 1e-7);\n                }, 1e3);\n            }\n            C === 1 && !on(u, e.getBoundingClientRect()) && s(), P = !1;\n        }\n        try {\n            n = new IntersectionObserver(g, {\n                ...E,\n                // Handle <iframe>s\n                root: i.ownerDocument\n            });\n        } catch  {\n            n = new IntersectionObserver(g, E);\n        }\n        n.observe(e);\n    }\n    return s(!0), o;\n}\nfunction Sr(e, t, n, r) {\n    r === void 0 && (r = {});\n    const { ancestorScroll: i = !0, ancestorResize: o = !0, elementResize: s = typeof ResizeObserver == \"function\", layoutShift: a = typeof IntersectionObserver == \"function\", animationFrame: c = !1 } = r, u = pt(e), l = i || o ? [\n        ...u ? Te(u) : [],\n        ...Te(t)\n    ] : [];\n    l.forEach((v)=>{\n        i && v.addEventListener(\"scroll\", n, {\n            passive: !0\n        }), o && v.addEventListener(\"resize\", n);\n    });\n    const f = u && a ? xr(u, n) : null;\n    let h = -1, d = null;\n    s && (d = new ResizeObserver((v)=>{\n        let [x] = v;\n        x && x.target === u && d && (d.unobserve(t), cancelAnimationFrame(h), h = requestAnimationFrame(()=>{\n            var E;\n            (E = d) == null || E.observe(t);\n        })), n();\n    }), u && !c && d.observe(u), d.observe(t));\n    let m, p = c ? ce(e) : null;\n    c && b();\n    function b() {\n        const v = ce(e);\n        p && !on(p, v) && n(), p = v, m = requestAnimationFrame(b);\n    }\n    return n(), ()=>{\n        var v;\n        l.forEach((x)=>{\n            i && x.removeEventListener(\"scroll\", n), o && x.removeEventListener(\"resize\", n);\n        }), f == null || f(), (v = d) == null || v.disconnect(), d = null, c && cancelAnimationFrame(m);\n    };\n}\nconst Er = rr, Tr = ir, Cr = tr, Pr = (e, t, n)=>{\n    const r = /* @__PURE__ */ new Map(), i = {\n        platform: wr,\n        ...n\n    }, o = {\n        ...i.platform,\n        _c: r\n    };\n    return er(e, t, {\n        ...i,\n        platform: o\n    });\n};\nvar Do = typeof globalThis < \"u\" ? globalThis :  false ? 0 : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {};\nfunction Or(e) {\n    return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, \"default\") ? e.default : e;\n}\nvar Me = {\n    exports: {}\n}, Ar = Me.exports, kt;\nfunction kr() {\n    return kt || (kt = 1, function(e) {\n        (function(t, n) {\n            e.exports ? e.exports = n() : t.log = n();\n        })(Ar, function() {\n            var t = function() {}, n = \"undefined\", r = \"undefined\" !== n && typeof window.navigator !== n && /Trident\\/|MSIE /.test(window.navigator.userAgent), i = [\n                \"trace\",\n                \"debug\",\n                \"info\",\n                \"warn\",\n                \"error\"\n            ], o = {}, s = null;\n            function a(p, b) {\n                var v = p[b];\n                if (typeof v.bind == \"function\") return v.bind(p);\n                try {\n                    return Function.prototype.bind.call(v, p);\n                } catch  {\n                    return function() {\n                        return Function.prototype.apply.apply(v, [\n                            p,\n                            arguments\n                        ]);\n                    };\n                }\n            }\n            function c() {\n                console.log && (console.log.apply ? console.log.apply(console, arguments) : Function.prototype.apply.apply(console.log, [\n                    console,\n                    arguments\n                ])), console.trace && console.trace();\n            }\n            function u(p) {\n                return p === \"debug\" && (p = \"log\"), typeof console === n ? !1 : p === \"trace\" && r ? c : console[p] !== void 0 ? a(console, p) : console.log !== void 0 ? a(console, \"log\") : t;\n            }\n            function l() {\n                for(var p = this.getLevel(), b = 0; b < i.length; b++){\n                    var v = i[b];\n                    this[v] = b < p ? t : this.methodFactory(v, p, this.name);\n                }\n                if (this.log = this.debug, typeof console === n && p < this.levels.SILENT) return \"No console available for logging\";\n            }\n            function f(p) {\n                return function() {\n                    typeof console !== n && (l.call(this), this[p].apply(this, arguments));\n                };\n            }\n            function h(p, b, v) {\n                return u(p) || f.apply(this, arguments);\n            }\n            function d(p, b) {\n                var v = this, x, E, P, g = \"loglevel\";\n                typeof p == \"string\" ? g += \":\" + p : typeof p == \"symbol\" && (g = void 0);\n                function S(T) {\n                    var L = (i[T] || \"silent\").toUpperCase();\n                    if (!(\"undefined\" === n || !g)) {\n                        try {\n                            window.localStorage[g] = L;\n                            return;\n                        } catch  {}\n                        try {\n                            window.document.cookie = encodeURIComponent(g) + \"=\" + L + \";\";\n                        } catch  {}\n                    }\n                }\n                function C() {\n                    var T;\n                    if (!(\"undefined\" === n || !g)) {\n                        try {\n                            T = window.localStorage[g];\n                        } catch  {}\n                        if (typeof T === n) try {\n                            var L = window.document.cookie, oe = encodeURIComponent(g), K = L.indexOf(oe + \"=\");\n                            K !== -1 && (T = /^([^;]+)/.exec(L.slice(K + oe.length + 1))[1]);\n                        } catch  {}\n                        return v.levels[T] === void 0 && (T = void 0), T;\n                    }\n                }\n                function $() {\n                    if (!(\"undefined\" === n || !g)) {\n                        try {\n                            window.localStorage.removeItem(g);\n                        } catch  {}\n                        try {\n                            window.document.cookie = encodeURIComponent(g) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n                        } catch  {}\n                    }\n                }\n                function I(T) {\n                    var L = T;\n                    if (typeof L == \"string\" && v.levels[L.toUpperCase()] !== void 0 && (L = v.levels[L.toUpperCase()]), typeof L == \"number\" && L >= 0 && L <= v.levels.SILENT) return L;\n                    throw new TypeError(\"log.setLevel() called with invalid level: \" + T);\n                }\n                v.name = p, v.levels = {\n                    TRACE: 0,\n                    DEBUG: 1,\n                    INFO: 2,\n                    WARN: 3,\n                    ERROR: 4,\n                    SILENT: 5\n                }, v.methodFactory = b || h, v.getLevel = function() {\n                    return P ?? E ?? x;\n                }, v.setLevel = function(T, L) {\n                    return P = I(T), L !== !1 && S(P), l.call(v);\n                }, v.setDefaultLevel = function(T) {\n                    E = I(T), C() || v.setLevel(T, !1);\n                }, v.resetLevel = function() {\n                    P = null, $(), l.call(v);\n                }, v.enableAll = function(T) {\n                    v.setLevel(v.levels.TRACE, T);\n                }, v.disableAll = function(T) {\n                    v.setLevel(v.levels.SILENT, T);\n                }, v.rebuild = function() {\n                    if (s !== v && (x = I(s.getLevel())), l.call(v), s === v) for(var T in o)o[T].rebuild();\n                }, x = I(s ? s.getLevel() : \"WARN\");\n                var z = C();\n                z != null && (P = I(z)), l.call(v);\n            }\n            s = new d(), s.getLogger = function(b) {\n                if (typeof b != \"symbol\" && typeof b != \"string\" || b === \"\") throw new TypeError(\"You must supply a name when creating a logger.\");\n                var v = o[b];\n                return v || (v = o[b] = new d(b, s.methodFactory)), v;\n            };\n            var m = \"undefined\" !== n ? window.log : void 0;\n            return s.noConflict = function() {\n                return \"undefined\" !== n && window.log === s && (window.log = m), s;\n            }, s.getLoggers = function() {\n                return o;\n            }, s.default = s, s;\n        });\n    }(Me)), Me.exports;\n}\nvar Lr = kr();\nconst _r = /* @__PURE__ */ Or(Lr);\nvar st = function(e, t) {\n    return st = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(n, r) {\n        n.__proto__ = r;\n    } || function(n, r) {\n        for(var i in r)Object.prototype.hasOwnProperty.call(r, i) && (n[i] = r[i]);\n    }, st(e, t);\n};\nfunction ee(e, t) {\n    if (typeof t != \"function\" && t !== null) throw new TypeError(\"Class extends value \" + String(t) + \" is not a constructor or null\");\n    st(e, t);\n    function n() {\n        this.constructor = e;\n    }\n    e.prototype = t === null ? Object.create(t) : (n.prototype = t.prototype, new n());\n}\nfunction Ir(e, t, n, r) {\n    function i(o) {\n        return o instanceof n ? o : new n(function(s) {\n            s(o);\n        });\n    }\n    return new (n || (n = Promise))(function(o, s) {\n        function a(l) {\n            try {\n                u(r.next(l));\n            } catch (f) {\n                s(f);\n            }\n        }\n        function c(l) {\n            try {\n                u(r.throw(l));\n            } catch (f) {\n                s(f);\n            }\n        }\n        function u(l) {\n            l.done ? o(l.value) : i(l.value).then(a, c);\n        }\n        u((r = r.apply(e, t || [])).next());\n    });\n}\nfunction sn(e, t) {\n    var n = {\n        label: 0,\n        sent: function() {\n            if (o[0] & 1) throw o[1];\n            return o[1];\n        },\n        trys: [],\n        ops: []\n    }, r, i, o, s = Object.create((typeof Iterator == \"function\" ? Iterator : Object).prototype);\n    return s.next = a(0), s.throw = a(1), s.return = a(2), typeof Symbol == \"function\" && (s[Symbol.iterator] = function() {\n        return this;\n    }), s;\n    function a(u) {\n        return function(l) {\n            return c([\n                u,\n                l\n            ]);\n        };\n    }\n    function c(u) {\n        if (r) throw new TypeError(\"Generator is already executing.\");\n        for(; s && (s = 0, u[0] && (n = 0)), n;)try {\n            if (r = 1, i && (o = u[0] & 2 ? i.return : u[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, u[1])).done) return o;\n            switch(i = 0, o && (u = [\n                u[0] & 2,\n                o.value\n            ]), u[0]){\n                case 0:\n                case 1:\n                    o = u;\n                    break;\n                case 4:\n                    return n.label++, {\n                        value: u[1],\n                        done: !1\n                    };\n                case 5:\n                    n.label++, i = u[1], u = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    u = n.ops.pop(), n.trys.pop();\n                    continue;\n                default:\n                    if (o = n.trys, !(o = o.length > 0 && o[o.length - 1]) && (u[0] === 6 || u[0] === 2)) {\n                        n = 0;\n                        continue;\n                    }\n                    if (u[0] === 3 && (!o || u[1] > o[0] && u[1] < o[3])) {\n                        n.label = u[1];\n                        break;\n                    }\n                    if (u[0] === 6 && n.label < o[1]) {\n                        n.label = o[1], o = u;\n                        break;\n                    }\n                    if (o && n.label < o[2]) {\n                        n.label = o[2], n.ops.push(u);\n                        break;\n                    }\n                    o[2] && n.ops.pop(), n.trys.pop();\n                    continue;\n            }\n            u = t.call(e, n);\n        } catch (l) {\n            u = [\n                6,\n                l\n            ], i = 0;\n        } finally{\n            r = o = 0;\n        }\n        if (u[0] & 5) throw u[1];\n        return {\n            value: u[0] ? u[1] : void 0,\n            done: !0\n        };\n    }\n}\nfunction me(e) {\n    var t = typeof Symbol == \"function\" && Symbol.iterator, n = t && e[t], r = 0;\n    if (n) return n.call(e);\n    if (e && typeof e.length == \"number\") return {\n        next: function() {\n            return e && r >= e.length && (e = void 0), {\n                value: e && e[r++],\n                done: !e\n            };\n        }\n    };\n    throw new TypeError(t ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction ue(e, t) {\n    var n = typeof Symbol == \"function\" && e[Symbol.iterator];\n    if (!n) return e;\n    var r = n.call(e), i, o = [], s;\n    try {\n        for(; (t === void 0 || t-- > 0) && !(i = r.next()).done;)o.push(i.value);\n    } catch (a) {\n        s = {\n            error: a\n        };\n    } finally{\n        try {\n            i && !i.done && (n = r.return) && n.call(r);\n        } finally{\n            if (s) throw s.error;\n        }\n    }\n    return o;\n}\nfunction be(e, t, n) {\n    if (n || arguments.length === 2) for(var r = 0, i = t.length, o; r < i; r++)(o || !(r in t)) && (o || (o = Array.prototype.slice.call(t, 0, r)), o[r] = t[r]);\n    return e.concat(o || Array.prototype.slice.call(t));\n}\nfunction pe(e) {\n    return this instanceof pe ? (this.v = e, this) : new pe(e);\n}\nfunction Mr(e, t, n) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var r = n.apply(e, t || []), i, o = [];\n    return i = Object.create((typeof AsyncIterator == \"function\" ? AsyncIterator : Object).prototype), a(\"next\"), a(\"throw\"), a(\"return\", s), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function s(d) {\n        return function(m) {\n            return Promise.resolve(m).then(d, f);\n        };\n    }\n    function a(d, m) {\n        r[d] && (i[d] = function(p) {\n            return new Promise(function(b, v) {\n                o.push([\n                    d,\n                    p,\n                    b,\n                    v\n                ]) > 1 || c(d, p);\n            });\n        }, m && (i[d] = m(i[d])));\n    }\n    function c(d, m) {\n        try {\n            u(r[d](m));\n        } catch (p) {\n            h(o[0][3], p);\n        }\n    }\n    function u(d) {\n        d.value instanceof pe ? Promise.resolve(d.value.v).then(l, f) : h(o[0][2], d);\n    }\n    function l(d) {\n        c(\"next\", d);\n    }\n    function f(d) {\n        c(\"throw\", d);\n    }\n    function h(d, m) {\n        d(m), o.shift(), o.length && c(o[0][0], o[0][1]);\n    }\n}\nfunction Rr(e) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var t = e[Symbol.asyncIterator], n;\n    return t ? t.call(e) : (e = typeof me == \"function\" ? me(e) : e[Symbol.iterator](), n = {}, r(\"next\"), r(\"throw\"), r(\"return\"), n[Symbol.asyncIterator] = function() {\n        return this;\n    }, n);\n    function r(o) {\n        n[o] = e[o] && function(s) {\n            return new Promise(function(a, c) {\n                s = e[o](s), i(a, c, s.done, s.value);\n            });\n        };\n    }\n    function i(o, s, a, c) {\n        Promise.resolve(c).then(function(u) {\n            o({\n                value: u,\n                done: a\n            });\n        }, s);\n    }\n}\nfunction O(e) {\n    return typeof e == \"function\";\n}\nfunction vt(e) {\n    var t = function(r) {\n        Error.call(r), r.stack = new Error().stack;\n    }, n = e(t);\n    return n.prototype = Object.create(Error.prototype), n.prototype.constructor = n, n;\n}\nvar Ze = vt(function(e) {\n    return function(n) {\n        e(this), this.message = n ? n.length + ` errors occurred during unsubscription:\n` + n.map(function(r, i) {\n            return i + 1 + \") \" + r.toString();\n        }).join(`\n  `) : \"\", this.name = \"UnsubscriptionError\", this.errors = n;\n    };\n});\nfunction Ue(e, t) {\n    if (e) {\n        var n = e.indexOf(t);\n        0 <= n && e.splice(n, 1);\n    }\n}\nvar Ae = function() {\n    function e(t) {\n        this.initialTeardown = t, this.closed = !1, this._parentage = null, this._finalizers = null;\n    }\n    return e.prototype.unsubscribe = function() {\n        var t, n, r, i, o;\n        if (!this.closed) {\n            this.closed = !0;\n            var s = this._parentage;\n            if (s) if (this._parentage = null, Array.isArray(s)) try {\n                for(var a = me(s), c = a.next(); !c.done; c = a.next()){\n                    var u = c.value;\n                    u.remove(this);\n                }\n            } catch (p) {\n                t = {\n                    error: p\n                };\n            } finally{\n                try {\n                    c && !c.done && (n = a.return) && n.call(a);\n                } finally{\n                    if (t) throw t.error;\n                }\n            }\n            else s.remove(this);\n            var l = this.initialTeardown;\n            if (O(l)) try {\n                l();\n            } catch (p) {\n                o = p instanceof Ze ? p.errors : [\n                    p\n                ];\n            }\n            var f = this._finalizers;\n            if (f) {\n                this._finalizers = null;\n                try {\n                    for(var h = me(f), d = h.next(); !d.done; d = h.next()){\n                        var m = d.value;\n                        try {\n                            Lt(m);\n                        } catch (p) {\n                            o = o ?? [], p instanceof Ze ? o = be(be([], ue(o)), ue(p.errors)) : o.push(p);\n                        }\n                    }\n                } catch (p) {\n                    r = {\n                        error: p\n                    };\n                } finally{\n                    try {\n                        d && !d.done && (i = h.return) && i.call(h);\n                    } finally{\n                        if (r) throw r.error;\n                    }\n                }\n            }\n            if (o) throw new Ze(o);\n        }\n    }, e.prototype.add = function(t) {\n        var n;\n        if (t && t !== this) if (this.closed) Lt(t);\n        else {\n            if (t instanceof e) {\n                if (t.closed || t._hasParent(this)) return;\n                t._addParent(this);\n            }\n            (this._finalizers = (n = this._finalizers) !== null && n !== void 0 ? n : []).push(t);\n        }\n    }, e.prototype._hasParent = function(t) {\n        var n = this._parentage;\n        return n === t || Array.isArray(n) && n.includes(t);\n    }, e.prototype._addParent = function(t) {\n        var n = this._parentage;\n        this._parentage = Array.isArray(n) ? (n.push(t), n) : n ? [\n            n,\n            t\n        ] : t;\n    }, e.prototype._removeParent = function(t) {\n        var n = this._parentage;\n        n === t ? this._parentage = null : Array.isArray(n) && Ue(n, t);\n    }, e.prototype.remove = function(t) {\n        var n = this._finalizers;\n        n && Ue(n, t), t instanceof e && t._removeParent(this);\n    }, e.EMPTY = function() {\n        var t = new e();\n        return t.closed = !0, t;\n    }(), e;\n}(), an = Ae.EMPTY;\nfunction cn(e) {\n    return e instanceof Ae || e && \"closed\" in e && O(e.remove) && O(e.add) && O(e.unsubscribe);\n}\nfunction Lt(e) {\n    O(e) ? e() : e.unsubscribe();\n}\nvar Dr = {\n    Promise: void 0\n}, $r = {\n    setTimeout: function(e, t) {\n        for(var n = [], r = 2; r < arguments.length; r++)n[r - 2] = arguments[r];\n        return setTimeout.apply(void 0, be([\n            e,\n            t\n        ], ue(n)));\n    },\n    clearTimeout: function(e) {\n        return clearTimeout(e);\n    },\n    delegate: void 0\n};\nfunction un(e) {\n    $r.setTimeout(function() {\n        throw e;\n    });\n}\nfunction je() {}\nfunction Re(e) {\n    e();\n}\nvar mt = function(e) {\n    ee(t, e);\n    function t(n) {\n        var r = e.call(this) || this;\n        return r.isStopped = !1, n ? (r.destination = n, cn(n) && n.add(r)) : r.destination = Ur, r;\n    }\n    return t.create = function(n, r, i) {\n        return new Ce(n, r, i);\n    }, t.prototype.next = function(n) {\n        this.isStopped || this._next(n);\n    }, t.prototype.error = function(n) {\n        this.isStopped || (this.isStopped = !0, this._error(n));\n    }, t.prototype.complete = function() {\n        this.isStopped || (this.isStopped = !0, this._complete());\n    }, t.prototype.unsubscribe = function() {\n        this.closed || (this.isStopped = !0, e.prototype.unsubscribe.call(this), this.destination = null);\n    }, t.prototype._next = function(n) {\n        this.destination.next(n);\n    }, t.prototype._error = function(n) {\n        try {\n            this.destination.error(n);\n        } finally{\n            this.unsubscribe();\n        }\n    }, t.prototype._complete = function() {\n        try {\n            this.destination.complete();\n        } finally{\n            this.unsubscribe();\n        }\n    }, t;\n}(Ae), Nr = function() {\n    function e(t) {\n        this.partialObserver = t;\n    }\n    return e.prototype.next = function(t) {\n        var n = this.partialObserver;\n        if (n.next) try {\n            n.next(t);\n        } catch (r) {\n            _e(r);\n        }\n    }, e.prototype.error = function(t) {\n        var n = this.partialObserver;\n        if (n.error) try {\n            n.error(t);\n        } catch (r) {\n            _e(r);\n        }\n        else _e(t);\n    }, e.prototype.complete = function() {\n        var t = this.partialObserver;\n        if (t.complete) try {\n            t.complete();\n        } catch (n) {\n            _e(n);\n        }\n    }, e;\n}(), Ce = function(e) {\n    ee(t, e);\n    function t(n, r, i) {\n        var o = e.call(this) || this, s;\n        return O(n) || !n ? s = {\n            next: n ?? void 0,\n            error: r ?? void 0,\n            complete: i ?? void 0\n        } : s = n, o.destination = new Nr(s), o;\n    }\n    return t;\n}(mt);\nfunction _e(e) {\n    un(e);\n}\nfunction Fr(e) {\n    throw e;\n}\nvar Ur = {\n    closed: !0,\n    next: je,\n    error: Fr,\n    complete: je\n}, bt = function() {\n    return typeof Symbol == \"function\" && Symbol.observable || \"@@observable\";\n}();\nfunction gt(e) {\n    return e;\n}\nfunction jr(e) {\n    return e.length === 0 ? gt : e.length === 1 ? e[0] : function(n) {\n        return e.reduce(function(r, i) {\n            return i(r);\n        }, n);\n    };\n}\nvar k = function() {\n    function e(t) {\n        t && (this._subscribe = t);\n    }\n    return e.prototype.lift = function(t) {\n        var n = new e();\n        return n.source = this, n.operator = t, n;\n    }, e.prototype.subscribe = function(t, n, r) {\n        var i = this, o = Br(t) ? t : new Ce(t, n, r);\n        return Re(function() {\n            var s = i, a = s.operator, c = s.source;\n            o.add(a ? a.call(o, c) : c ? i._subscribe(o) : i._trySubscribe(o));\n        }), o;\n    }, e.prototype._trySubscribe = function(t) {\n        try {\n            return this._subscribe(t);\n        } catch (n) {\n            t.error(n);\n        }\n    }, e.prototype.forEach = function(t, n) {\n        var r = this;\n        return n = _t(n), new n(function(i, o) {\n            var s = new Ce({\n                next: function(a) {\n                    try {\n                        t(a);\n                    } catch (c) {\n                        o(c), s.unsubscribe();\n                    }\n                },\n                error: o,\n                complete: i\n            });\n            r.subscribe(s);\n        });\n    }, e.prototype._subscribe = function(t) {\n        var n;\n        return (n = this.source) === null || n === void 0 ? void 0 : n.subscribe(t);\n    }, e.prototype[bt] = function() {\n        return this;\n    }, e.prototype.pipe = function() {\n        for(var t = [], n = 0; n < arguments.length; n++)t[n] = arguments[n];\n        return jr(t)(this);\n    }, e.prototype.toPromise = function(t) {\n        var n = this;\n        return t = _t(t), new t(function(r, i) {\n            var o;\n            n.subscribe(function(s) {\n                return o = s;\n            }, function(s) {\n                return i(s);\n            }, function() {\n                return r(o);\n            });\n        });\n    }, e.create = function(t) {\n        return new e(t);\n    }, e;\n}();\nfunction _t(e) {\n    var t;\n    return (t = e ?? Dr.Promise) !== null && t !== void 0 ? t : Promise;\n}\nfunction Wr(e) {\n    return e && O(e.next) && O(e.error) && O(e.complete);\n}\nfunction Br(e) {\n    return e && e instanceof mt || Wr(e) && cn(e);\n}\nfunction Vr(e) {\n    return O(e == null ? void 0 : e.lift);\n}\nfunction U(e) {\n    return function(t) {\n        if (Vr(t)) return t.lift(function(n) {\n            try {\n                return e(n, this);\n            } catch (r) {\n                this.error(r);\n            }\n        });\n        throw new TypeError(\"Unable to lift unknown Observable type\");\n    };\n}\nfunction B(e, t, n, r, i) {\n    return new Hr(e, t, n, r, i);\n}\nvar Hr = function(e) {\n    ee(t, e);\n    function t(n, r, i, o, s, a) {\n        var c = e.call(this, n) || this;\n        return c.onFinalize = s, c.shouldUnsubscribe = a, c._next = r ? function(u) {\n            try {\n                r(u);\n            } catch (l) {\n                n.error(l);\n            }\n        } : e.prototype._next, c._error = o ? function(u) {\n            try {\n                o(u);\n            } catch (l) {\n                n.error(l);\n            } finally{\n                this.unsubscribe();\n            }\n        } : e.prototype._error, c._complete = i ? function() {\n            try {\n                i();\n            } catch (u) {\n                n.error(u);\n            } finally{\n                this.unsubscribe();\n            }\n        } : e.prototype._complete, c;\n    }\n    return t.prototype.unsubscribe = function() {\n        var n;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var r = this.closed;\n            e.prototype.unsubscribe.call(this), !r && ((n = this.onFinalize) === null || n === void 0 || n.call(this));\n        }\n    }, t;\n}(mt), zr = vt(function(e) {\n    return function() {\n        e(this), this.name = \"ObjectUnsubscribedError\", this.message = \"object unsubscribed\";\n    };\n}), J = function(e) {\n    ee(t, e);\n    function t() {\n        var n = e.call(this) || this;\n        return n.closed = !1, n.currentObservers = null, n.observers = [], n.isStopped = !1, n.hasError = !1, n.thrownError = null, n;\n    }\n    return t.prototype.lift = function(n) {\n        var r = new It(this, this);\n        return r.operator = n, r;\n    }, t.prototype._throwIfClosed = function() {\n        if (this.closed) throw new zr();\n    }, t.prototype.next = function(n) {\n        var r = this;\n        Re(function() {\n            var i, o;\n            if (r._throwIfClosed(), !r.isStopped) {\n                r.currentObservers || (r.currentObservers = Array.from(r.observers));\n                try {\n                    for(var s = me(r.currentObservers), a = s.next(); !a.done; a = s.next()){\n                        var c = a.value;\n                        c.next(n);\n                    }\n                } catch (u) {\n                    i = {\n                        error: u\n                    };\n                } finally{\n                    try {\n                        a && !a.done && (o = s.return) && o.call(s);\n                    } finally{\n                        if (i) throw i.error;\n                    }\n                }\n            }\n        });\n    }, t.prototype.error = function(n) {\n        var r = this;\n        Re(function() {\n            if (r._throwIfClosed(), !r.isStopped) {\n                r.hasError = r.isStopped = !0, r.thrownError = n;\n                for(var i = r.observers; i.length;)i.shift().error(n);\n            }\n        });\n    }, t.prototype.complete = function() {\n        var n = this;\n        Re(function() {\n            if (n._throwIfClosed(), !n.isStopped) {\n                n.isStopped = !0;\n                for(var r = n.observers; r.length;)r.shift().complete();\n            }\n        });\n    }, t.prototype.unsubscribe = function() {\n        this.isStopped = this.closed = !0, this.observers = this.currentObservers = null;\n    }, Object.defineProperty(t.prototype, \"observed\", {\n        get: function() {\n            var n;\n            return ((n = this.observers) === null || n === void 0 ? void 0 : n.length) > 0;\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype._trySubscribe = function(n) {\n        return this._throwIfClosed(), e.prototype._trySubscribe.call(this, n);\n    }, t.prototype._subscribe = function(n) {\n        return this._throwIfClosed(), this._checkFinalizedStatuses(n), this._innerSubscribe(n);\n    }, t.prototype._innerSubscribe = function(n) {\n        var r = this, i = this, o = i.hasError, s = i.isStopped, a = i.observers;\n        return o || s ? an : (this.currentObservers = null, a.push(n), new Ae(function() {\n            r.currentObservers = null, Ue(a, n);\n        }));\n    }, t.prototype._checkFinalizedStatuses = function(n) {\n        var r = this, i = r.hasError, o = r.thrownError, s = r.isStopped;\n        i ? n.error(o) : s && n.complete();\n    }, t.prototype.asObservable = function() {\n        var n = new k();\n        return n.source = this, n;\n    }, t.create = function(n, r) {\n        return new It(n, r);\n    }, t;\n}(k), It = function(e) {\n    ee(t, e);\n    function t(n, r) {\n        var i = e.call(this) || this;\n        return i.destination = n, i.source = r, i;\n    }\n    return t.prototype.next = function(n) {\n        var r, i;\n        (i = (r = this.destination) === null || r === void 0 ? void 0 : r.next) === null || i === void 0 || i.call(r, n);\n    }, t.prototype.error = function(n) {\n        var r, i;\n        (i = (r = this.destination) === null || r === void 0 ? void 0 : r.error) === null || i === void 0 || i.call(r, n);\n    }, t.prototype.complete = function() {\n        var n, r;\n        (r = (n = this.destination) === null || n === void 0 ? void 0 : n.complete) === null || r === void 0 || r.call(n);\n    }, t.prototype._subscribe = function(n) {\n        var r, i;\n        return (i = (r = this.source) === null || r === void 0 ? void 0 : r.subscribe(n)) !== null && i !== void 0 ? i : an;\n    }, t;\n}(J), ln = function(e) {\n    ee(t, e);\n    function t(n) {\n        var r = e.call(this) || this;\n        return r._value = n, r;\n    }\n    return Object.defineProperty(t.prototype, \"value\", {\n        get: function() {\n            return this.getValue();\n        },\n        enumerable: !1,\n        configurable: !0\n    }), t.prototype._subscribe = function(n) {\n        var r = e.prototype._subscribe.call(this, n);\n        return !r.closed && n.next(this._value), r;\n    }, t.prototype.getValue = function() {\n        var n = this, r = n.hasError, i = n.thrownError, o = n._value;\n        if (r) throw i;\n        return this._throwIfClosed(), o;\n    }, t.prototype.next = function(n) {\n        e.prototype.next.call(this, this._value = n);\n    }, t;\n}(J), Yr = {\n    now: function() {\n        return Date.now();\n    }\n}, qr = function(e) {\n    ee(t, e);\n    function t(n, r) {\n        return e.call(this) || this;\n    }\n    return t.prototype.schedule = function(n, r) {\n        return this;\n    }, t;\n}(Ae), Mt = {\n    setInterval: function(e, t) {\n        for(var n = [], r = 2; r < arguments.length; r++)n[r - 2] = arguments[r];\n        return setInterval.apply(void 0, be([\n            e,\n            t\n        ], ue(n)));\n    },\n    clearInterval: function(e) {\n        return clearInterval(e);\n    },\n    delegate: void 0\n}, Kr = function(e) {\n    ee(t, e);\n    function t(n, r) {\n        var i = e.call(this, n, r) || this;\n        return i.scheduler = n, i.work = r, i.pending = !1, i;\n    }\n    return t.prototype.schedule = function(n, r) {\n        var i;\n        if (r === void 0 && (r = 0), this.closed) return this;\n        this.state = n;\n        var o = this.id, s = this.scheduler;\n        return o != null && (this.id = this.recycleAsyncId(s, o, r)), this.pending = !0, this.delay = r, this.id = (i = this.id) !== null && i !== void 0 ? i : this.requestAsyncId(s, this.id, r), this;\n    }, t.prototype.requestAsyncId = function(n, r, i) {\n        return i === void 0 && (i = 0), Mt.setInterval(n.flush.bind(n, this), i);\n    }, t.prototype.recycleAsyncId = function(n, r, i) {\n        if (i === void 0 && (i = 0), i != null && this.delay === i && this.pending === !1) return r;\n        r != null && Mt.clearInterval(r);\n    }, t.prototype.execute = function(n, r) {\n        if (this.closed) return new Error(\"executing a cancelled action\");\n        this.pending = !1;\n        var i = this._execute(n, r);\n        if (i) return i;\n        this.pending === !1 && this.id != null && (this.id = this.recycleAsyncId(this.scheduler, this.id, null));\n    }, t.prototype._execute = function(n, r) {\n        var i = !1, o;\n        try {\n            this.work(n);\n        } catch (s) {\n            i = !0, o = s || new Error(\"Scheduled action threw falsy error\");\n        }\n        if (i) return this.unsubscribe(), o;\n    }, t.prototype.unsubscribe = function() {\n        if (!this.closed) {\n            var n = this, r = n.id, i = n.scheduler, o = i.actions;\n            this.work = this.state = this.scheduler = null, this.pending = !1, Ue(o, this), r != null && (this.id = this.recycleAsyncId(i, r, null)), this.delay = null, e.prototype.unsubscribe.call(this);\n        }\n    }, t;\n}(qr), Rt = function() {\n    function e(t, n) {\n        n === void 0 && (n = e.now), this.schedulerActionCtor = t, this.now = n;\n    }\n    return e.prototype.schedule = function(t, n, r) {\n        return n === void 0 && (n = 0), new this.schedulerActionCtor(this, t).schedule(r, n);\n    }, e.now = Yr.now, e;\n}(), Gr = function(e) {\n    ee(t, e);\n    function t(n, r) {\n        r === void 0 && (r = Rt.now);\n        var i = e.call(this, n, r) || this;\n        return i.actions = [], i._active = !1, i;\n    }\n    return t.prototype.flush = function(n) {\n        var r = this.actions;\n        if (this._active) {\n            r.push(n);\n            return;\n        }\n        var i;\n        this._active = !0;\n        do if (i = n.execute(n.state, n.delay)) break;\n        while (n = r.shift());\n        if (this._active = !1, i) {\n            for(; n = r.shift();)n.unsubscribe();\n            throw i;\n        }\n    }, t;\n}(Rt), Qr = new Gr(Kr);\nfunction Jr(e) {\n    return e && O(e.schedule);\n}\nfunction Xr(e) {\n    return e[e.length - 1];\n}\nfunction yt(e) {\n    return Jr(Xr(e)) ? e.pop() : void 0;\n}\nvar wt = function(e) {\n    return e && typeof e.length == \"number\" && typeof e != \"function\";\n};\nfunction fn(e) {\n    return O(e == null ? void 0 : e.then);\n}\nfunction dn(e) {\n    return O(e[bt]);\n}\nfunction pn(e) {\n    return Symbol.asyncIterator && O(e == null ? void 0 : e[Symbol.asyncIterator]);\n}\nfunction hn(e) {\n    return new TypeError(\"You provided \" + (e !== null && typeof e == \"object\" ? \"an invalid object\" : \"'\" + e + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\nfunction Zr() {\n    return typeof Symbol != \"function\" || !Symbol.iterator ? \"@@iterator\" : Symbol.iterator;\n}\nvar vn = Zr();\nfunction mn(e) {\n    return O(e == null ? void 0 : e[vn]);\n}\nfunction bn(e) {\n    return Mr(this, arguments, function() {\n        var n, r, i, o;\n        return sn(this, function(s) {\n            switch(s.label){\n                case 0:\n                    n = e.getReader(), s.label = 1;\n                case 1:\n                    s.trys.push([\n                        1,\n                        ,\n                        9,\n                        10\n                    ]), s.label = 2;\n                case 2:\n                    return [\n                        4,\n                        pe(n.read())\n                    ];\n                case 3:\n                    return r = s.sent(), i = r.value, o = r.done, o ? [\n                        4,\n                        pe(void 0)\n                    ] : [\n                        3,\n                        5\n                    ];\n                case 4:\n                    return [\n                        2,\n                        s.sent()\n                    ];\n                case 5:\n                    return [\n                        4,\n                        pe(i)\n                    ];\n                case 6:\n                    return [\n                        4,\n                        s.sent()\n                    ];\n                case 7:\n                    return s.sent(), [\n                        3,\n                        2\n                    ];\n                case 8:\n                    return [\n                        3,\n                        10\n                    ];\n                case 9:\n                    return n.releaseLock(), [\n                        7\n                    ];\n                case 10:\n                    return [\n                        2\n                    ];\n            }\n        });\n    });\n}\nfunction gn(e) {\n    return O(e == null ? void 0 : e.getReader);\n}\nfunction H(e) {\n    if (e instanceof k) return e;\n    if (e != null) {\n        if (dn(e)) return ei(e);\n        if (wt(e)) return ti(e);\n        if (fn(e)) return ni(e);\n        if (pn(e)) return yn(e);\n        if (mn(e)) return ri(e);\n        if (gn(e)) return ii(e);\n    }\n    throw hn(e);\n}\nfunction ei(e) {\n    return new k(function(t) {\n        var n = e[bt]();\n        if (O(n.subscribe)) return n.subscribe(t);\n        throw new TypeError(\"Provided object does not correctly implement Symbol.observable\");\n    });\n}\nfunction ti(e) {\n    return new k(function(t) {\n        for(var n = 0; n < e.length && !t.closed; n++)t.next(e[n]);\n        t.complete();\n    });\n}\nfunction ni(e) {\n    return new k(function(t) {\n        e.then(function(n) {\n            t.closed || (t.next(n), t.complete());\n        }, function(n) {\n            return t.error(n);\n        }).then(null, un);\n    });\n}\nfunction ri(e) {\n    return new k(function(t) {\n        var n, r;\n        try {\n            for(var i = me(e), o = i.next(); !o.done; o = i.next()){\n                var s = o.value;\n                if (t.next(s), t.closed) return;\n            }\n        } catch (a) {\n            n = {\n                error: a\n            };\n        } finally{\n            try {\n                o && !o.done && (r = i.return) && r.call(i);\n            } finally{\n                if (n) throw n.error;\n            }\n        }\n        t.complete();\n    });\n}\nfunction yn(e) {\n    return new k(function(t) {\n        oi(e, t).catch(function(n) {\n            return t.error(n);\n        });\n    });\n}\nfunction ii(e) {\n    return yn(bn(e));\n}\nfunction oi(e, t) {\n    var n, r, i, o;\n    return Ir(this, void 0, void 0, function() {\n        var s, a;\n        return sn(this, function(c) {\n            switch(c.label){\n                case 0:\n                    c.trys.push([\n                        0,\n                        5,\n                        6,\n                        11\n                    ]), n = Rr(e), c.label = 1;\n                case 1:\n                    return [\n                        4,\n                        n.next()\n                    ];\n                case 2:\n                    if (r = c.sent(), !!r.done) return [\n                        3,\n                        4\n                    ];\n                    if (s = r.value, t.next(s), t.closed) return [\n                        2\n                    ];\n                    c.label = 3;\n                case 3:\n                    return [\n                        3,\n                        1\n                    ];\n                case 4:\n                    return [\n                        3,\n                        11\n                    ];\n                case 5:\n                    return a = c.sent(), i = {\n                        error: a\n                    }, [\n                        3,\n                        11\n                    ];\n                case 6:\n                    return c.trys.push([\n                        6,\n                        ,\n                        9,\n                        10\n                    ]), r && !r.done && (o = n.return) ? [\n                        4,\n                        o.call(n)\n                    ] : [\n                        3,\n                        8\n                    ];\n                case 7:\n                    c.sent(), c.label = 8;\n                case 8:\n                    return [\n                        3,\n                        10\n                    ];\n                case 9:\n                    if (i) throw i.error;\n                    return [\n                        7\n                    ];\n                case 10:\n                    return [\n                        7\n                    ];\n                case 11:\n                    return t.complete(), [\n                        2\n                    ];\n            }\n        });\n    });\n}\nfunction re(e, t, n, r, i) {\n    r === void 0 && (r = 0), i === void 0 && (i = !1);\n    var o = t.schedule(function() {\n        n(), i ? e.add(this.schedule(null, r)) : this.unsubscribe();\n    }, r);\n    if (e.add(o), !i) return o;\n}\nfunction wn(e, t) {\n    return t === void 0 && (t = 0), U(function(n, r) {\n        n.subscribe(B(r, function(i) {\n            return re(r, e, function() {\n                return r.next(i);\n            }, t);\n        }, function() {\n            return re(r, e, function() {\n                return r.complete();\n            }, t);\n        }, function(i) {\n            return re(r, e, function() {\n                return r.error(i);\n            }, t);\n        }));\n    });\n}\nfunction xn(e, t) {\n    return t === void 0 && (t = 0), U(function(n, r) {\n        r.add(e.schedule(function() {\n            return n.subscribe(r);\n        }, t));\n    });\n}\nfunction si(e, t) {\n    return H(e).pipe(xn(t), wn(t));\n}\nfunction ai(e, t) {\n    return H(e).pipe(xn(t), wn(t));\n}\nfunction ci(e, t) {\n    return new k(function(n) {\n        var r = 0;\n        return t.schedule(function() {\n            r === e.length ? n.complete() : (n.next(e[r++]), n.closed || this.schedule());\n        });\n    });\n}\nfunction ui(e, t) {\n    return new k(function(n) {\n        var r;\n        return re(n, t, function() {\n            r = e[vn](), re(n, t, function() {\n                var i, o, s;\n                try {\n                    i = r.next(), o = i.value, s = i.done;\n                } catch (a) {\n                    n.error(a);\n                    return;\n                }\n                s ? n.complete() : n.next(o);\n            }, 0, !0);\n        }), function() {\n            return O(r == null ? void 0 : r.return) && r.return();\n        };\n    });\n}\nfunction Sn(e, t) {\n    if (!e) throw new Error(\"Iterable cannot be null\");\n    return new k(function(n) {\n        re(n, t, function() {\n            var r = e[Symbol.asyncIterator]();\n            re(n, t, function() {\n                r.next().then(function(i) {\n                    i.done ? n.complete() : n.next(i.value);\n                });\n            }, 0, !0);\n        });\n    });\n}\nfunction li(e, t) {\n    return Sn(bn(e), t);\n}\nfunction fi(e, t) {\n    if (e != null) {\n        if (dn(e)) return si(e, t);\n        if (wt(e)) return ci(e, t);\n        if (fn(e)) return ai(e, t);\n        if (pn(e)) return Sn(e, t);\n        if (mn(e)) return ui(e, t);\n        if (gn(e)) return li(e, t);\n    }\n    throw hn(e);\n}\nfunction Ge(e, t) {\n    return t ? fi(e, t) : H(e);\n}\nfunction Dt() {\n    for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n    var n = yt(e);\n    return Ge(e, n);\n}\nfunction di(e) {\n    return e instanceof Date && !isNaN(e);\n}\nvar pi = vt(function(e) {\n    return function(n) {\n        n === void 0 && (n = null), e(this), this.message = \"Timeout has occurred\", this.name = \"TimeoutError\", this.info = n;\n    };\n});\nfunction hi(e, t) {\n    var n = di(e) ? {\n        first: e\n    } : typeof e == \"number\" ? {\n        each: e\n    } : e, r = n.first, i = n.each, o = n.with, s = o === void 0 ? vi : o, a = n.scheduler, c = a === void 0 ? Qr : a, u = n.meta, l = u === void 0 ? null : u;\n    if (r == null && i == null) throw new TypeError(\"No timeout provided.\");\n    return U(function(f, h) {\n        var d, m, p = null, b = 0, v = function(x) {\n            m = re(h, c, function() {\n                try {\n                    d.unsubscribe(), H(s({\n                        meta: l,\n                        lastValue: p,\n                        seen: b\n                    })).subscribe(h);\n                } catch (E) {\n                    h.error(E);\n                }\n            }, x);\n        };\n        d = f.subscribe(B(h, function(x) {\n            m == null || m.unsubscribe(), b++, h.next(p = x), i > 0 && v(i);\n        }, void 0, void 0, function() {\n            m != null && m.closed || m == null || m.unsubscribe(), p = null;\n        })), !b && v(r != null ? typeof r == \"number\" ? r : +r - c.now() : i);\n    });\n}\nfunction vi(e) {\n    throw new pi(e);\n}\nfunction A(e, t) {\n    return U(function(n, r) {\n        var i = 0;\n        n.subscribe(B(r, function(o) {\n            r.next(e.call(t, o, i++));\n        }));\n    });\n}\nvar mi = Array.isArray;\nfunction bi(e, t) {\n    return mi(t) ? e.apply(void 0, be([], ue(t))) : e(t);\n}\nfunction gi(e) {\n    return A(function(t) {\n        return bi(e, t);\n    });\n}\nfunction yi(e, t, n, r, i, o, s, a) {\n    var c = [], u = 0, l = 0, f = !1, h = function() {\n        f && !c.length && !u && t.complete();\n    }, d = function(p) {\n        return u < r ? m(p) : c.push(p);\n    }, m = function(p) {\n        u++;\n        var b = !1;\n        H(n(p, l++)).subscribe(B(t, function(v) {\n            t.next(v);\n        }, function() {\n            b = !0;\n        }, void 0, function() {\n            if (b) try {\n                u--;\n                for(var v = function() {\n                    var x = c.shift();\n                    s || m(x);\n                }; c.length && u < r;)v();\n                h();\n            } catch (x) {\n                t.error(x);\n            }\n        }));\n    };\n    return e.subscribe(B(t, d, function() {\n        f = !0, h();\n    })), function() {};\n}\nfunction xt(e, t, n) {\n    return n === void 0 && (n = 1 / 0), O(t) ? xt(function(r, i) {\n        return A(function(o, s) {\n            return t(r, o, i, s);\n        })(H(e(r, i)));\n    }, n) : (typeof t == \"number\" && (n = t), U(function(r, i) {\n        return yi(r, i, e, n);\n    }));\n}\nfunction wi(e) {\n    return xt(gt, e);\n}\nfunction xi() {\n    return wi(1);\n}\nfunction We() {\n    for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n    return xi()(Ge(e, yt(e)));\n}\nvar Si = [\n    \"addListener\",\n    \"removeListener\"\n], Ei = [\n    \"addEventListener\",\n    \"removeEventListener\"\n], Ti = [\n    \"on\",\n    \"off\"\n];\nfunction at(e, t, n, r) {\n    if (O(n) && (r = n, n = void 0), r) return at(e, t, n).pipe(gi(r));\n    var i = ue(Oi(e) ? Ei.map(function(a) {\n        return function(c) {\n            return e[a](t, c, n);\n        };\n    }) : Ci(e) ? Si.map($t(e, t)) : Pi(e) ? Ti.map($t(e, t)) : [], 2), o = i[0], s = i[1];\n    if (!o && wt(e)) return xt(function(a) {\n        return at(a, t, n);\n    })(H(e));\n    if (!o) throw new TypeError(\"Invalid event target\");\n    return new k(function(a) {\n        var c = function() {\n            for(var u = [], l = 0; l < arguments.length; l++)u[l] = arguments[l];\n            return a.next(1 < u.length ? u : u[0]);\n        };\n        return o(c), function() {\n            return s(c);\n        };\n    });\n}\nfunction $t(e, t) {\n    return function(n) {\n        return function(r) {\n            return e[n](t, r);\n        };\n    };\n}\nfunction Ci(e) {\n    return O(e.addListener) && O(e.removeListener);\n}\nfunction Pi(e) {\n    return O(e.on) && O(e.off);\n}\nfunction Oi(e) {\n    return O(e.addEventListener) && O(e.removeEventListener);\n}\nfunction Qe(e, t) {\n    return U(function(n, r) {\n        var i = 0;\n        n.subscribe(B(r, function(o) {\n            return e.call(t, o, i++) && r.next(o);\n        }));\n    });\n}\nfunction Ai(e, t, n, r, i) {\n    return function(o, s) {\n        var a = n, c = t, u = 0;\n        o.subscribe(B(s, function(l) {\n            var f = u++;\n            c = a ? e(c, l, f) : (a = !0, l), s.next(c);\n        }, i));\n    };\n}\nfunction ki(e, t) {\n    return t === void 0 && (t = gt), e = e ?? Li, U(function(n, r) {\n        var i, o = !0;\n        n.subscribe(B(r, function(s) {\n            var a = t(s);\n            (o || !e(i, a)) && (o = !1, i = a, r.next(s));\n        }));\n    });\n}\nfunction Li(e, t) {\n    return e === t;\n}\nfunction _i(e) {\n    return U(function(t, n) {\n        try {\n            t.subscribe(n);\n        } finally{\n            n.add(e);\n        }\n    });\n}\nfunction ct(e, t) {\n    return U(Ai(e, t, arguments.length >= 2, !0));\n}\nfunction Ii(e) {\n    e === void 0 && (e = {});\n    var t = e.connector, n = t === void 0 ? function() {\n        return new J();\n    } : t, r = e.resetOnError, i = r === void 0 ? !0 : r, o = e.resetOnComplete, s = o === void 0 ? !0 : o, a = e.resetOnRefCountZero, c = a === void 0 ? !0 : a;\n    return function(u) {\n        var l, f, h, d = 0, m = !1, p = !1, b = function() {\n            f == null || f.unsubscribe(), f = void 0;\n        }, v = function() {\n            b(), l = h = void 0, m = p = !1;\n        }, x = function() {\n            var E = l;\n            v(), E == null || E.unsubscribe();\n        };\n        return U(function(E, P) {\n            d++, !p && !m && b();\n            var g = h = h ?? n();\n            P.add(function() {\n                d--, d === 0 && !p && !m && (f = et(x, c));\n            }), g.subscribe(P), !l && d > 0 && (l = new Ce({\n                next: function(S) {\n                    return g.next(S);\n                },\n                error: function(S) {\n                    p = !0, b(), f = et(v, i, S), g.error(S);\n                },\n                complete: function() {\n                    m = !0, b(), f = et(v, s), g.complete();\n                }\n            }), H(E).subscribe(l));\n        })(u);\n    };\n}\nfunction et(e, t) {\n    for(var n = [], r = 2; r < arguments.length; r++)n[r - 2] = arguments[r];\n    if (t === !0) {\n        e();\n        return;\n    }\n    if (t !== !1) {\n        var i = new Ce({\n            next: function() {\n                i.unsubscribe(), e();\n            }\n        });\n        return H(t.apply(void 0, be([], ue(n)))).subscribe(i);\n    }\n}\nfunction Mi(e) {\n    return U(function(t, n) {\n        var r = !1, i = B(n, function() {\n            i == null || i.unsubscribe(), r = !0;\n        }, je);\n        H(e).subscribe(i), t.subscribe(B(n, function(o) {\n            return r && n.next(o);\n        }));\n    });\n}\nfunction D() {\n    for(var e = [], t = 0; t < arguments.length; t++)e[t] = arguments[t];\n    var n = yt(e);\n    return U(function(r, i) {\n        (n ? We(e, r, n) : We(e, r)).subscribe(i);\n    });\n}\nfunction En(e, t) {\n    return U(function(n, r) {\n        var i = null, o = 0, s = !1, a = function() {\n            return s && !i && r.complete();\n        };\n        n.subscribe(B(r, function(c) {\n            i == null || i.unsubscribe();\n            var u = 0, l = o++;\n            H(e(c, l)).subscribe(i = B(r, function(f) {\n                return r.next(t ? t(c, f, l, u++) : f);\n            }, function() {\n                i = null, a();\n            }));\n        }, function() {\n            s = !0, a();\n        }));\n    });\n}\nfunction Nt(e) {\n    return U(function(t, n) {\n        H(e).subscribe(B(n, function() {\n            return n.complete();\n        }, je)), !n.closed && t.subscribe(n);\n    });\n}\nvar Ri = Object.defineProperty, Di = Object.defineProperties, $i = Object.getOwnPropertyDescriptors, Ft = Object.getOwnPropertySymbols, Ni = Object.prototype.hasOwnProperty, Fi = Object.prototype.propertyIsEnumerable, Ut = (e, t, n)=>t in e ? Ri(e, t, {\n        enumerable: !0,\n        configurable: !0,\n        writable: !0,\n        value: n\n    }) : e[t] = n, Z = (e, t)=>{\n    for(var n in t || (t = {}))Ni.call(t, n) && Ut(e, n, t[n]);\n    if (Ft) for (var n of Ft(t))Fi.call(t, n) && Ut(e, n, t[n]);\n    return e;\n}, Ee = (e, t)=>Di(e, $i(t)), V = (e, t, n)=>new Promise((r, i)=>{\n        var o = (c)=>{\n            try {\n                a(n.next(c));\n            } catch (u) {\n                i(u);\n            }\n        }, s = (c)=>{\n            try {\n                a(n.throw(c));\n            } catch (u) {\n                i(u);\n            }\n        }, a = (c)=>c.done ? r(c.value) : Promise.resolve(c.value).then(o, s);\n        a((n = n.apply(e, t)).next());\n    }), Tn = \"lk\";\nfunction W(e) {\n    return typeof e > \"u\" ? !1 : Ui(e) || ji(e);\n}\nfunction Ui(e) {\n    var t;\n    return e ? e.hasOwnProperty(\"participant\") && e.hasOwnProperty(\"source\") && e.hasOwnProperty(\"track\") && typeof ((t = e.publication) == null ? void 0 : t.track) < \"u\" : !1;\n}\nfunction ji(e) {\n    return e ? e.hasOwnProperty(\"participant\") && e.hasOwnProperty(\"source\") && e.hasOwnProperty(\"publication\") && typeof e.publication < \"u\" : !1;\n}\nfunction Pe(e) {\n    return e ? e.hasOwnProperty(\"participant\") && e.hasOwnProperty(\"source\") && typeof e.publication > \"u\" : !1;\n}\nfunction N(e) {\n    if (typeof e == \"string\" || typeof e == \"number\") return `${e}`;\n    if (Pe(e)) return `${e.participant.identity}_${e.source}_placeholder`;\n    if (W(e)) return `${e.participant.identity}_${e.publication.source}_${e.publication.trackSid}`;\n    throw new Error(`Can't generate a id for the given track reference: ${e}`);\n}\nfunction $o(e, t) {\n    return e === void 0 || t === void 0 ? !1 : W(e) && W(t) ? e.publication.trackSid === t.publication.trackSid : N(e) === N(t);\n}\nfunction No(e, t) {\n    return typeof t > \"u\" ? !1 : W(e) ? t.some((n)=>n.participant.identity === e.participant.identity && W(n) && n.publication.trackSid === e.publication.trackSid) : Pe(e) ? t.some((n)=>n.participant.identity === e.participant.identity && Pe(n) && n.source === e.source) : !1;\n}\nfunction Wi(e, t) {\n    return Pe(e) && W(t) && t.participant.identity === e.participant.identity && t.source === e.source;\n}\nfunction Fo() {\n    const e = document.createElement(\"p\");\n    e.style.width = \"100%\", e.style.height = \"200px\";\n    const t = document.createElement(\"div\");\n    t.style.position = \"absolute\", t.style.top = \"0px\", t.style.left = \"0px\", t.style.visibility = \"hidden\", t.style.width = \"200px\", t.style.height = \"150px\", t.style.overflow = \"hidden\", t.appendChild(e), document.body.appendChild(t);\n    const n = e.offsetWidth;\n    t.style.overflow = \"scroll\";\n    let r = e.offsetWidth;\n    return n === r && (r = t.clientWidth), document.body.removeChild(t), n - r;\n}\nfunction Uo() {\n    return typeof document < \"u\";\n}\nfunction Bi(e) {\n    e = Z({}, e);\n    const t = \"(?:(?:[a-z]+:)?//)?\", n = \"(?:\\\\S+(?::\\\\S*)?@)?\", r = new RegExp(\"(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}\", \"g\").source, u = `(?:${t}|www\\\\.)${n}(?:localhost|${r}|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9][-_]*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[/?#][^\\\\s\"]*)?`;\n    return e.exact ? new RegExp(`(?:^${u}$)`, \"i\") : new RegExp(u, \"ig\");\n}\nvar jt = \"[^\\\\.\\\\s@:](?:[^\\\\s@:]*[^\\\\s@:\\\\.])?@[^\\\\.\\\\s@]+(?:\\\\.[^\\\\.\\\\s@]+)*\";\nfunction Vi({ exact: e } = {}) {\n    return e ? new RegExp(`^${jt}$`) : new RegExp(jt, \"g\");\n}\nfunction jo(e, t, n) {\n    return Sr(e, t, ()=>V(this, null, function*() {\n            const { x: i, y: o } = yield Pr(e, t, {\n                placement: \"top\",\n                middleware: [\n                    Er(6),\n                    Cr(),\n                    Tr({\n                        padding: 5\n                    })\n                ]\n            });\n            n == null || n(i, o);\n        }));\n}\nfunction Wo(e, t) {\n    return !e.contains(t.target);\n}\nvar Bo = ()=>({\n        email: Vi(),\n        url: Bi({})\n    });\nfunction Vo(e, t) {\n    const n = Object.entries(t).map(([o, s], a)=>Array.from(e.matchAll(s)).map(({ index: c, 0: u })=>({\n                type: o,\n                weight: a,\n                content: u,\n                index: c ?? 0\n            }))).flat().sort((o, s)=>{\n        const a = o.index - s.index;\n        return a !== 0 ? a : o.weight - s.weight;\n    }).filter(({ index: o }, s, a)=>{\n        if (s === 0) return !0;\n        const c = a[s - 1];\n        return c.index + c.content.length <= o;\n    }), r = [];\n    let i = 0;\n    for (const { type: o, content: s, index: a } of n)a > i && r.push(e.substring(i, a)), r.push({\n        type: o,\n        content: s\n    }), i = a + s.length;\n    return e.length > i && r.push(e.substring(i)), r;\n}\nvar Hi = [\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.RoomMetadataChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ActiveSpeakersChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionQualityChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantPermissionsChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantMetadataChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantNameChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantAttributesChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackMuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnmuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnpublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackStreamStateChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionFailed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionPermissionChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionStatusChanged\n], Cn = [\n    ...Hi,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackUnpublished\n], zi = [\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnpublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackMuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnmuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackStreamStateChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscribed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnsubscribed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionPermissionChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionFailed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackUnpublished\n], Yi = [\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ConnectionQualityChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.IsSpeakingChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantMetadataChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantPermissionsChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackMuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnmuted,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnpublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackStreamStateChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionFailed,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionPermissionChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionStatusChanged\n], Pn = [\n    ...Yi,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackPublished,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackUnpublished\n], _ = _r.getLogger(\"lk-components-js\");\n_.setDefaultLevel(\"WARN\");\nfunction Ho(e, t = {}) {\n    var n;\n    _.setLevel(e), (0,livekit_client__WEBPACK_IMPORTED_MODULE_0__.setLogLevel)((n = t.liveKitClientLogLevel) != null ? n : e);\n}\nfunction zo(e, t = {}) {\n    var n;\n    const r = _.methodFactory;\n    _.methodFactory = (i, o, s)=>{\n        const a = r(i, o, s), c = livekit_client__WEBPACK_IMPORTED_MODULE_0__.LogLevel[i], u = c >= o && c < livekit_client__WEBPACK_IMPORTED_MODULE_0__.LogLevel.silent;\n        return (l, f)=>{\n            f ? a(l, f) : a(l), u && e(c, l, f);\n        };\n    }, _.setLevel(_.getLevel()), (0,livekit_client__WEBPACK_IMPORTED_MODULE_0__.setLogExtension)((n = t.liveKitClientLogExtension) != null ? n : e);\n}\nvar Yo = [\n    {\n        columns: 1,\n        rows: 1\n    },\n    {\n        columns: 1,\n        rows: 2,\n        orientation: \"portrait\"\n    },\n    {\n        columns: 2,\n        rows: 1,\n        orientation: \"landscape\"\n    },\n    {\n        columns: 2,\n        rows: 2,\n        minWidth: 560\n    },\n    {\n        columns: 3,\n        rows: 3,\n        minWidth: 700\n    },\n    {\n        columns: 4,\n        rows: 4,\n        minWidth: 960\n    },\n    {\n        columns: 5,\n        rows: 5,\n        minWidth: 1100\n    }\n];\nfunction qi(e, t, n, r) {\n    if (e.length < 1) throw new Error(\"At least one grid layout definition must be provided.\");\n    const i = Ki(e);\n    if (n <= 0 || r <= 0) return i[0];\n    let o = 0;\n    const s = n / r > 1 ? \"landscape\" : \"portrait\";\n    let a = i.find((c, u, l)=>{\n        o = u;\n        const f = l.findIndex((h, d)=>{\n            const m = !h.orientation || h.orientation === s, p = d > u, b = h.maxTiles === c.maxTiles;\n            return p && b && m;\n        }) !== -1;\n        return c.maxTiles >= t && !f;\n    });\n    if (a === void 0) if (a = i[i.length - 1], a) _.warn(`No layout found for: participantCount: ${t}, width/height: ${n}/${r} fallback to biggest available layout (${a}).`);\n    else throw new Error(\"No layout or fallback layout found.\");\n    if ((n < a.minWidth || r < a.minHeight) && o > 0) {\n        const c = i[o - 1];\n        a = qi(i.slice(0, o), c.maxTiles, n, r);\n    }\n    return a;\n}\nfunction Ki(e) {\n    return [\n        ...e\n    ].map((t)=>{\n        var n, r;\n        return {\n            name: `${t.columns}x${t.rows}`,\n            columns: t.columns,\n            rows: t.rows,\n            maxTiles: t.columns * t.rows,\n            minWidth: (n = t.minWidth) != null ? n : 0,\n            minHeight: (r = t.minHeight) != null ? r : 0,\n            orientation: t.orientation\n        };\n    }).sort((t, n)=>t.maxTiles !== n.maxTiles ? t.maxTiles - n.maxTiles : t.minWidth !== 0 || n.minWidth !== 0 ? t.minWidth - n.minWidth : t.minHeight !== 0 || n.minHeight !== 0 ? t.minHeight - n.minHeight : 0);\n}\nfunction qo() {\n    return typeof navigator < \"u\" && navigator.mediaDevices && !!navigator.mediaDevices.getDisplayMedia;\n}\nfunction Ko(e, t) {\n    var n;\n    return Ee(Z({}, e), {\n        receivedAtMediaTimestamp: (n = t.rtpTimestamp) != null ? n : 0,\n        receivedAt: t.timestamp\n    });\n}\nfunction Go(e, t, n) {\n    return [\n        ...e,\n        ...t\n    ].reduceRight((r, i)=>(r.find((o)=>o.id === i.id) || r.unshift(i), r), []).slice(0 - n);\n}\nvar On = [], An = {\n    showChat: !1,\n    unreadMessages: 0,\n    showSettings: !1\n};\nfunction Gi(e) {\n    return typeof e == \"object\";\n}\nfunction Qo(e) {\n    return Array.isArray(e) && e.filter(Gi).length > 0;\n}\nfunction kn(e, t) {\n    return t.audioLevel - e.audioLevel;\n}\nfunction Ln(e, t) {\n    return e.isSpeaking === t.isSpeaking ? 0 : e.isSpeaking ? -1 : 1;\n}\nfunction _n(e, t) {\n    var n, r, i, o;\n    return e.lastSpokeAt !== void 0 || t.lastSpokeAt !== void 0 ? ((r = (n = t.lastSpokeAt) == null ? void 0 : n.getTime()) != null ? r : 0) - ((o = (i = e.lastSpokeAt) == null ? void 0 : i.getTime()) != null ? o : 0) : 0;\n}\nfunction Be(e, t) {\n    var n, r, i, o;\n    return ((r = (n = e.joinedAt) == null ? void 0 : n.getTime()) != null ? r : 0) - ((o = (i = t.joinedAt) == null ? void 0 : i.getTime()) != null ? o : 0);\n}\nfunction Qi(e, t) {\n    return W(e) ? W(t) ? 0 : -1 : W(t) ? 1 : 0;\n}\nfunction Ji(e, t) {\n    const n = e.participant.isCameraEnabled, r = t.participant.isCameraEnabled;\n    return n !== r ? n ? -1 : 1 : 0;\n}\nfunction Jo(e) {\n    const t = [], n = [], r = [], i = [];\n    e.forEach((a)=>{\n        a.participant.isLocal && a.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera ? t.push(a) : a.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare ? n.push(a) : a.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera ? r.push(a) : i.push(a);\n    });\n    const o = Xi(n), s = Zi(r);\n    return [\n        ...t,\n        ...o,\n        ...s,\n        ...i\n    ];\n}\nfunction Xi(e) {\n    const t = [], n = [];\n    return e.forEach((i)=>{\n        i.participant.isLocal ? t.push(i) : n.push(i);\n    }), t.sort((i, o)=>Be(i.participant, o.participant)), n.sort((i, o)=>Be(i.participant, o.participant)), [\n        ...n,\n        ...t\n    ];\n}\nfunction Zi(e) {\n    const t = [], n = [];\n    return e.forEach((r)=>{\n        r.participant.isLocal ? t.push(r) : n.push(r);\n    }), n.sort((r, i)=>r.participant.isSpeaking && i.participant.isSpeaking ? kn(r.participant, i.participant) : r.participant.isSpeaking !== i.participant.isSpeaking ? Ln(r.participant, i.participant) : r.participant.lastSpokeAt !== i.participant.lastSpokeAt ? _n(r.participant, i.participant) : W(r) !== W(i) ? Qi(r, i) : r.participant.isCameraEnabled !== i.participant.isCameraEnabled ? Ji(r, i) : Be(r.participant, i.participant)), [\n        ...t,\n        ...n\n    ];\n}\nfunction Xo(e) {\n    const t = [\n        ...e\n    ];\n    t.sort((r, i)=>{\n        if (r.isSpeaking && i.isSpeaking) return kn(r, i);\n        if (r.isSpeaking !== i.isSpeaking) return Ln(r, i);\n        if (r.lastSpokeAt !== i.lastSpokeAt) return _n(r, i);\n        const o = r.videoTrackPublications.size > 0, s = i.videoTrackPublications.size > 0;\n        return o !== s ? o ? -1 : 1 : Be(r, i);\n    });\n    const n = t.find((r)=>r.isLocal);\n    if (n) {\n        const r = t.indexOf(n);\n        r >= 0 && (t.splice(r, 1), t.length > 0 ? t.splice(0, 0, n) : t.push(n));\n    }\n    return t;\n}\nfunction eo(e, t) {\n    return e.reduce((n, r, i)=>i % t === 0 ? [\n            ...n,\n            [\n                r\n            ]\n        ] : [\n            ...n.slice(0, -1),\n            [\n                ...n.slice(-1)[0],\n                r\n            ]\n        ], []);\n}\nfunction Wt(e, t) {\n    const n = Math.max(e.length, t.length);\n    return new Array(n).fill([]).map((r, i)=>[\n            e[i],\n            t[i]\n        ]);\n}\nfunction Ve(e, t, n) {\n    return e.filter((r)=>!t.map((i)=>n(i)).includes(n(r)));\n}\nfunction ut(e) {\n    return e.map((t)=>typeof t == \"string\" || typeof t == \"number\" ? `${t}` : N(t));\n}\nfunction to(e, t) {\n    return {\n        dropped: Ve(e, t, N),\n        added: Ve(t, e, N)\n    };\n}\nfunction no(e) {\n    return e.added.length !== 0 || e.dropped.length !== 0;\n}\nfunction lt(e, t) {\n    const n = t.findIndex((r)=>N(r) === N(e));\n    if (n === -1) throw new Error(`Element not part of the array: ${N(e)} not in ${ut(t)}`);\n    return n;\n}\nfunction ro(e, t, n) {\n    const r = lt(e, n), i = lt(t, n);\n    return n.splice(r, 1, t), n.splice(i, 1, e), n;\n}\nfunction io(e, t) {\n    const n = lt(e, t);\n    return t.splice(n, 1), t;\n}\nfunction oo(e, t) {\n    return [\n        ...t,\n        e\n    ];\n}\nfunction tt(e, t) {\n    return eo(e, t);\n}\nfunction Zo(e, t, n) {\n    let r = so(e, t);\n    if (r.length < t.length) {\n        const s = Ve(t, r, N);\n        r = [\n            ...r,\n            ...s\n        ];\n    }\n    const i = tt(r, n), o = tt(t, n);\n    if (Wt(i, o).forEach(([s, a], c)=>{\n        if (s && a) {\n            const u = tt(r, n)[c], l = to(u, a);\n            no(l) && (_.debug(`Detected visual changes on page: ${c}, current: ${ut(s)}, next: ${ut(a)}`, {\n                changes: l\n            }), l.added.length === l.dropped.length && Wt(l.added, l.dropped).forEach(([f, h])=>{\n                if (f && h) r = ro(f, h, r);\n                else throw new Error(`For a swap action we need a addition and a removal one is missing: ${f}, ${h}`);\n            }), l.added.length === 0 && l.dropped.length > 0 && l.dropped.forEach((f)=>{\n                r = io(f, r);\n            }), l.added.length > 0 && l.dropped.length === 0 && l.added.forEach((f)=>{\n                r = oo(f, r);\n            }));\n        }\n    }), r.length > t.length) {\n        const s = Ve(r, t, N);\n        r = r.filter((a)=>!s.map(N).includes(N(a)));\n    }\n    return r;\n}\nfunction so(e, t) {\n    return e.map((n)=>{\n        const r = t.find((i)=>// If the IDs match or ..\n            N(n) === N(i) || // ... if the current item is a placeholder and the new item is the track reference can replace it.\n            typeof n != \"number\" && Pe(n) && W(i) && Wi(n, i));\n        return r ?? n;\n    });\n}\nfunction F(e) {\n    return `${Tn}-${e}`;\n}\nfunction es(e) {\n    const t = Bt(e), n = In(e.participant).pipe(A(()=>Bt(e)), D(t));\n    return {\n        className: F(e.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera || e.source === livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare ? \"participant-media-video\" : \"participant-media-audio\"),\n        trackObserver: n\n    };\n}\nfunction Bt(e) {\n    if (W(e)) return e.publication;\n    {\n        const { source: t, name: n, participant: r } = e;\n        if (t && n) return r.getTrackPublications().find((i)=>i.source === t && i.trackName === n);\n        if (n) return r.getTrackPublicationByName(n);\n        if (t) return r.getTrackPublication(t);\n        throw new Error(\"At least one of source and name needs to be defined\");\n    }\n}\nfunction le(e, ...t) {\n    return new k((r)=>{\n        const i = ()=>{\n            r.next(e);\n        };\n        return t.forEach((s)=>{\n            e.on(s, i);\n        }), ()=>{\n            t.forEach((s)=>{\n                e.off(s, i);\n            });\n        };\n    }).pipe(D(e));\n}\nfunction ye(e, t) {\n    return new k((r)=>{\n        const i = (...s)=>{\n            r.next(s);\n        };\n        return e.on(t, i), ()=>{\n            e.off(t, i);\n        };\n    });\n}\nfunction ts(e) {\n    return ye(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged).pipe(A(([t])=>t), D(e.state));\n}\nfunction ns(e) {\n    return le(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.RoomMetadataChanged, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged).pipe(A((n)=>({\n            name: n.name,\n            metadata: n.metadata\n        })));\n}\nfunction rs(e) {\n    return ye(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ActiveSpeakersChanged).pipe(A(([t])=>t));\n}\nfunction is(e, t, n = !0) {\n    var r;\n    const i = ()=>V(this, null, function*() {\n            try {\n                const a = yield livekit_client__WEBPACK_IMPORTED_MODULE_0__.Room.getLocalDevices(e, n);\n                o.next(a);\n            } catch (a) {\n                t == null || t(a);\n            }\n        }), o = new J(), s = o.pipe(_i(()=>{\n        var a;\n        (a = navigator == null ? void 0 : navigator.mediaDevices) == null || a.removeEventListener(\"devicechange\", i);\n    }));\n    if (false) {}\n    return We(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Room.getLocalDevices(e, n).catch((a)=>(t == null || t(a), [])), s);\n}\nfunction ao(e) {\n    return ye(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.DataReceived);\n}\nfunction co(e) {\n    return le(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.AudioPlaybackStatusChanged).pipe(A((n)=>({\n            canPlayAudio: n.canPlaybackAudio\n        })));\n}\nfunction uo(e) {\n    return le(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.VideoPlaybackStatusChanged).pipe(A((n)=>({\n            canPlayVideo: n.canPlaybackVideo\n        })));\n}\nfunction lo(e, t) {\n    return ye(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ActiveDeviceChanged).pipe(Qe(([n])=>n === t), A(([n, r])=>(_.debug(\"activeDeviceObservable | RoomEvent.ActiveDeviceChanged\", {\n            kind: n,\n            deviceId: r\n        }), r)));\n}\nfunction os(e, t) {\n    return ye(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantEncryptionStatusChanged).pipe(Qe(([, n])=>(t == null ? void 0 : t.identity) === (n == null ? void 0 : n.identity) || !n && (t == null ? void 0 : t.identity) === e.localParticipant.identity), A(([n])=>n), D(t != null && t.isLocal ? t.isE2EEEnabled : !!(t != null && t.isEncrypted)));\n}\nfunction ss(e) {\n    return ye(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.RecordingStatusChanged).pipe(A(([t])=>t), D(e.isRecording));\n}\nfunction we(e, ...t) {\n    return new k((r)=>{\n        const i = ()=>{\n            r.next(e);\n        };\n        return t.forEach((s)=>{\n            e.on(s, i);\n        }), ()=>{\n            t.forEach((s)=>{\n                e.off(s, i);\n            });\n        };\n    }).pipe(D(e));\n}\nfunction In(e) {\n    return we(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackMuted, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnmuted, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantPermissionsChanged, // ParticipantEvent.IsSpeakingChanged,\n    livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackPublished, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnpublished, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackPublished, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackUnpublished, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.MediaDevicesError, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscriptionStatusChanged).pipe(A((n)=>{\n        const { isMicrophoneEnabled: r, isCameraEnabled: i, isScreenShareEnabled: o } = n, s = n.getTrackPublication(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone), a = n.getTrackPublication(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera);\n        return {\n            isCameraEnabled: i,\n            isMicrophoneEnabled: r,\n            isScreenShareEnabled: o,\n            cameraTrack: a,\n            microphoneTrack: s,\n            participant: n\n        };\n    }));\n}\nfunction fo(e) {\n    return e ? we(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantMetadataChanged, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantNameChanged).pipe(A(({ name: n, identity: r, metadata: i })=>({\n            name: n,\n            identity: r,\n            metadata: i\n        })), D({\n        name: e.name,\n        identity: e.identity,\n        metadata: e.metadata\n    })) : void 0;\n}\nfunction po(e) {\n    return Je(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ConnectionQualityChanged).pipe(A(([n])=>n), D(e.connectionQuality));\n}\nfunction Je(e, t) {\n    return new k((r)=>{\n        const i = (...s)=>{\n            r.next(s);\n        };\n        return e.on(t, i), ()=>{\n            e.off(t, i);\n        };\n    });\n}\nfunction ho(e) {\n    var t, n, r, i;\n    return we(e.participant, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackMuted, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnmuted, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackSubscribed, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.TrackUnsubscribed, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackPublished, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.LocalTrackUnpublished).pipe(A((o)=>{\n        var s, a;\n        const c = (s = e.publication) != null ? s : o.getTrackPublication(e.source);\n        return (a = c == null ? void 0 : c.isMuted) != null ? a : !0;\n    }), D((i = (r = (t = e.publication) == null ? void 0 : t.isMuted) != null ? r : (n = e.participant.getTrackPublication(e.source)) == null ? void 0 : n.isMuted) != null ? i : !0));\n}\nfunction as(e) {\n    return Je(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.IsSpeakingChanged).pipe(A(([t])=>t));\n}\nfunction cs(e, t = {}) {\n    var n;\n    let r;\n    const i = new k((c)=>(r = c, ()=>a.unsubscribe())).pipe(D(Array.from(e.remoteParticipants.values()))), o = (n = t.additionalRoomEvents) != null ? n : Cn, s = Array.from(/* @__PURE__ */ new Set([\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged,\n        ...o\n    ])), a = le(e, ...s).subscribe((c)=>r == null ? void 0 : r.next(Array.from(c.remoteParticipants.values())));\n    return e.remoteParticipants.size > 0 && (r == null || r.next(Array.from(e.remoteParticipants.values()))), i;\n}\nfunction us(e, t, n = {}) {\n    var r;\n    const i = (r = n.additionalEvents) != null ? r : Pn;\n    return le(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged).pipe(En((s)=>{\n        const a = s.getParticipantByIdentity(t);\n        return a ? we(a, ...i) : new k((c)=>c.next(void 0));\n    }), D(e.getParticipantByIdentity(t)));\n}\nfunction ls(e) {\n    return Je(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.ParticipantPermissionsChanged).pipe(A(()=>e.permissions), D(e.permissions));\n}\nfunction fs(e, { kind: t, identity: n }, r = {}) {\n    var i;\n    const o = (i = r.additionalEvents) != null ? i : Pn, s = (c)=>{\n        let u = !0;\n        return t && (u = u && c.kind === t), n && (u = u && c.identity === n), u;\n    };\n    return le(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected, livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged).pipe(En((c)=>{\n        const u = Array.from(c.remoteParticipants.values()).find((l)=>s(l));\n        return u ? we(u, ...o) : new k((l)=>l.next(void 0));\n    }), D(Array.from(e.remoteParticipants.values()).find((c)=>s(c))));\n}\nfunction ds(e) {\n    return typeof e > \"u\" ? new k() : Je(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.ParticipantEvent.AttributesChanged).pipe(A(([t])=>({\n            changed: t,\n            attributes: e.attributes\n        })), D({\n        changed: e.attributes,\n        attributes: e.attributes\n    }));\n}\nfunction ps(e, t, n, r, i) {\n    const { localParticipant: o } = t, s = (f, h)=>{\n        let d = !1;\n        switch(f){\n            case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera:\n                d = h.isCameraEnabled;\n                break;\n            case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone:\n                d = h.isMicrophoneEnabled;\n                break;\n            case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare:\n                d = h.isScreenShareEnabled;\n                break;\n        }\n        return d;\n    }, a = In(o).pipe(A((f)=>s(e, f.participant)), D(s(e, o))), c = new J(), u = (f, h)=>V(this, null, function*() {\n            try {\n                switch(h ?? (h = n), c.next(!0), e){\n                    case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera:\n                        return yield o.setCameraEnabled(f ?? !o.isCameraEnabled, h, r), o.isCameraEnabled;\n                    case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone:\n                        return yield o.setMicrophoneEnabled(f ?? !o.isMicrophoneEnabled, h, r), o.isMicrophoneEnabled;\n                    case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.ScreenShare:\n                        return yield o.setScreenShareEnabled(f ?? !o.isScreenShareEnabled, h, r), o.isScreenShareEnabled;\n                    default:\n                        throw new TypeError(\"Tried to toggle unsupported source\");\n                }\n            } catch (d) {\n                if (i && d instanceof Error) {\n                    i == null || i(d);\n                    return;\n                } else throw d;\n            } finally{\n                c.next(!1);\n            }\n        });\n    return {\n        className: F(\"button\"),\n        toggle: u,\n        enabledObserver: a,\n        pendingObserver: c.asObservable()\n    };\n}\nfunction hs() {\n    let e = !1;\n    const t = new J(), n = new J(), r = (o)=>V(this, null, function*() {\n            n.next(!0), e = o ?? !e, t.next(e), n.next(!1);\n        });\n    return {\n        className: F(\"button\"),\n        toggle: r,\n        enabledObserver: t.asObservable(),\n        pendingObserver: n.asObservable()\n    };\n}\nfunction vs(e, t, n) {\n    const r = new ln(void 0), i = lo(t, e), o = (a, ...c)=>V(this, [\n            a,\n            ...c\n        ], function*(u, l = {}) {\n            var f, h, d;\n            if (t) {\n                _.debug(`Switching active device of kind \"${e}\" with id ${u}.`), yield t.switchActiveDevice(e, u, l.exact);\n                const m = (f = t.getActiveDevice(e)) != null ? f : u;\n                m !== u && u !== \"default\" && _.info(`We tried to select the device with id (${u}), but the browser decided to select the device with id (${m}) instead.`);\n                let p;\n                e === \"audioinput\" ? p = (h = t.localParticipant.getTrackPublication(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone)) == null ? void 0 : h.track : e === \"videoinput\" && (p = (d = t.localParticipant.getTrackPublication(livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera)) == null ? void 0 : d.track);\n                const b = u === \"default\" && !p || u === \"default\" && (p == null ? void 0 : p.mediaStreamTrack.label.startsWith(\"Default\"));\n                r.next(b ? u : m);\n            }\n        });\n    return {\n        className: F(\"media-device-select\"),\n        activeDeviceObservable: i,\n        setActiveMediaDevice: o\n    };\n}\nfunction ms(e) {\n    const t = (r)=>{\n        e.disconnect(r);\n    };\n    return {\n        className: F(\"disconnect-button\"),\n        disconnect: t\n    };\n}\nfunction bs(e) {\n    const t = F(\"connection-quality\"), n = po(e);\n    return {\n        className: t,\n        connectionQualityObserver: n\n    };\n}\nfunction gs(e) {\n    let t = \"track-muted-indicator-camera\";\n    switch(e.source){\n        case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Camera:\n            t = \"track-muted-indicator-camera\";\n            break;\n        case livekit_client__WEBPACK_IMPORTED_MODULE_0__.Track.Source.Microphone:\n            t = \"track-muted-indicator-microphone\";\n            break;\n    }\n    const n = F(t), r = ho(e);\n    return {\n        className: n,\n        mediaMutedObserver: r\n    };\n}\nfunction ys(e) {\n    return {\n        className: \"lk-participant-name\",\n        infoObserver: fo(e)\n    };\n}\nfunction ws() {\n    return {\n        className: F(\"participant-tile\")\n    };\n}\nvar vo = {\n    CHAT: \"lk.chat\"\n}, mo = {\n    CHAT: \"lk-chat-topic\"\n};\nfunction Mn(e, t) {\n    return V(this, arguments, function*(n, r, i = {}) {\n        const { reliable: o, destinationIdentities: s, topic: a } = i;\n        yield n.publishData(r, {\n            destinationIdentities: s,\n            topic: a,\n            reliable: o\n        });\n    });\n}\nfunction bo(e, t, n) {\n    const r = Array.isArray(t) ? t : [\n        t\n    ], i = ao(e).pipe(Qe(([, , , c])=>t === void 0 || c !== void 0 && r.includes(c)), A(([c, u, , l])=>{\n        const f = {\n            payload: c,\n            topic: l,\n            from: u\n        };\n        return n == null || n(f), f;\n    }));\n    let o;\n    const s = new k((c)=>{\n        o = c;\n    });\n    return {\n        messageObservable: i,\n        isSendingObservable: s,\n        send: (c, ...u)=>V(this, [\n                c,\n                ...u\n            ], function*(l, f = {}) {\n                o.next(!0);\n                try {\n                    yield Mn(e.localParticipant, l, Z({\n                        topic: r[0]\n                    }, f));\n                } finally{\n                    o.next(!1);\n                }\n            })\n    };\n}\nvar Ie = /* @__PURE__ */ new WeakMap();\nfunction go(e) {\n    return e.ignoreLegacy == !0;\n}\nvar yo = (e)=>JSON.parse(new TextDecoder().decode(e)), wo = (e)=>new TextEncoder().encode(JSON.stringify(e));\nfunction xs(e, t) {\n    var n, r, i, o, s, a;\n    const c = ()=>{\n        var g, S, C;\n        return ((g = e.serverInfo) == null ? void 0 : g.edition) === 1 || !!((S = e.serverInfo) != null && S.version) && (0,livekit_client__WEBPACK_IMPORTED_MODULE_0__.compareVersions)((C = e.serverInfo) == null ? void 0 : C.version, \"1.8.2\") > 0;\n    }, u = new J(), l = (n = t == null ? void 0 : t.channelTopic) != null ? n : vo.CHAT, f = (r = t == null ? void 0 : t.channelTopic) != null ? r : mo.CHAT;\n    let h = !1;\n    Ie.has(e) || (h = !0);\n    const d = (i = Ie.get(e)) != null ? i : /* @__PURE__ */ new Map(), m = (o = d.get(l)) != null ? o : new J();\n    d.set(l, m), Ie.set(e, d);\n    const p = (s = t == null ? void 0 : t.messageDecoder) != null ? s : yo;\n    if (h) {\n        e.registerTextStreamHandler(l, (S, C)=>V(this, null, function*() {\n                const { id: $, timestamp: I } = S.info;\n                Ge(S).pipe(ct((T, L)=>T + L), A((T)=>({\n                        id: $,\n                        timestamp: I,\n                        message: T,\n                        from: e.getParticipantByIdentity(C.identity)\n                    }))).subscribe({\n                    next: (T)=>m.next(T)\n                });\n            }));\n        const { messageObservable: g } = bo(e, [\n            f\n        ]);\n        g.pipe(A((S)=>{\n            const C = p(S.payload);\n            return go(C) ? void 0 : Ee(Z({}, C), {\n                from: S.from\n            });\n        }), Qe((S)=>!!S), Nt(u)).subscribe(m);\n    }\n    const b = m.pipe(ct((g, S)=>{\n        if (\"id\" in S && g.find((C)=>{\n            var $, I;\n            return (($ = C.from) == null ? void 0 : $.identity) === ((I = S.from) == null ? void 0 : I.identity) && C.id === S.id;\n        })) {\n            const C = g.findIndex(($)=>$.id === S.id);\n            if (C > -1) {\n                const $ = g[C];\n                g[C] = Ee(Z({}, S), {\n                    timestamp: $.timestamp,\n                    editTimestamp: S.timestamp\n                });\n            }\n            return [\n                ...g\n            ];\n        }\n        return [\n            ...g,\n            S\n        ];\n    }, []), Nt(u)), v = new ln(!1), x = (a = t == null ? void 0 : t.messageEncoder) != null ? a : wo, E = (g, S)=>V(this, null, function*() {\n            var C;\n            S || (S = {}), (C = S.topic) != null || (S.topic = l), v.next(!0);\n            try {\n                const I = {\n                    id: (yield e.localParticipant.sendText(g, S)).id,\n                    timestamp: Date.now(),\n                    message: g,\n                    from: e.localParticipant,\n                    attachedFiles: S.attachments\n                };\n                m.next(I);\n                const z = x(Ee(Z({}, I), {\n                    ignoreLegacy: c()\n                }));\n                return yield Mn(e.localParticipant, z, {\n                    reliable: !0,\n                    topic: f\n                }), I;\n            } finally{\n                v.next(!1);\n            }\n        });\n    function P() {\n        u.next(), u.complete(), m.complete(), Ie.delete(e), e.unregisterTextStreamHandler(l);\n    }\n    return e.once(livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.Disconnected, P), {\n        messageObservable: b,\n        isSendingObservable: v,\n        send: E\n    };\n}\nfunction Ss() {\n    const e = (n)=>V(this, null, function*() {\n            _.info(\"Start Audio for room: \", n), yield n.startAudio();\n        });\n    return {\n        className: F(\"start-audio-button\"),\n        roomAudioPlaybackAllowedObservable: co,\n        handleStartAudioPlayback: e\n    };\n}\nfunction Es() {\n    const e = (n)=>V(this, null, function*() {\n            _.info(\"Start Video for room: \", n), yield n.startVideo();\n        });\n    return {\n        className: F(\"start-audio-button\"),\n        roomVideoPlaybackAllowedObservable: uo,\n        handleStartVideoPlayback: e\n    };\n}\nfunction Ts() {\n    return {\n        className: [\n            F(\"button\"),\n            F(\"chat-toggle\")\n        ].join(\" \")\n    };\n}\nfunction Cs() {\n    return {\n        className: [\n            F(\"button\"),\n            F(\"focus-toggle-button\")\n        ].join(\" \")\n    };\n}\nfunction Ps() {\n    return {\n        className: \"lk-clear-pin-button lk-button\"\n    };\n}\nfunction Os() {\n    return {\n        className: \"lk-room-container\"\n    };\n}\nfunction Vt(e, t, n = !0) {\n    const i = [\n        e.localParticipant,\n        ...Array.from(e.remoteParticipants.values())\n    ], o = [];\n    return i.forEach((s)=>{\n        t.forEach((a)=>{\n            const c = Array.from(s.trackPublications.values()).filter((u)=>u.source === a && // either return all or only the ones that are subscribed\n                (!n || u.track)).map((u)=>({\n                    participant: s,\n                    publication: u,\n                    source: u.source\n                }));\n            o.push(...c);\n        });\n    }), {\n        trackReferences: o,\n        participants: i\n    };\n}\nfunction Ht(e, t, n = !1) {\n    const { sources: r, kind: i, name: o } = t;\n    return Array.from(e.trackPublications.values()).filter((a)=>(!r || r.includes(a.source)) && (!i || a.kind === i) && (!o || a.trackName === o) && // either return all or only the ones that are subscribed\n        (!n || a.track)).map((a)=>({\n            participant: e,\n            publication: a,\n            source: a.source\n        }));\n}\nfunction As(e, t, n) {\n    var r, i;\n    const o = (r = n.additionalRoomEvents) != null ? r : Cn, s = (i = n.onlySubscribed) != null ? i : !0, a = Array.from(/* @__PURE__ */ new Set([\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantConnected,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ParticipantDisconnected,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.ConnectionStateChanged,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackPublished,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.LocalTrackUnpublished,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackPublished,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackUnpublished,\n        livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.TrackSubscriptionStatusChanged,\n        ...o\n    ]).values());\n    return le(e, ...a).pipe(A((u)=>{\n        const l = Vt(u, t, s);\n        return _.debug(`TrackReference[] was updated. (length ${l.trackReferences.length})`, l), l;\n    }), D(Vt(e, t, s)));\n}\nfunction ks(e, t) {\n    return we(e, ...zi).pipe(A((r)=>{\n        const i = Ht(r, t);\n        return _.debug(`TrackReference[] was updated. (length ${i.length})`, i), i;\n    }), D(Ht(e, t)));\n}\nfunction Rn(e, t) {\n    return new k((r)=>{\n        const i = (...s)=>{\n            r.next(s);\n        };\n        return e.on(t, i), ()=>{\n            e.off(t, i);\n        };\n    });\n}\nfunction Ls(e) {\n    return Rn(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.TrackEvent.TranscriptionReceived);\n}\nfunction _s(e) {\n    return Rn(e, livekit_client__WEBPACK_IMPORTED_MODULE_0__.TrackEvent.TimeSyncUpdate).pipe(A(([t])=>t));\n}\nfunction Is(e, t = 1e3) {\n    if (e === null) return Dt(!1);\n    const n = at(e, \"mousemove\", {\n        passive: !0\n    }).pipe(A(()=>!0)), r = n.pipe(hi({\n        each: t,\n        with: ()=>We(Dt(!1), r.pipe(Mi(n)))\n    }), ki());\n    return r;\n}\nfunction xo(e, t) {\n    if (typeof localStorage > \"u\") {\n        _.error(\"Local storage is not available.\");\n        return;\n    }\n    try {\n        if (t) {\n            const n = Object.fromEntries(Object.entries(t).filter(([, r])=>r !== \"\"));\n            localStorage.setItem(e, JSON.stringify(n));\n        }\n    } catch (n) {\n        _.error(`Error setting item to local storage: ${n}`);\n    }\n}\nfunction So(e) {\n    if (typeof localStorage > \"u\") {\n        _.error(\"Local storage is not available.\");\n        return;\n    }\n    try {\n        const t = localStorage.getItem(e);\n        if (!t) {\n            _.warn(`Item with key ${e} does not exist in local storage.`);\n            return;\n        }\n        return JSON.parse(t);\n    } catch (t) {\n        _.error(`Error getting item from local storage: ${t}`);\n        return;\n    }\n}\nfunction Eo(e) {\n    return {\n        load: ()=>So(e),\n        save: (t)=>xo(e, t)\n    };\n}\nvar To = `${Tn}-user-choices`, Se = {\n    videoEnabled: !0,\n    audioEnabled: !0,\n    videoDeviceId: \"default\",\n    audioDeviceId: \"default\",\n    username: \"\"\n}, { load: Co, save: Po } = Eo(To);\nfunction Ms(e, t = !1) {\n    t !== !0 && Po(e);\n}\nfunction Rs(e, t = !1) {\n    var n, r, i, o, s;\n    const a = {\n        videoEnabled: (n = e == null ? void 0 : e.videoEnabled) != null ? n : Se.videoEnabled,\n        audioEnabled: (r = e == null ? void 0 : e.audioEnabled) != null ? r : Se.audioEnabled,\n        videoDeviceId: (i = e == null ? void 0 : e.videoDeviceId) != null ? i : Se.videoDeviceId,\n        audioDeviceId: (o = e == null ? void 0 : e.audioDeviceId) != null ? o : Se.audioDeviceId,\n        username: (s = e == null ? void 0 : e.username) != null ? s : Se.username\n    };\n    if (t) return a;\n    {\n        const c = Co();\n        return Z(Z({}, a), c ?? {});\n    }\n}\nvar nt = null, rt = null, Oo = 0;\nfunction zt() {\n    return nt || (nt = /* @__PURE__ */ new Map()), nt;\n}\nfunction Ao() {\n    return rt || (rt = /* @__PURE__ */ new WeakMap()), rt;\n}\nfunction ko(e, t) {\n    const n = Ao();\n    let r = n.get(e);\n    return r || (r = `room_${Oo++}`, n.set(e, r)), `${r}:${t}`;\n}\nfunction Ds(e, t) {\n    const n = ko(e, t), r = zt(), i = r.get(n);\n    if (i) return i;\n    const o = new J(), s = [];\n    e.registerTextStreamHandler(t, (c, u)=>V(this, null, function*() {\n            Ge(c).pipe(ct((f, h)=>f + h, \"\")).subscribe((f)=>{\n                const h = s.findIndex((d)=>d.streamInfo.id === c.info.id);\n                h !== -1 ? (s[h] = Ee(Z({}, s[h]), {\n                    text: f\n                }), o.next([\n                    ...s\n                ])) : (s.push({\n                    text: f,\n                    participantInfo: u,\n                    streamInfo: c.info\n                }), o.next([\n                    ...s\n                ]));\n            });\n        }));\n    const a = o.asObservable().pipe(Ii());\n    return r.set(n, a), e.once(livekit_client__WEBPACK_IMPORTED_MODULE_0__.RoomEvent.Disconnected, ()=>{\n        o.complete(), zt().delete(n);\n    }), a;\n}\nfunction Dn(e, t) {\n    if (t.msg === \"show_chat\") return {\n        ...e,\n        showChat: !0,\n        unreadMessages: 0\n    };\n    if (t.msg === \"hide_chat\") return {\n        ...e,\n        showChat: !1\n    };\n    if (t.msg === \"toggle_chat\") {\n        const n = {\n            ...e,\n            showChat: !e.showChat\n        };\n        return n.showChat === !0 && (n.unreadMessages = 0), n;\n    } else return t.msg === \"unread_msg\" ? {\n        ...e,\n        unreadMessages: t.count\n    } : t.msg === \"toggle_settings\" ? {\n        ...e,\n        showSettings: !e.showSettings\n    } : {\n        ...e\n    };\n}\nfunction $n(e, t) {\n    return t.msg === \"set_pin\" ? [\n        t.trackReference\n    ] : t.msg === \"clear_pin\" ? [] : {\n        ...e\n    };\n}\nconst Nn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nfunction $s() {\n    const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Nn);\n    if (!e) throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n    return e;\n}\nfunction Ns(e) {\n    const t = Lo();\n    if (e ?? (e = t), !e) throw Error(\"Tried to access LayoutContext context outside a LayoutContextProvider provider.\");\n    return e;\n}\nfunction Fs() {\n    const [e, t] = react__WEBPACK_IMPORTED_MODULE_1__.useReducer($n, On), [n, r] = react__WEBPACK_IMPORTED_MODULE_1__.useReducer(Dn, An);\n    return {\n        pin: {\n            dispatch: t,\n            state: e\n        },\n        widget: {\n            dispatch: r,\n            state: n\n        }\n    };\n}\nfunction Us(e) {\n    const [t, n] = react__WEBPACK_IMPORTED_MODULE_1__.useReducer($n, On), [r, i] = react__WEBPACK_IMPORTED_MODULE_1__.useReducer(Dn, An);\n    return e ?? {\n        pin: {\n            dispatch: n,\n            state: t\n        },\n        widget: {\n            dispatch: i,\n            state: r\n        }\n    };\n}\nfunction Lo() {\n    return react__WEBPACK_IMPORTED_MODULE_1__.useContext(Nn);\n}\nconst Fn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nfunction js() {\n    const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Fn);\n    if (!e) throw Error(\"tried to access track context outside of track context provider\");\n    return e;\n}\nfunction Un() {\n    return react__WEBPACK_IMPORTED_MODULE_1__.useContext(Fn);\n}\nfunction Ws(e) {\n    const t = Un(), n = e ?? t;\n    if (!n) throw new Error(\"No TrackRef, make sure you are inside a TrackRefContext or pass the TrackRef explicitly\");\n    return n;\n}\nconst jn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nfunction Bs() {\n    const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(jn);\n    if (!e) throw Error(\"tried to access participant context outside of participant context provider\");\n    return e;\n}\nfunction _o() {\n    return react__WEBPACK_IMPORTED_MODULE_1__.useContext(jn);\n}\nfunction Vs(e) {\n    const t = _o(), n = Un(), r = e ?? t ?? (n == null ? void 0 : n.participant);\n    if (!r) throw new Error(\"No participant provided, make sure you are inside a participant context or pass the participant explicitly\");\n    return r;\n}\nconst Wn = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nfunction Hs() {\n    const e = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Wn);\n    if (!e) throw Error(\"tried to access room context outside of livekit room component\");\n    return e;\n}\nfunction Io() {\n    return react__WEBPACK_IMPORTED_MODULE_1__.useContext(Wn);\n}\nfunction zs(e) {\n    const t = Io(), n = e ?? t;\n    if (!n) throw new Error(\"No room provided, make sure you are inside a Room context or pass the room explicitly\");\n    return n;\n}\nconst Mo = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);\nfunction Ys(e) {\n    const t = react__WEBPACK_IMPORTED_MODULE_1__.useContext(Mo);\n    if (e === !0) {\n        if (t) return t;\n        throw Error(\"tried to access feature context, but none is present\");\n    }\n    return t;\n}\n //# sourceMappingURL=contexts-CPsnPrz2.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-react/dist/contexts-CPsnPrz2.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@livekit/components-react/dist/hooks-CWooKGw2.mjs":
/*!************************************************************************!*\
  !*** ./node_modules/@livekit/components-react/dist/hooks-CWooKGw2.mjs ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   A: () => (/* binding */ Tt),\n/* harmony export */   B: () => (/* binding */ Rt),\n/* harmony export */   C: () => (/* binding */ Ke),\n/* harmony export */   D: () => (/* binding */ vt),\n/* harmony export */   E: () => (/* binding */ yt),\n/* harmony export */   F: () => (/* binding */ Ye),\n/* harmony export */   G: () => (/* binding */ U),\n/* harmony export */   H: () => (/* binding */ Ze),\n/* harmony export */   I: () => (/* binding */ Ot),\n/* harmony export */   J: () => (/* binding */ It),\n/* harmony export */   K: () => (/* binding */ Lt),\n/* harmony export */   L: () => (/* binding */ Nt),\n/* harmony export */   M: () => (/* binding */ H),\n/* harmony export */   N: () => (/* binding */ Vt),\n/* harmony export */   O: () => (/* binding */ tt),\n/* harmony export */   P: () => (/* binding */ _t),\n/* harmony export */   Q: () => (/* binding */ Gt),\n/* harmony export */   R: () => (/* binding */ jt),\n/* harmony export */   S: () => (/* binding */ Yt),\n/* harmony export */   T: () => (/* binding */ _),\n/* harmony export */   U: () => (/* binding */ ft),\n/* harmony export */   V: () => (/* binding */ Kt),\n/* harmony export */   W: () => (/* binding */ pt),\n/* harmony export */   X: () => (/* binding */ Zt),\n/* harmony export */   Y: () => (/* binding */ en),\n/* harmony export */   Z: () => (/* binding */ tn),\n/* harmony export */   a: () => (/* binding */ O),\n/* harmony export */   b: () => (/* binding */ qt),\n/* harmony export */   c: () => (/* binding */ Pt),\n/* harmony export */   d: () => (/* binding */ kt),\n/* harmony export */   e: () => (/* binding */ wt),\n/* harmony export */   f: () => (/* binding */ Bt),\n/* harmony export */   g: () => (/* binding */ zt),\n/* harmony export */   h: () => (/* binding */ xt),\n/* harmony export */   i: () => (/* binding */ Mt),\n/* harmony export */   j: () => (/* binding */ b),\n/* harmony export */   k: () => (/* binding */ Jt),\n/* harmony export */   l: () => (/* binding */ Dt),\n/* harmony export */   m: () => (/* binding */ Ht),\n/* harmony export */   n: () => (/* binding */ Et),\n/* harmony export */   o: () => (/* binding */ Ct),\n/* harmony export */   p: () => (/* binding */ Ut),\n/* harmony export */   q: () => (/* binding */ Xe),\n/* harmony export */   r: () => (/* binding */ et),\n/* harmony export */   s: () => (/* binding */ Xt),\n/* harmony export */   t: () => (/* binding */ Wt),\n/* harmony export */   u: () => (/* binding */ ht),\n/* harmony export */   v: () => (/* binding */ Ft),\n/* harmony export */   w: () => (/* binding */ Qt),\n/* harmony export */   x: () => (/* binding */ $t),\n/* harmony export */   y: () => (/* binding */ At),\n/* harmony export */   z: () => (/* binding */ gt)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contexts-CPsnPrz2.mjs */ \"(ssr)/./node_modules/@livekit/components-react/dist/contexts-CPsnPrz2.mjs\");\n/* harmony import */ var _room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./room-BgiuQa2X.mjs */ \"(ssr)/./node_modules/@livekit/components-react/dist/room-BgiuQa2X.mjs\");\n/* harmony import */ var livekit_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! livekit-client */ \"(ssr)/./node_modules/livekit-client/dist/livekit-client.esm.mjs\");\n\n\n\n\nconst Qe = (e)=>{\n    const t = react__WEBPACK_IMPORTED_MODULE_0__.useRef(e);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        t.current = e;\n    }), t;\n};\nfunction $e(e, t) {\n    const n = je(), a = Qe(t);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        let s = !1;\n        const c = e.current;\n        if (!c) return;\n        function o(u, i) {\n            s || a.current(u, i);\n        }\n        return n == null || n.subscribe(c, o), ()=>{\n            s = !0, n == null || n.unsubscribe(c, o);\n        };\n    }, [\n        e.current,\n        n,\n        a\n    ]), n == null ? void 0 : n.observer;\n}\nfunction He() {\n    let e = !1, t = [];\n    const n = /* @__PURE__ */ new Map();\n    if (true) return;\n    const a = new ResizeObserver((s, c)=>{\n        t = t.concat(s), e || window.requestAnimationFrame(()=>{\n            const o = /* @__PURE__ */ new Set();\n            for(let u = 0; u < t.length; u++){\n                if (o.has(t[u].target)) continue;\n                o.add(t[u].target);\n                const i = n.get(t[u].target);\n                i == null || i.forEach((d)=>d(t[u], c));\n            }\n            t = [], e = !1;\n        }), e = !0;\n    });\n    return {\n        observer: a,\n        subscribe (s, c) {\n            a.observe(s);\n            const o = n.get(s) ?? [];\n            o.push(c), n.set(s, o);\n        },\n        unsubscribe (s, c) {\n            const o = n.get(s) ?? [];\n            if (o.length === 1) {\n                a.unobserve(s), n.delete(s);\n                return;\n            }\n            const u = o.indexOf(c);\n            u !== -1 && o.splice(u, 1), n.set(s, o);\n        }\n    };\n}\nlet D;\nconst je = ()=>D || (D = He()), Xe = (e)=>{\n    const [t, n] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        width: 0,\n        height: 0\n    });\n    react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect(()=>{\n        if (e.current) {\n            const { width: s, height: c } = e.current.getBoundingClientRect();\n            n({\n                width: s,\n                height: c\n            });\n        }\n    }, [\n        e.current\n    ]);\n    const a = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((s)=>n(s.contentRect), []);\n    return $e(e, a), t;\n};\nfunction b(e, t, n = !0) {\n    const [a, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState(t);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (n && s(t),  true || 0) return;\n        const c = e.subscribe(s);\n        return ()=>c.unsubscribe();\n    }, [\n        e,\n        n\n    ]), a;\n}\nfunction gt(e) {\n    const t = (c)=> false ? 0 : !1, [n, a] = react__WEBPACK_IMPORTED_MODULE_0__.useState(t(e));\n    function s() {\n        a(t(e));\n    }\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const c = window.matchMedia(e);\n        return s(), c.addListener ? c.addListener(s) : c.addEventListener(\"change\", s), ()=>{\n            c.removeListener ? c.removeListener(s) : c.removeEventListener(\"change\", s);\n        };\n    }, [\n        e\n    ]), n;\n}\nfunction vt(e) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e), n = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(async ()=>{\n        await t.startAudio();\n    }, [\n        t\n    ]), a = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.r)(t), [\n        t\n    ]), { canPlayAudio: s } = b(a, {\n        canPlayAudio: t.canPlaybackAudio\n    });\n    return {\n        canPlayAudio: s,\n        startAudio: n\n    };\n}\nfunction ht(e) {\n    const { state: t, dispatch: n } = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a)().pin;\n    return {\n        buttonProps: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n            const { className: s } = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.b)();\n            return (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(e, {\n                className: s,\n                disabled: !(t != null && t.length),\n                onClick: ()=>{\n                    n && n({\n                        msg: \"clear_pin\"\n                    });\n                }\n            });\n        }, [\n            e,\n            n,\n            t\n        ])\n    };\n}\nfunction Mt(e = {}) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(e.participant), { className: n, connectionQualityObserver: a } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.d)(t), [\n        t\n    ]), s = b(a, livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionQuality.Unknown);\n    return {\n        className: n,\n        quality: s\n    };\n}\nfunction O(e) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e), n = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.e)(t), [\n        t\n    ]);\n    return b(n, t.state);\n}\nfunction yt(e, t) {\n    const n = typeof e == \"function\" ? e : t, a = typeof e == \"string\" ? e : void 0, s = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), { send: c, messageObservable: o, isSendingObservable: u } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.g)(s, a, n), [\n        s,\n        a,\n        n\n    ]), i = b(o, void 0), d = b(u, !1);\n    return {\n        message: i,\n        send: c,\n        isSending: d\n    };\n}\nfunction Pt(e) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), n = O(t);\n    return {\n        buttonProps: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n            const { className: s, disconnect: c } = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.h)(t);\n            return (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(e, {\n                className: s,\n                onClick: ()=>c(e.stopTracks ?? !0),\n                disabled: n === livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Disconnected\n            });\n        }, [\n            t,\n            e,\n            n\n        ])\n    };\n}\nfunction Ye(e) {\n    if (e.publication instanceof livekit_client__WEBPACK_IMPORTED_MODULE_1__.LocalTrackPublication) {\n        const t = e.publication.track;\n        if (t) {\n            const { facingMode: n } = (0,livekit_client__WEBPACK_IMPORTED_MODULE_1__.facingModeFromLocalTrack)(t);\n            return n;\n        }\n    }\n    return \"undefined\";\n}\nfunction kt({ trackRef: e, props: t }) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.i)(e), a = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.j)(), { className: s } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.k)(), []), c = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.m)(n, a == null ? void 0 : a.pin.state), [\n        n,\n        a == null ? void 0 : a.pin.state\n    ]);\n    return {\n        mergedProps: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(t, {\n                className: s,\n                onClick: (u)=>{\n                    var i, d, f, l, p;\n                    (i = t.onClick) == null || i.call(t, u), c ? (f = a == null ? void 0 : (d = a.pin).dispatch) == null || f.call(d, {\n                        msg: \"clear_pin\"\n                    }) : (p = a == null ? void 0 : (l = a.pin).dispatch) == null || p.call(l, {\n                        msg: \"set_pin\",\n                        trackReference: n\n                    });\n                }\n            }), [\n            t,\n            s,\n            n,\n            c,\n            a == null ? void 0 : a.pin\n        ]),\n        inFocus: c\n    };\n}\nfunction Et(e, t, n = {}) {\n    const a = n.gridLayouts ?? _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.G, { width: s, height: c } = Xe(e), o = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.n)(a, t, s, c);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        e.current && o && (e.current.style.setProperty(\"--lk-col-count\", o == null ? void 0 : o.columns.toString()), e.current.style.setProperty(\"--lk-row-count\", o == null ? void 0 : o.rows.toString()));\n    }, [\n        e,\n        o\n    ]), {\n        layout: o,\n        containerWidth: s,\n        containerHeight: c\n    };\n}\nfunction U(e, t = {}) {\n    var u, i;\n    const n = typeof e == \"string\" ? t.participant : e.participant, a = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(n), s = typeof e == \"string\" ? {\n        participant: a,\n        source: e\n    } : e, [c, o] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!!((u = s.publication) != null && u.isMuted || (i = a.getTrackPublication(s.source)) != null && i.isMuted));\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const d = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.o)(s).subscribe(o);\n        return ()=>d.unsubscribe();\n    }, [\n        (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.p)(s)\n    ]), c;\n}\nfunction Ze(e) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(e), n = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.q)(t), [\n        t\n    ]);\n    return b(n, t.isSpeaking);\n}\nfunction Ke(e = {}) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e.room), [n, a] = react__WEBPACK_IMPORTED_MODULE_0__.useState(t.localParticipant), [s, c] = react__WEBPACK_IMPORTED_MODULE_0__.useState(n.isMicrophoneEnabled), [o, u] = react__WEBPACK_IMPORTED_MODULE_0__.useState(n.isMicrophoneEnabled), [i, d] = react__WEBPACK_IMPORTED_MODULE_0__.useState(n.lastMicrophoneError), [f, l] = react__WEBPACK_IMPORTED_MODULE_0__.useState(n.lastCameraError), [p, S] = react__WEBPACK_IMPORTED_MODULE_0__.useState(n.isMicrophoneEnabled), [g, m] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0), [y, h] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0), P = (M)=>{\n        u(M.isCameraEnabled), c(M.isMicrophoneEnabled), S(M.isScreenShareEnabled), h(M.cameraTrack), m(M.microphoneTrack), d(M.participant.lastMicrophoneError), l(M.participant.lastCameraError), a(M.participant);\n    };\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const M = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.t)(t.localParticipant).subscribe(P);\n        return ()=>M.unsubscribe();\n    }, [\n        t\n    ]), {\n        isMicrophoneEnabled: s,\n        isScreenShareEnabled: p,\n        isCameraEnabled: o,\n        microphoneTrack: g,\n        cameraTrack: y,\n        lastMicrophoneError: i,\n        lastCameraError: f,\n        localParticipant: n\n    };\n}\nfunction Tt() {\n    const e = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), t = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.v)(e.localParticipant), [\n        e\n    ]);\n    return b(t, e.localParticipant.permissions);\n}\nfunction wt({ kind: e, room: t, track: n, requestPermissions: a, onError: s }) {\n    const c = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.w)(), o = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>t ?? c ?? new livekit_client__WEBPACK_IMPORTED_MODULE_1__.Room(), [\n        t,\n        c\n    ]), u = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.x)(e, s, a), [\n        e,\n        a,\n        s\n    ]), i = b(u, []), [d, f] = react__WEBPACK_IMPORTED_MODULE_0__.useState((o == null ? void 0 : o.getActiveDevice(e)) ?? \"default\"), { className: l, activeDeviceObservable: p, setActiveMediaDevice: S } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.y)(e, o), [\n        e,\n        o,\n        n\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const g = p.subscribe((m)=>{\n            m && (_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.info(\"setCurrentDeviceId\", m), f(m));\n        });\n        return ()=>{\n            g == null || g.unsubscribe();\n        };\n    }, [\n        p\n    ]), {\n        devices: i,\n        className: l,\n        activeDeviceId: d,\n        setActiveMediaDevice: S\n    };\n}\nfunction At({ kind: e, onError: t }) {\n    const n = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.x)(e, t), [\n        e,\n        t\n    ]);\n    return b(n, []);\n}\nfunction et(e, t, n = {}) {\n    const a = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]), s = react__WEBPACK_IMPORTED_MODULE_0__.useRef(-1), c = t !== s.current, o = typeof n.customSortFunction == \"function\" ? n.customSortFunction(e) : (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.z)(e);\n    let u = [\n        ...o\n    ];\n    if (c === !1) try {\n        u = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.A)(a.current, o, t);\n    } catch (i) {\n        _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.error(\"Error while running updatePages(): \", i);\n    }\n    return c ? a.current = o : a.current = u, s.current = t, u;\n}\nfunction Ct(e, t) {\n    const [n, a] = react__WEBPACK_IMPORTED_MODULE_0__.useState(1), s = Math.max(Math.ceil(t.length / e), 1);\n    n > s && a(s);\n    const c = n * e, o = c - e, u = (l)=>{\n        a((p)=>l === \"next\" ? p === s ? p : p + 1 : p === 1 ? p : p - 1);\n    }, i = (l)=>{\n        l > s ? a(s) : l < 1 ? a(1) : a(l);\n    }, f = et(t, e).slice(o, c);\n    return {\n        totalPageCount: s,\n        nextPage: ()=>u(\"next\"),\n        prevPage: ()=>u(\"previous\"),\n        setPage: i,\n        firstItemIndex: o,\n        lastItemIndex: c,\n        tracks: f,\n        currentPage: n\n    };\n}\nfunction Ot(e = {}) {\n    let t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.B)();\n    e.participant && (t = e.participant);\n    const n = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.C)(t), [\n        t\n    ]), { identity: a, name: s, metadata: c } = b(n, {\n        name: t == null ? void 0 : t.name,\n        identity: t == null ? void 0 : t.identity,\n        metadata: t == null ? void 0 : t.metadata\n    });\n    return {\n        identity: a,\n        name: s,\n        metadata: c\n    };\n}\nfunction It(e = {}) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(e.participant), n = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.v)(t), [\n        t\n    ]);\n    return b(n, t.permissions);\n}\nfunction Dt({ trackRef: e, onParticipantClick: t, disableSpeakingIndicator: n, htmlProps: a }) {\n    const s = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.i)(e), c = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const { className: p } = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.D)();\n        return (0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(a, {\n            className: p,\n            onClick: (S)=>{\n                var g;\n                if ((g = a.onClick) == null || g.call(a, S), typeof t == \"function\") {\n                    const m = s.publication ?? s.participant.getTrackPublication(s.source);\n                    t({\n                        participant: s.participant,\n                        track: m\n                    });\n                }\n            }\n        });\n    }, [\n        a,\n        t,\n        s.publication,\n        s.source,\n        s.participant\n    ]), o = s.participant.getTrackPublication(livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone), u = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>({\n            participant: s.participant,\n            source: livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone,\n            publication: o\n        }), [\n        o,\n        s.participant\n    ]), i = U(s), d = U(u), f = Ze(s.participant), l = Ye(s);\n    return {\n        elementProps: {\n            \"data-lk-audio-muted\": d,\n            \"data-lk-video-muted\": i,\n            \"data-lk-speaking\": n === !0 ? !1 : f,\n            \"data-lk-local-participant\": s.participant.isLocal,\n            \"data-lk-source\": s.source,\n            \"data-lk-facing-mode\": l,\n            ...c\n        }\n    };\n}\nfunction H(e = {}) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e.room), [n, a] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const s = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.E)(t, {\n            additionalRoomEvents: e.updateOnlyOn\n        }).subscribe(a);\n        return ()=>s.unsubscribe();\n    }, [\n        t,\n        JSON.stringify(e.updateOnlyOn)\n    ]), n;\n}\nfunction Lt(e = {}) {\n    const t = H(e), { localParticipant: n } = Ke(e);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>[\n            n,\n            ...t\n        ], [\n        n,\n        t\n    ]);\n}\nfunction Rt(e) {\n    return e = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.F)(e), react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(e == null ? void 0 : e.pin.state) !== void 0 && e.pin.state.length >= 1 ? e.pin.state : [], [\n        e.pin.state\n    ]);\n}\nfunction Nt(e, t = {}) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), [a] = react__WEBPACK_IMPORTED_MODULE_0__.useState(t.updateOnlyOn), s = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>typeof e == \"string\" ? (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.H)(n, e, {\n            additionalEvents: a\n        }) : (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.I)(n, e, {\n            additionalEvents: a\n        }), [\n        n,\n        JSON.stringify(e),\n        a\n    ]), [c, o] = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n        p: void 0\n    });\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const u = s.subscribe((i)=>o({\n                p: i\n            }));\n        return ()=>u.unsubscribe();\n    }, [\n        s\n    ]), c.p;\n}\nfunction Ft(e = {}) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e.room), n = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.J)(t), [\n        t\n    ]), { name: a, metadata: s } = b(n, {\n        name: t.name,\n        metadata: t.metadata\n    });\n    return {\n        name: a,\n        metadata: s\n    };\n}\nfunction tt() {\n    const e = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), t = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.K)(e), [\n        e\n    ]);\n    return b(t, e.activeSpeakers);\n}\nfunction Vt(e) {\n    const [t, n] = react__WEBPACK_IMPORTED_MODULE_0__.useState((0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.M)(e)), a = tt();\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        n((0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.M)(e));\n    }, [\n        a,\n        e\n    ]), t;\n}\nfunction Bt({ room: e, props: t }) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e), { className: a, roomAudioPlaybackAllowedObservable: s, handleStartAudioPlayback: c } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.N)(), []), o = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>s(n), [\n        n,\n        s\n    ]), { canPlayAudio: u } = b(o, {\n        canPlayAudio: n.canPlaybackAudio\n    });\n    return {\n        mergedProps: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(t, {\n                className: a,\n                onClick: ()=>{\n                    c(n);\n                },\n                style: {\n                    display: u ? \"none\" : \"block\"\n                }\n            }), [\n            t,\n            a,\n            u,\n            c,\n            n\n        ]),\n        canPlayAudio: u\n    };\n}\nfunction zt({ room: e, props: t }) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e), { className: a, roomVideoPlaybackAllowedObservable: s, handleStartVideoPlayback: c } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.O)(), []), o = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>s(n), [\n        n,\n        s\n    ]), { canPlayVideo: u } = b(o, {\n        canPlayVideo: n.canPlaybackVideo\n    });\n    return {\n        mergedProps: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(t, {\n                className: a,\n                onClick: ()=>{\n                    c(n);\n                },\n                style: {\n                    display: u ? \"none\" : \"block\"\n                }\n            }), [\n            t,\n            a,\n            u,\n            c,\n            n\n        ]),\n        canPlayVideo: u\n    };\n}\nfunction Ut(e, t = {}) {\n    const n = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), a = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null), s = t.minSwipeDistance ?? 50, c = (i)=>{\n        a.current = null, n.current = i.targetTouches[0].clientX;\n    }, o = (i)=>{\n        a.current = i.targetTouches[0].clientX;\n    }, u = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(()=>{\n        if (!n.current || !a.current) return;\n        const i = n.current - a.current, d = i > s, f = i < -s;\n        d && t.onLeftSwipe && t.onLeftSwipe(), f && t.onRightSwipe && t.onRightSwipe();\n    }, [\n        s,\n        t\n    ]);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const i = e.current;\n        return i && (i.addEventListener(\"touchstart\", c, {\n            passive: !0\n        }), i.addEventListener(\"touchmove\", o, {\n            passive: !0\n        }), i.addEventListener(\"touchend\", u, {\n            passive: !0\n        })), ()=>{\n            i && (i.removeEventListener(\"touchstart\", c), i.removeEventListener(\"touchmove\", o), i.removeEventListener(\"touchend\", u));\n        };\n    }, [\n        e,\n        u\n    ]);\n}\nfunction qt({ props: e }) {\n    const { dispatch: t, state: n } = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a)().widget, { className: a } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.P)(), []);\n    return {\n        mergedProps: react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(e, {\n                className: a,\n                onClick: ()=>{\n                    t && t({\n                        msg: \"toggle_chat\"\n                    });\n                },\n                \"aria-pressed\": n != null && n.showChat ? \"true\" : \"false\",\n                \"data-lk-unread-msgs\": n ? n.unreadMessages < 10 ? n.unreadMessages.toFixed(0) : \"9+\" : \"0\"\n            }), [\n            e,\n            a,\n            t,\n            n\n        ])\n    };\n}\nfunction _t(e, t, n = {}) {\n    const [a, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState(void 0);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        var o;\n        if (e === void 0) throw Error(\"token endpoint needs to be defined\");\n        if (((o = n.userInfo) == null ? void 0 : o.identity) === void 0) return;\n        (async ()=>{\n            _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(\"fetching token\");\n            const u = new URLSearchParams({\n                ...n.userInfo,\n                roomName: t\n            }), i = await fetch(`${e}?${u.toString()}`);\n            if (!i.ok) {\n                _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.error(`Could not fetch token. Server responded with status ${i.status}: ${i.statusText}`);\n                return;\n            }\n            const { accessToken: d } = await i.json();\n            s(d);\n        })();\n    }, [\n        e,\n        t,\n        JSON.stringify(n)\n    ]), a;\n}\nfunction Jt(e) {\n    var c, o;\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.i)(e), { className: n, mediaMutedObserver: a } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.Q)(t), [\n        (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.p)(t)\n    ]);\n    return {\n        isMuted: b(a, !!((c = t.publication) != null && c.isMuted || (o = t.participant.getTrackPublication(t.source)) != null && o.isMuted)),\n        className: n\n    };\n}\nfunction xt({ source: e, onChange: t, initialState: n, captureOptions: a, publishOptions: s, onDeviceError: c, ...o }) {\n    var P;\n    const u = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.w)(), i = (P = u == null ? void 0 : u.localParticipant) == null ? void 0 : P.getTrackPublication(e), d = react__WEBPACK_IMPORTED_MODULE_0__.useRef(!1), { toggle: f, className: l, pendingObserver: p, enabledObserver: S } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>u ? (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.S)(e, u, a, s, c) : (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.T)(), [\n        u,\n        e,\n        JSON.stringify(a),\n        s\n    ]), g = b(p, !1), m = b(S, n ?? !!(i != null && i.isEnabled));\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        t == null || t(m, d.current), d.current = !1;\n    }, [\n        m,\n        t\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        n !== void 0 && (_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(\"forcing initial toggle state\", e, n), f(n));\n    }, []);\n    const y = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_room_BgiuQa2X_mjs__WEBPACK_IMPORTED_MODULE_3__.m)(o, {\n            className: l\n        }), [\n        o,\n        l\n    ]), h = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((M)=>{\n        var I;\n        d.current = !0, f().catch(()=>d.current = !1), (I = o.onClick) == null || I.call(o, M);\n    }, [\n        o,\n        f\n    ]);\n    return {\n        toggle: f,\n        enabled: m,\n        pending: g,\n        track: i,\n        buttonProps: {\n            ...y,\n            \"aria-pressed\": m,\n            \"data-lk-source\": e,\n            \"data-lk-enabled\": m,\n            disabled: g,\n            onClick: h\n        }\n    };\n}\nfunction Wt(e = [\n    livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera,\n    livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone,\n    livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.ScreenShare,\n    livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.ScreenShareAudio,\n    livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Unknown\n], t = {}) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(t.room), [a, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]), [c, o] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]), u = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>e.map((d)=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.U)(d) ? d.source : d), [\n        JSON.stringify(e)\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const d = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.V)(n, u, {\n            additionalRoomEvents: t.updateOnlyOn,\n            onlySubscribed: t.onlySubscribed\n        }).subscribe(({ trackReferences: f, participants: l })=>{\n            _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(\"setting track bundles\", f, l), s(f), o(l);\n        });\n        return ()=>d.unsubscribe();\n    }, [\n        n,\n        JSON.stringify(t.onlySubscribed),\n        JSON.stringify(t.updateOnlyOn),\n        JSON.stringify(e)\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        if ((0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.W)(e)) {\n            const d = st(e, c), f = Array.from(a);\n            return c.forEach((l)=>{\n                d.has(l.identity) && (d.get(l.identity) ?? []).forEach((S)=>{\n                    if (a.find(({ participant: m, publication: y })=>l.identity === m.identity && y.source === S)) return;\n                    _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(`Add ${S} placeholder for participant ${l.identity}.`);\n                    const g = {\n                        participant: l,\n                        source: S\n                    };\n                    f.push(g);\n                });\n            }), f;\n        } else return a;\n    }, [\n        a,\n        c,\n        e\n    ]);\n}\nfunction nt(e, t) {\n    const n = new Set(e);\n    for (const a of t)n.delete(a);\n    return n;\n}\nfunction st(e, t) {\n    const n = /* @__PURE__ */ new Map();\n    if ((0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.W)(e)) {\n        const a = e.filter((s)=>s.withPlaceholder).map((s)=>s.source);\n        t.forEach((s)=>{\n            const c = s.getTrackPublications().map((u)=>{\n                var i;\n                return (i = u.track) == null ? void 0 : i.source;\n            }).filter((u)=>u !== void 0), o = Array.from(nt(new Set(a), new Set(c)));\n            o.length > 0 && n.set(s.identity, o);\n        });\n    }\n    return n;\n}\nfunction at(e) {\n    const [t, n] = react__WEBPACK_IMPORTED_MODULE_0__.useState((0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.X)(e)), { trackObserver: a } = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.Y)(e), [\n        e.participant.sid ?? e.participant.identity,\n        e.source\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        const s = a.subscribe((c)=>{\n            n(c);\n        });\n        return ()=>s == null ? void 0 : s.unsubscribe();\n    }, [\n        a\n    ]), {\n        participant: e.participant,\n        source: e.source ?? livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Unknown,\n        publication: t\n    };\n}\nfunction Gt(e, t) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(t);\n    return at({\n        name: e,\n        participant: n\n    });\n}\nfunction Qt(e) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), n = O(t), a = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>n === livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Disconnected, [\n        n\n    ]), s = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.Z)(t, e), [\n        t,\n        e,\n        a\n    ]), c = b(s.isSendingObservable, !1), o = b(s.messageObservable, []);\n    return {\n        send: s.send,\n        chatMessages: o,\n        isSending: c\n    };\n}\nfunction $t(e = {}) {\n    const [t, n] = react__WEBPACK_IMPORTED_MODULE_0__.useState((0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__._)(e.defaults, e.preventLoad ?? !1)), a = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((i)=>{\n        n((d)=>({\n                ...d,\n                audioEnabled: i\n            }));\n    }, []), s = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((i)=>{\n        n((d)=>({\n                ...d,\n                videoEnabled: i\n            }));\n    }, []), c = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((i)=>{\n        n((d)=>({\n                ...d,\n                audioDeviceId: i\n            }));\n    }, []), o = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((i)=>{\n        n((d)=>({\n                ...d,\n                videoDeviceId: i\n            }));\n    }, []), u = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((i)=>{\n        n((d)=>({\n                ...d,\n                username: i\n            }));\n    }, []);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.$)(t, e.preventSave ?? !1);\n    }, [\n        t,\n        e.preventSave\n    ]), {\n        userChoices: t,\n        saveAudioInputEnabled: a,\n        saveVideoInputEnabled: s,\n        saveAudioInputDeviceId: c,\n        saveVideoInputDeviceId: o,\n        saveUsername: u\n    };\n}\nfunction Ht(e, t = {}) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(e), a = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(t.room), s = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a0)(a, n), [\n        a,\n        n\n    ]);\n    return b(s, n.isLocal ? n.isE2EEEnabled : !!(n != null && n.isEncrypted));\n}\nfunction jt(e, t = {\n    fftSize: 32,\n    smoothingTimeConstant: 0\n}) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a1)(e) ? e.publication.track : e, [a, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!n || !n.mediaStream) return;\n        const { cleanup: c, analyser: o } = (0,livekit_client__WEBPACK_IMPORTED_MODULE_1__.createAudioAnalyser)(n, t), u = o.frequencyBinCount, i = new Uint8Array(u), f = setInterval(()=>{\n            o.getByteFrequencyData(i);\n            let l = 0;\n            for(let p = 0; p < i.length; p++){\n                const S = i[p];\n                l += S * S;\n            }\n            s(Math.sqrt(l / i.length) / 255);\n        }, 1e3 / 30);\n        return ()=>{\n            c(), clearInterval(f);\n        };\n    }, [\n        n,\n        n == null ? void 0 : n.mediaStream,\n        JSON.stringify(t)\n    ]), a;\n}\nconst rt = (e)=>{\n    const t = (n)=>{\n        let c = 1 - Math.max(-100, Math.min(-10, n)) * -1 / 100;\n        return c = Math.sqrt(c), c;\n    };\n    return e.map((n)=>n === -1 / 0 ? 0 : t(n));\n}, ct = {\n    bands: 5,\n    loPass: 100,\n    hiPass: 600,\n    updateInterval: 32,\n    analyserOptions: {\n        fftSize: 2048\n    }\n};\nfunction Xt(e, t = {}) {\n    var o;\n    const n = e instanceof livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track ? e : (o = e == null ? void 0 : e.publication) == null ? void 0 : o.track, a = {\n        ...ct,\n        ...t\n    }, [s, c] = react__WEBPACK_IMPORTED_MODULE_0__.useState(new Array(a.bands).fill(0));\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!n || !(n != null && n.mediaStream)) return;\n        const { analyser: u, cleanup: i } = (0,livekit_client__WEBPACK_IMPORTED_MODULE_1__.createAudioAnalyser)(n, a.analyserOptions), d = u.frequencyBinCount, f = new Float32Array(d), p = setInterval(()=>{\n            u.getFloatFrequencyData(f);\n            let S = new Float32Array(f.length);\n            for(let h = 0; h < f.length; h++)S[h] = f[h];\n            S = S.slice(t.loPass, t.hiPass);\n            const g = rt(S), m = Math.ceil(g.length / a.bands), y = [];\n            for(let h = 0; h < a.bands; h++){\n                const P = g.slice(h * m, (h + 1) * m).reduce((M, I)=>M += I, 0);\n                y.push(P / m);\n            }\n            c(y);\n        }, a.updateInterval);\n        return ()=>{\n            i(), clearInterval(p);\n        };\n    }, [\n        n,\n        n == null ? void 0 : n.mediaStream,\n        JSON.stringify(t)\n    ]), s;\n}\nconst ot = {\n    barCount: 120,\n    volMultiplier: 5,\n    updateInterval: 20\n};\nfunction Yt(e, t = {}) {\n    var f;\n    const n = e instanceof livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track ? e : (f = e == null ? void 0 : e.publication) == null ? void 0 : f.track, a = {\n        ...ot,\n        ...t\n    }, s = react__WEBPACK_IMPORTED_MODULE_0__.useRef(new Float32Array()), c = react__WEBPACK_IMPORTED_MODULE_0__.useRef(performance.now()), o = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0), [u, i] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]), d = react__WEBPACK_IMPORTED_MODULE_0__.useCallback((l)=>{\n        i(Array.from(ut(l, a.barCount).map((p)=>Math.sqrt(p) * a.volMultiplier)));\n    }, []);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!n || !(n != null && n.mediaStream)) return;\n        const { analyser: l, cleanup: p } = (0,livekit_client__WEBPACK_IMPORTED_MODULE_1__.createAudioAnalyser)(n, {\n            fftSize: q(a.barCount)\n        }), S = q(a.barCount), g = new Float32Array(S), m = ()=>{\n            if (y = requestAnimationFrame(m), l.getFloatTimeDomainData(g), s.current.map((h, P)=>h + g[P]), o.current += 1, performance.now() - c.current >= a.updateInterval) {\n                const h = g.map((P)=>P / o.current);\n                d(h), c.current = performance.now(), o.current = 0;\n            }\n        };\n        let y = requestAnimationFrame(m);\n        return ()=>{\n            p(), cancelAnimationFrame(y);\n        };\n    }, [\n        n,\n        n == null ? void 0 : n.mediaStream,\n        JSON.stringify(t),\n        d\n    ]), {\n        bars: u\n    };\n}\nfunction q(e) {\n    return e < 32 ? 32 : it(e);\n}\nfunction it(e) {\n    let t = 2;\n    for(; e >>= 1;)t <<= 1;\n    return t;\n}\nfunction ut(e, t) {\n    const n = Math.floor(e.length / t), a = new Float32Array(t);\n    for(let s = 0; s < t; s++){\n        const c = n * s;\n        let o = 0;\n        for(let u = 0; u < n; u++)o = o + Math.abs(e[c + u]);\n        a[s] = o / n;\n    }\n    return a;\n}\nfunction _(e, t) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), a = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.B)(), s = t ? n.getParticipantByIdentity(t) : a, c = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>s ? (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a2)(s, {\n            sources: e\n        }) : void 0, [\n        s == null ? void 0 : s.sid,\n        s == null ? void 0 : s.identity,\n        JSON.stringify(e)\n    ]);\n    return b(c, []);\n}\nfunction dt(e) {\n    var n, a, s;\n    const t = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        var c;\n        return (c = e == null ? void 0 : e.publication) != null && c.track ? (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a3)(e == null ? void 0 : e.publication.track) : void 0;\n    }, [\n        (n = e == null ? void 0 : e.publication) == null ? void 0 : n.track\n    ]);\n    return b(t, {\n        timestamp: Date.now(),\n        rtpTimestamp: (s = (a = e == null ? void 0 : e.publication) == null ? void 0 : a.track) == null ? void 0 : s.rtpTimestamp\n    });\n}\nconst lt = {\n    bufferSize: 100\n};\nfunction ft(e, t) {\n    const n = {\n        ...lt,\n        ...t\n    }, [a, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState([]), c = dt(e), o = (u)=>{\n        var i;\n        (i = n.onTranscription) == null || i.call(n, u), s((d)=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a5)(d, // when first receiving a segment, add the current media timestamp to it\n            u.map((f)=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a6)(f, c)), n.bufferSize));\n    };\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!(e != null && e.publication)) return;\n        const u = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a4)(e.publication).subscribe((i)=>{\n            o(...i);\n        });\n        return ()=>{\n            u.unsubscribe();\n        };\n    }, [\n        e && (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.p)(e),\n        o\n    ]), {\n        segments: a\n    };\n}\nfunction pt(e = {}) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.B)(), n = e.participant ?? t, a = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(// weird typescript constraint\n    ()=>n ? (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a7)(n) : (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a7)(n), [\n        n\n    ]);\n    return b(a, {\n        attributes: n == null ? void 0 : n.attributes\n    });\n}\nfunction Zt(e, t = {}) {\n    const n = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.c)(t.participant), [a, s] = react__WEBPACK_IMPORTED_MODULE_0__.useState(n.attributes[e]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!n) return;\n        const c = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a7)(n).subscribe((o)=>{\n            o.changed[e] !== void 0 && s(o.attributes[e]);\n        });\n        return ()=>{\n            c.unsubscribe();\n        };\n    }, [\n        n,\n        e\n    ]), a;\n}\nconst J = \"lk.agent.state\";\nfunction Kt() {\n    const e = H(), t = e.find((l)=>l.kind === livekit_client__WEBPACK_IMPORTED_MODULE_1__.ParticipantKind.AGENT && !(\"lk.publish_on_behalf\" in l.attributes)), n = e.find((l)=>l.kind === livekit_client__WEBPACK_IMPORTED_MODULE_1__.ParticipantKind.AGENT && l.attributes[\"lk.publish_on_behalf\"] === (t == null ? void 0 : t.identity)), a = _([\n        livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone,\n        livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera\n    ], t == null ? void 0 : t.identity), s = _([\n        livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone,\n        livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera\n    ], n == null ? void 0 : n.identity), c = a.find((l)=>l.source === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone) ?? s.find((l)=>l.source === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Microphone), o = a.find((l)=>l.source === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera) ?? s.find((l)=>l.source === livekit_client__WEBPACK_IMPORTED_MODULE_1__.Track.Source.Camera), { segments: u } = ft(c), i = O(), { attributes: d } = pt({\n        participant: t\n    }), f = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>i === livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Disconnected ? \"disconnected\" : i === livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Connecting || !t || !(d != null && d[J]) ? \"connecting\" : d[J], [\n        d,\n        t,\n        i\n    ]);\n    return {\n        agent: t,\n        state: f,\n        audioTrack: c,\n        videoTrack: o,\n        agentTranscriptions: u,\n        agentAttributes: d\n    };\n}\nfunction en(e) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.u)(e), n = O(t), a = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a8)(t), [\n        t,\n        n\n    ]);\n    return b(a, t.isRecording);\n}\nfunction tn(e) {\n    const t = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.f)(), a = O(t) === livekit_client__WEBPACK_IMPORTED_MODULE_1__.ConnectionState.Disconnected, s = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>(0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.a9)(t, e), [\n        t,\n        e\n    ]);\n    return {\n        textStreams: b(a ? void 0 : s, [])\n    };\n}\n //# sourceMappingURL=hooks-CWooKGw2.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-react/dist/hooks-CWooKGw2.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@livekit/components-react/dist/room-BgiuQa2X.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@livekit/components-react/dist/room-BgiuQa2X.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   L: () => (/* binding */ Q),\n/* harmony export */   a: () => (/* binding */ B),\n/* harmony export */   c: () => (/* binding */ G),\n/* harmony export */   m: () => (/* binding */ M),\n/* harmony export */   r: () => (/* binding */ J),\n/* harmony export */   u: () => (/* binding */ q),\n/* harmony export */   w: () => (/* binding */ H)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./contexts-CPsnPrz2.mjs */ \"(ssr)/./node_modules/@livekit/components-react/dist/contexts-CPsnPrz2.mjs\");\n/* harmony import */ var livekit_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! livekit-client */ \"(ssr)/./node_modules/livekit-client/dist/livekit-client.esm.mjs\");\n\n\n\nfunction L(n) {\n    var e, o, t = \"\";\n    if (typeof n == \"string\" || typeof n == \"number\") t += n;\n    else if (typeof n == \"object\") if (Array.isArray(n)) {\n        var r = n.length;\n        for(e = 0; e < r; e++)n[e] && (o = L(n[e])) && (t && (t += \" \"), t += o);\n    } else for(o in n)n[o] && (t && (t += \" \"), t += o);\n    return t;\n}\nfunction A() {\n    for(var n, e, o = 0, t = \"\", r = arguments.length; o < r; o++)(n = arguments[o]) && (e = L(n)) && (t && (t += \" \"), t += e);\n    return t;\n}\nfunction _(...n) {\n    return (...e)=>{\n        for (const o of n)if (typeof o == \"function\") try {\n            o(...e);\n        } catch (t) {\n            console.error(t);\n        }\n    };\n}\nfunction M(...n) {\n    const e = {\n        ...n[0]\n    };\n    for(let o = 1; o < n.length; o++){\n        const t = n[o];\n        for(const r in t){\n            const d = e[r], a = t[r];\n            typeof d == \"function\" && typeof a == \"function\" && // This is a lot faster than a regex.\n            r[0] === \"o\" && r[1] === \"n\" && r.charCodeAt(2) >= /* 'A' */ 65 && r.charCodeAt(2) <= /* 'Z' */ 90 ? e[r] = _(d, a) : (r === \"className\" || r === \"UNSAFE_className\") && typeof d == \"string\" && typeof a == \"string\" ? e[r] = A(d, a) : e[r] = a !== void 0 ? a : d;\n        }\n    }\n    return e;\n}\nfunction I(n) {\n    return n !== void 0;\n}\nfunction B(...n) {\n    return M(...n.filter(I));\n}\nfunction G(n, e, o) {\n    return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(n, (t)=>/*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(t) && react__WEBPACK_IMPORTED_MODULE_0__.Children.only(n) ? (t.props.class && (e ?? (e = {}), e.class = A(t.props.class, e.class), e.style = {\n            ...t.props.style,\n            ...e.style\n        }), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(t, {\n            ...e,\n            key: o\n        })) : t);\n}\nfunction H(n) {\n    var e, o;\n    if (false) {}\n}\nfunction J(n, e) {\n    return n === \"processor\" && e && typeof e == \"object\" && \"name\" in e ? e.name : n === \"e2ee\" && e ? \"e2ee-enabled\" : e;\n}\nconst T = {\n    connect: !0,\n    audio: !1,\n    video: !1\n};\nfunction q(n) {\n    const { token: e, serverUrl: o, options: t, room: r, connectOptions: d, connect: a, audio: p, video: y, screen: g, onConnected: v, onDisconnected: h, onError: c, onMediaDeviceFailure: b, onEncryptionError: E, simulateParticipants: w, ...P } = {\n        ...T,\n        ...n\n    };\n    t && r && _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.warn(\"when using a manually created room, the options object will be ignored. set the desired options directly when creating the room instead.\");\n    const [s, O] = react__WEBPACK_IMPORTED_MODULE_0__.useState(), C = react__WEBPACK_IMPORTED_MODULE_0__.useRef(a);\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        O(r ?? new livekit_client__WEBPACK_IMPORTED_MODULE_1__.Room(t));\n    }, [\n        r,\n        JSON.stringify(t, J)\n    ]);\n    const F = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(()=>{\n        const { className: m } = (0,_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.s)();\n        return M(P, {\n            className: m\n        });\n    }, [\n        P\n    ]);\n    return react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (!s) return;\n        const m = ()=>{\n            const f = s.localParticipant;\n            _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(\"trying to publish local tracks\"), Promise.all([\n                f.setMicrophoneEnabled(!!p, typeof p != \"boolean\" ? p : void 0),\n                f.setCameraEnabled(!!y, typeof y != \"boolean\" ? y : void 0),\n                f.setScreenShareEnabled(!!g, typeof g != \"boolean\" ? g : void 0)\n            ]).catch((R)=>{\n                _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.warn(R), c == null || c(R);\n            });\n        }, S = (f)=>{\n            const R = livekit_client__WEBPACK_IMPORTED_MODULE_1__.MediaDeviceFailure.getFailure(f);\n            b == null || b(R);\n        }, k = (f)=>{\n            E == null || E(f);\n        }, N = (f)=>{\n            h == null || h(f);\n        }, D = ()=>{\n            v == null || v();\n        };\n        return s.on(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.SignalConnected, m).on(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.MediaDevicesError, S).on(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.EncryptionError, k).on(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.Disconnected, N).on(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.Connected, D), ()=>{\n            s.off(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.SignalConnected, m).off(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.MediaDevicesError, S).off(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.EncryptionError, k).off(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.Disconnected, N).off(livekit_client__WEBPACK_IMPORTED_MODULE_1__.RoomEvent.Connected, D);\n        };\n    }, [\n        s,\n        p,\n        y,\n        g,\n        c,\n        E,\n        b,\n        v,\n        h\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (s) {\n            if (w) {\n                s.simulateParticipants({\n                    participants: {\n                        count: w\n                    },\n                    publish: {\n                        audio: !0,\n                        useRealTracks: !0\n                    }\n                });\n                return;\n            }\n            if (a) {\n                if (C.current = !0, _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(\"connecting\"), !e) {\n                    _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(\"no token yet\");\n                    return;\n                }\n                if (!o) {\n                    _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.warn(\"no livekit url provided\"), c == null || c(Error(\"no livekit url provided\"));\n                    return;\n                }\n                s.connect(o, e, d).catch((m)=>{\n                    _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.warn(m), C.current === !0 && (c == null || c(m));\n                });\n            } else _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.debug(\"disconnecting because connect is false\"), C.current = !1, s.disconnect();\n        }\n    }, [\n        a,\n        e,\n        JSON.stringify(d),\n        s,\n        c,\n        o,\n        w\n    ]), react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        if (s) return ()=>{\n            _contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.l.info(\"disconnecting on onmount\"), s.disconnect();\n        };\n    }, [\n        s\n    ]), {\n        room: s,\n        htmlProps: F\n    };\n}\nconst Q = /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(e, o) {\n    const { room: t, htmlProps: r } = q(e);\n    return /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        ref: o,\n        ...r\n    }, t && /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.R.Provider, {\n        value: t\n    }, /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_contexts_CPsnPrz2_mjs__WEBPACK_IMPORTED_MODULE_2__.L.Provider, {\n        value: e.featureFlags\n    }, e.children)));\n});\n //# sourceMappingURL=room-BgiuQa2X.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@livekit/components-react/dist/room-BgiuQa2X.mjs\n");

/***/ })

};
;